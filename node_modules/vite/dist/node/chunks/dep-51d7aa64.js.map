{"version":3,"file":"dep-51d7aa64.js","sources":["../../../src/node/constants.ts","../../../src/node/utils.ts","../../../src/node/logger.ts","../../../src/node/plugins/reporter.ts","../../../node_modules/mime/Mime.js","../../../node_modules/mime/types/standard.js","../../../node_modules/mime/lite.js","../../../src/node/plugins/asset.ts","../../../src/node/plugins/css.ts","../../../src/node/importGlob.ts","../../../src/node/plugins/importAnalysisBuild.ts","../../../src/node/plugins/modulePreloadPolyfill.ts","../../../src/node/plugins/html.ts","../../../src/node/plugins/esbuild.ts","../../../src/node/plugins/terser.ts","../../../src/node/plugins/manifest.ts","../../../src/node/plugins/dataUri.ts","../../../src/node/plugins/resolve.ts","../../../src/node/ssr/ssrExternal.ts","../../../src/node/ssr/ssrManifestPlugin.ts","../../../src/node/server/middlewares/error.ts","../../../src/node/server/pluginContainer.ts","../../../src/node/optimizer/scan.ts","../../../src/node/plugins/assetImportMetaUrl.ts","../../../src/node/plugins/loadFallback.ts","../../../src/node/build.ts","../../../src/node/server/http.ts","../../../src/node/server/ws.ts","../../../src/node/server/middlewares/base.ts","../../../src/node/server/middlewares/proxy.ts","../../../src/node/server/middlewares/spaFallback.ts","../../../src/node/server/send.ts","../../../src/node/ssr/ssrTransform.ts","../../../src/node/server/sourcemap.ts","../../../src/node/server/middlewares/static.ts","../../../src/node/server/transformRequest.ts","../../../src/node/server/middlewares/transform.ts","../../../src/node/server/middlewares/indexHtml.ts","../../../src/node/server/middlewares/time.ts","../../../src/node/server/moduleGraph.ts","../../../src/node/server/hmr.ts","../../../src/node/server/openBrowser.ts","../../../src/node/optimizer/esbuildDepPlugin.ts","../../../src/node/optimizer/index.ts","../../../src/node/ssr/ssrStacktrace.ts","../../../src/node/ssr/ssrModuleLoader.ts","../../../src/node/optimizer/registerMissing.ts","../../../src/node/server/searchRoot.ts","../../../src/node/server/index.ts","../../../src/node/plugins/json.ts","../../../src/node/plugins/importAnalysis.ts","../../../src/node/plugins/clientInjections.ts","../../../src/node/plugins/wasm.ts","../../../src/node/plugins/worker.ts","../../../src/node/plugins/preAlias.ts","../../../src/node/plugins/define.ts","../../../src/node/plugins/index.ts","../../../src/node/config.ts"],"sourcesContent":["import path from 'path'\n\nexport const DEFAULT_MAIN_FIELDS = [\n  'module',\n  'jsnext:main', // moment still uses this...\n  'jsnext'\n]\n\nexport const DEFAULT_EXTENSIONS = [\n  '.mjs',\n  '.js',\n  '.ts',\n  '.jsx',\n  '.tsx',\n  '.json'\n]\n\nexport const JS_TYPES_RE = /\\.(?:j|t)sx?$|\\.mjs$/\n\nexport const OPTIMIZABLE_ENTRY_RE = /\\.(?:m?js|ts)$/\n\nexport const SPECIAL_QUERY_RE = /[\\?&](?:worker|sharedworker|raw|url)\\b/\n\n/**\n * Prefix for resolved fs paths, since windows paths may not be valid as URLs.\n */\nexport const FS_PREFIX = `/@fs/`\n\n/**\n * Prefix for resolved Ids that are not valid browser import specifiers\n */\nexport const VALID_ID_PREFIX = `/@id/`\n\n/**\n * Some Rollup plugins use ids that starts with the null byte \\0 to avoid\n * collisions, but it is not permitted in import URLs so we have to replace\n * them.\n */\nexport const NULL_BYTE_PLACEHOLDER = `__x00__`\n\nexport const CLIENT_PUBLIC_PATH = `/@vite/client`\nexport const ENV_PUBLIC_PATH = `/@vite/env`\n// eslint-disable-next-line node/no-missing-require\nexport const CLIENT_ENTRY = require.resolve('vite/dist/client/client.mjs')\n// eslint-disable-next-line node/no-missing-require\nexport const ENV_ENTRY = require.resolve('vite/dist/client/env.mjs')\nexport const CLIENT_DIR = path.dirname(CLIENT_ENTRY)\n\n// ** READ THIS ** before editing `KNOWN_ASSET_TYPES`.\n//   If you add an asset to `KNOWN_ASSET_TYPES`, make sure to also add it\n//   to the TypeScript declaration file `packages/vite/client.d.ts`.\nexport const KNOWN_ASSET_TYPES = [\n  // images\n  'png',\n  'jpe?g',\n  'gif',\n  'svg',\n  'ico',\n  'webp',\n  'avif',\n\n  // media\n  'mp4',\n  'webm',\n  'ogg',\n  'mp3',\n  'wav',\n  'flac',\n  'aac',\n\n  // fonts\n  'woff2?',\n  'eot',\n  'ttf',\n  'otf',\n\n  // other\n  'wasm',\n  'webmanifest',\n  'pdf'\n]\n\nexport const DEFAULT_ASSETS_RE = new RegExp(\n  `\\\\.(` + KNOWN_ASSET_TYPES.join('|') + `)(\\\\?.*)?$`\n)\n\nexport const DEP_VERSION_RE = /[\\?&](v=[\\w\\.-]+)\\b/\n","import debug from 'debug'\nimport chalk from 'chalk'\nimport fs from 'fs'\nimport os from 'os'\nimport path from 'path'\nimport { pathToFileURL, URL } from 'url'\nimport {\n  FS_PREFIX,\n  DEFAULT_EXTENSIONS,\n  VALID_ID_PREFIX,\n  CLIENT_PUBLIC_PATH,\n  ENV_PUBLIC_PATH\n} from './constants'\nimport resolve from 'resolve'\nimport builtins from 'builtin-modules'\nimport { FSWatcher } from 'chokidar'\nimport remapping from '@ampproject/remapping'\nimport {\n  DecodedSourceMap,\n  RawSourceMap\n} from '@ampproject/remapping/dist/types/types'\n\nexport function slash(p: string): string {\n  return p.replace(/\\\\/g, '/')\n}\n\n// Strip valid id prefix. This is prepended to resolved Ids that are\n// not valid browser import specifiers by the importAnalysis plugin.\nexport function unwrapId(id: string): string {\n  return id.startsWith(VALID_ID_PREFIX) ? id.slice(VALID_ID_PREFIX.length) : id\n}\n\nexport const flattenId = (id: string): string =>\n  id.replace(/(\\s*>\\s*)/g, '__').replace(/[\\/\\.]/g, '_')\n\nexport const normalizeId = (id: string): string =>\n  id.replace(/(\\s*>\\s*)/g, ' > ')\n\nexport function isBuiltin(id: string): boolean {\n  return builtins.includes(id)\n}\n\nexport const bareImportRE = /^[\\w@](?!.*:\\/\\/)/\nexport const deepImportRE = /^([^@][^/]*)\\/|^(@[^/]+\\/[^/]+)\\//\n\nexport let isRunningWithYarnPnp: boolean\ntry {\n  isRunningWithYarnPnp = Boolean(require('pnpapi'))\n} catch {}\n\nconst ssrExtensions = ['.js', '.cjs', '.json', '.node']\n\nexport function resolveFrom(\n  id: string,\n  basedir: string,\n  preserveSymlinks = false,\n  ssr = false\n): string {\n  return resolve.sync(id, {\n    basedir,\n    extensions: ssr ? ssrExtensions : DEFAULT_EXTENSIONS,\n    // necessary to work with pnpm\n    preserveSymlinks: preserveSymlinks || isRunningWithYarnPnp || false\n  })\n}\n\n/**\n * like `resolveFrom` but supports resolving `>` path in `id`,\n * for example: `foo > bar > baz`\n */\nexport function nestedResolveFrom(\n  id: string,\n  basedir: string,\n  preserveSymlinks = false\n): string {\n  const pkgs = id.split('>').map((pkg) => pkg.trim())\n  try {\n    for (const pkg of pkgs) {\n      basedir = resolveFrom(pkg, basedir, preserveSymlinks)\n    }\n  } catch {}\n  return basedir\n}\n\n// set in bin/vite.js\nconst filter = process.env.VITE_DEBUG_FILTER\n\nconst DEBUG = process.env.DEBUG\n\ninterface DebuggerOptions {\n  onlyWhenFocused?: boolean | string\n}\n\nexport type ViteDebugScope = `vite:${string}`\n\nexport function createDebugger(\n  namespace: ViteDebugScope,\n  options: DebuggerOptions = {}\n): debug.Debugger['log'] {\n  const log = debug(namespace)\n  const { onlyWhenFocused } = options\n  const focus =\n    typeof onlyWhenFocused === 'string' ? onlyWhenFocused : namespace\n  return (msg: string, ...args: any[]) => {\n    if (filter && !msg.includes(filter)) {\n      return\n    }\n    if (onlyWhenFocused && !DEBUG?.includes(focus)) {\n      return\n    }\n    log(msg, ...args)\n  }\n}\n\nexport const isWindows = os.platform() === 'win32'\nconst VOLUME_RE = /^[A-Z]:/i\n\nexport function normalizePath(id: string): string {\n  return path.posix.normalize(isWindows ? slash(id) : id)\n}\n\nexport function fsPathFromId(id: string): string {\n  const fsPath = normalizePath(id.slice(FS_PREFIX.length))\n  return fsPath.startsWith('/') || fsPath.match(VOLUME_RE)\n    ? fsPath\n    : `/${fsPath}`\n}\n\nexport function ensureVolumeInPath(file: string): string {\n  return isWindows ? path.resolve(file) : file\n}\n\nexport const queryRE = /\\?.*$/s\nexport const hashRE = /#.*$/s\n\nexport const cleanUrl = (url: string): string =>\n  url.replace(hashRE, '').replace(queryRE, '')\n\nexport const externalRE = /^(https?:)?\\/\\//\nexport const isExternalUrl = (url: string): boolean => externalRE.test(url)\n\nexport const dataUrlRE = /^\\s*data:/i\nexport const isDataUrl = (url: string): boolean => dataUrlRE.test(url)\n\nconst knownJsSrcRE = /\\.((j|t)sx?|mjs|vue|marko|svelte)($|\\?)/\nexport const isJSRequest = (url: string): boolean => {\n  url = cleanUrl(url)\n  if (knownJsSrcRE.test(url)) {\n    return true\n  }\n  if (!path.extname(url) && !url.endsWith('/')) {\n    return true\n  }\n  return false\n}\n\nconst importQueryRE = /(\\?|&)import=?(?:&|$)/\nconst internalPrefixes = [\n  FS_PREFIX,\n  VALID_ID_PREFIX,\n  CLIENT_PUBLIC_PATH,\n  ENV_PUBLIC_PATH\n]\nconst InternalPrefixRE = new RegExp(`^(?:${internalPrefixes.join('|')})`)\nconst trailingSeparatorRE = /[\\?&]$/\nexport const isImportRequest = (url: string): boolean => importQueryRE.test(url)\nexport const isInternalRequest = (url: string): boolean =>\n  InternalPrefixRE.test(url)\n\nexport function removeImportQuery(url: string): string {\n  return url.replace(importQueryRE, '$1').replace(trailingSeparatorRE, '')\n}\n\nexport function injectQuery(url: string, queryToInject: string): string {\n  // encode percents for consistent behavior with pathToFileURL\n  // see #2614 for details\n  let resolvedUrl = new URL(url.replace(/%/g, '%25'), 'relative:///')\n  if (resolvedUrl.protocol !== 'relative:') {\n    resolvedUrl = pathToFileURL(url)\n  }\n  let { protocol, pathname, search, hash } = resolvedUrl\n  if (protocol === 'file:') {\n    pathname = pathname.slice(1)\n  }\n  pathname = decodeURIComponent(pathname)\n  return `${pathname}?${queryToInject}${search ? `&` + search.slice(1) : ''}${\n    hash || ''\n  }`\n}\n\nconst timestampRE = /\\bt=\\d{13}&?\\b/\nexport function removeTimestampQuery(url: string): string {\n  return url.replace(timestampRE, '').replace(trailingSeparatorRE, '')\n}\n\nexport async function asyncReplace(\n  input: string,\n  re: RegExp,\n  replacer: (match: RegExpExecArray) => string | Promise<string>\n): Promise<string> {\n  let match: RegExpExecArray | null\n  let remaining = input\n  let rewritten = ''\n  while ((match = re.exec(remaining))) {\n    rewritten += remaining.slice(0, match.index)\n    rewritten += await replacer(match)\n    remaining = remaining.slice(match.index + match[0].length)\n  }\n  rewritten += remaining\n  return rewritten\n}\n\nexport function timeFrom(start: number, subtract = 0): string {\n  const time: number | string = Date.now() - start - subtract\n  const timeString = (time + `ms`).padEnd(5, ' ')\n  if (time < 10) {\n    return chalk.green(timeString)\n  } else if (time < 50) {\n    return chalk.yellow(timeString)\n  } else {\n    return chalk.red(timeString)\n  }\n}\n\n/**\n * pretty url for logging.\n */\nexport function prettifyUrl(url: string, root: string): string {\n  url = removeTimestampQuery(url)\n  const isAbsoluteFile = url.startsWith(root)\n  if (isAbsoluteFile || url.startsWith(FS_PREFIX)) {\n    let file = path.relative(root, isAbsoluteFile ? url : fsPathFromId(url))\n    const seg = file.split('/')\n    const npmIndex = seg.indexOf(`node_modules`)\n    const isSourceMap = file.endsWith('.map')\n    if (npmIndex > 0) {\n      file = seg[npmIndex + 1]\n      if (file.startsWith('@')) {\n        file = `${file}/${seg[npmIndex + 2]}`\n      }\n      file = `npm: ${chalk.dim(file)}${isSourceMap ? ` (source map)` : ``}`\n    }\n    return chalk.dim(file)\n  } else {\n    return chalk.dim(url)\n  }\n}\n\nexport function isObject(value: unknown): value is Record<string, any> {\n  return Object.prototype.toString.call(value) === '[object Object]'\n}\n\nexport function isDefined<T>(value: T | undefined | null): value is T {\n  return value != null\n}\n\nexport function lookupFile(\n  dir: string,\n  formats: string[],\n  pathOnly = false\n): string | undefined {\n  for (const format of formats) {\n    const fullPath = path.join(dir, format)\n    if (fs.existsSync(fullPath) && fs.statSync(fullPath).isFile()) {\n      return pathOnly ? fullPath : fs.readFileSync(fullPath, 'utf-8')\n    }\n  }\n  const parentDir = path.dirname(dir)\n  if (parentDir !== dir) {\n    return lookupFile(parentDir, formats, pathOnly)\n  }\n}\n\nconst splitRE = /\\r?\\n/\n\nconst range: number = 2\n\nexport function pad(source: string, n = 2): string {\n  const lines = source.split(splitRE)\n  return lines.map((l) => ` `.repeat(n) + l).join(`\\n`)\n}\n\nexport function posToNumber(\n  source: string,\n  pos: number | { line: number; column: number }\n): number {\n  if (typeof pos === 'number') return pos\n  const lines = source.split(splitRE)\n  const { line, column } = pos\n  let start = 0\n  for (let i = 0; i < line - 1; i++) {\n    start += lines[i].length + 1\n  }\n  return start + column\n}\n\nexport function numberToPos(\n  source: string,\n  offset: number | { line: number; column: number }\n): { line: number; column: number } {\n  if (typeof offset !== 'number') return offset\n  if (offset > source.length) {\n    throw new Error(\n      `offset is longer than source length! offset ${offset} > length ${source.length}`\n    )\n  }\n  const lines = source.split(splitRE)\n  let counted = 0\n  let line = 0\n  let column = 0\n  for (; line < lines.length; line++) {\n    const lineLength = lines[line].length + 1\n    if (counted + lineLength >= offset) {\n      column = offset - counted + 1\n      break\n    }\n    counted += lineLength\n  }\n  return { line: line + 1, column }\n}\n\nexport function generateCodeFrame(\n  source: string,\n  start: number | { line: number; column: number } = 0,\n  end?: number\n): string {\n  start = posToNumber(source, start)\n  end = end || start\n  const lines = source.split(splitRE)\n  let count = 0\n  const res: string[] = []\n  for (let i = 0; i < lines.length; i++) {\n    count += lines[i].length + 1\n    if (count >= start) {\n      for (let j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length) continue\n        const line = j + 1\n        res.push(\n          `${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${\n            lines[j]\n          }`\n        )\n        const lineLength = lines[j].length\n        if (j === i) {\n          // push underline\n          const pad = start - (count - lineLength) + 1\n          const length = Math.max(\n            1,\n            end > count ? lineLength - pad : end - start\n          )\n          res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length))\n        } else if (j > i) {\n          if (end > count) {\n            const length = Math.max(Math.min(end - count, lineLength), 1)\n            res.push(`   |  ` + '^'.repeat(length))\n          }\n          count += lineLength + 1\n        }\n      }\n      break\n    }\n  }\n  return res.join('\\n')\n}\n\nexport function writeFile(\n  filename: string,\n  content: string | Uint8Array\n): void {\n  const dir = path.dirname(filename)\n  if (!fs.existsSync(dir)) {\n    fs.mkdirSync(dir, { recursive: true })\n  }\n  fs.writeFileSync(filename, content)\n}\n\n/**\n * Delete every file and subdirectory. **The given directory must exist.**\n * Pass an optional `skip` array to preserve files in the root directory.\n */\nexport function emptyDir(dir: string, skip?: string[]): void {\n  for (const file of fs.readdirSync(dir)) {\n    if (skip?.includes(file)) {\n      continue\n    }\n    const abs = path.resolve(dir, file)\n    // baseline is Node 12 so can't use rmSync :(\n    if (fs.lstatSync(abs).isDirectory()) {\n      emptyDir(abs)\n      fs.rmdirSync(abs)\n    } else {\n      fs.unlinkSync(abs)\n    }\n  }\n}\n\nexport function copyDir(srcDir: string, destDir: string): void {\n  fs.mkdirSync(destDir, { recursive: true })\n  for (const file of fs.readdirSync(srcDir)) {\n    const srcFile = path.resolve(srcDir, file)\n    if (srcFile === destDir) {\n      continue\n    }\n    const destFile = path.resolve(destDir, file)\n    const stat = fs.statSync(srcFile)\n    if (stat.isDirectory()) {\n      copyDir(srcFile, destFile)\n    } else {\n      fs.copyFileSync(srcFile, destFile)\n    }\n  }\n}\n\nexport function ensureLeadingSlash(path: string): string {\n  return !path.startsWith('/') ? '/' + path : path\n}\n\nexport function ensureWatchedFile(\n  watcher: FSWatcher,\n  file: string | null,\n  root: string\n): void {\n  if (\n    file &&\n    // only need to watch if out of root\n    !file.startsWith(root + '/') &&\n    // some rollup plugins use null bytes for private resolved Ids\n    !file.includes('\\0') &&\n    fs.existsSync(file)\n  ) {\n    // resolve file to normalized system path\n    watcher.add(path.resolve(file))\n  }\n}\n\ninterface ImageCandidate {\n  url: string\n  descriptor: string\n}\nconst escapedSpaceCharacters = /( |\\\\t|\\\\n|\\\\f|\\\\r)+/g\nexport async function processSrcSet(\n  srcs: string,\n  replacer: (arg: ImageCandidate) => Promise<string>\n): Promise<string> {\n  const imageCandidates: ImageCandidate[] = srcs\n    .split(',')\n    .map((s) => {\n      const [url, descriptor] = s\n        .replace(escapedSpaceCharacters, ' ')\n        .trim()\n        .split(' ', 2)\n      return { url, descriptor }\n    })\n    .filter(({ url }) => !!url)\n\n  const ret = await Promise.all(\n    imageCandidates.map(async ({ url, descriptor }) => {\n      return {\n        url: await replacer({ url, descriptor }),\n        descriptor\n      }\n    })\n  )\n\n  const url = ret.reduce((prev, { url, descriptor }, index) => {\n    descriptor = descriptor || ''\n    return (prev +=\n      url + ` ${descriptor}${index === ret.length - 1 ? '' : ', '}`)\n  }, '')\n\n  return url\n}\n\n// based on https://github.com/sveltejs/svelte/blob/abf11bb02b2afbd3e4cac509a0f70e318c306364/src/compiler/utils/mapped_code.ts#L221\nconst nullSourceMap: RawSourceMap = {\n  names: [],\n  sources: [],\n  mappings: '',\n  version: 3\n}\nexport function combineSourcemaps(\n  filename: string,\n  sourcemapList: Array<DecodedSourceMap | RawSourceMap>\n): RawSourceMap {\n  if (\n    sourcemapList.length === 0 ||\n    sourcemapList.every((m) => m.sources.length === 0)\n  ) {\n    return { ...nullSourceMap }\n  }\n\n  // We don't declare type here so we can convert/fake/map as RawSourceMap\n  let map //: SourceMap\n  let mapIndex = 1\n  const useArrayInterface =\n    sourcemapList.slice(0, -1).find((m) => m.sources.length !== 1) === undefined\n  if (useArrayInterface) {\n    map = remapping(sourcemapList, () => null, true)\n  } else {\n    map = remapping(\n      sourcemapList[0],\n      function loader(sourcefile) {\n        if (sourcefile === filename && sourcemapList[mapIndex]) {\n          return sourcemapList[mapIndex++]\n        } else {\n          return { ...nullSourceMap }\n        }\n      },\n      true\n    )\n  }\n  if (!map.file) {\n    delete map.file\n  }\n\n  return map as RawSourceMap\n}\n\nexport function unique<T>(arr: T[]): T[] {\n  return Array.from(new Set(arr))\n}\n\nexport interface Hostname {\n  // undefined sets the default behaviour of server.listen\n  host: string | undefined\n  // resolve to localhost when possible\n  name: string\n}\n\nexport function resolveHostname(\n  optionsHost: string | boolean | undefined\n): Hostname {\n  let host: string | undefined\n  if (\n    optionsHost === undefined ||\n    optionsHost === false ||\n    optionsHost === 'localhost'\n  ) {\n    // Use a secure default\n    host = '127.0.0.1'\n  } else if (optionsHost === true) {\n    // If passed --host in the CLI without arguments\n    host = undefined // undefined typically means 0.0.0.0 or :: (listen on all IPs)\n  } else {\n    host = optionsHost\n  }\n\n  // Set host name to localhost when possible, unless the user explicitly asked for '127.0.0.1'\n  const name =\n    (optionsHost !== '127.0.0.1' && host === '127.0.0.1') ||\n    host === '0.0.0.0' ||\n    host === '::' ||\n    host === undefined\n      ? 'localhost'\n      : host\n\n  return { host, name }\n}\n\nexport function arraify<T>(target: T | T[]): T[] {\n  return Array.isArray(target) ? target : [target]\n}\n\nexport function toUpperCaseDriveLetter(pathName: string): string {\n  return pathName.replace(/^\\w:/, letter => letter.toUpperCase())\n}\n\nexport const multilineCommentsRE = /\\/\\*(.|[\\r\\n])*?\\*\\//gm\nexport const singlelineCommentsRE = /\\/\\/.*/g\n","/* eslint no-console: 0 */\n\nimport chalk from 'chalk'\nimport readline from 'readline'\nimport os from 'os'\nimport { RollupError } from 'rollup'\nimport { Hostname } from './utils'\n\nexport type LogType = 'error' | 'warn' | 'info'\nexport type LogLevel = LogType | 'silent'\nexport interface Logger {\n  info(msg: string, options?: LogOptions): void\n  warn(msg: string, options?: LogOptions): void\n  warnOnce(msg: string, options?: LogOptions): void\n  error(msg: string, options?: LogErrorOptions): void\n  clearScreen(type: LogType): void\n  hasErrorLogged(error: Error | RollupError): boolean\n  hasWarned: boolean\n}\n\nexport interface LogOptions {\n  clear?: boolean\n  timestamp?: boolean\n}\n\nexport interface LogErrorOptions extends LogOptions {\n  error?: Error | RollupError | null\n}\n\nexport const LogLevels: Record<LogLevel, number> = {\n  silent: 0,\n  error: 1,\n  warn: 2,\n  info: 3\n}\n\nlet lastType: LogType | undefined\nlet lastMsg: string | undefined\nlet sameCount = 0\n\nfunction clearScreen() {\n  const repeatCount = process.stdout.rows - 2\n  const blank = repeatCount > 0 ? '\\n'.repeat(repeatCount) : ''\n  console.log(blank)\n  readline.cursorTo(process.stdout, 0, 0)\n  readline.clearScreenDown(process.stdout)\n}\n\nexport interface LoggerOptions {\n  prefix?: string\n  allowClearScreen?: boolean\n  customLogger?: Logger\n}\n\nexport function createLogger(\n  level: LogLevel = 'info',\n  options: LoggerOptions = {}\n): Logger {\n  if (options.customLogger) {\n    return options.customLogger\n  }\n\n  const loggedErrors = new WeakSet<Error | RollupError>()\n  const { prefix = '[vite]', allowClearScreen = true } = options\n  const thresh = LogLevels[level]\n  const clear =\n    allowClearScreen && process.stdout.isTTY && !process.env.CI\n      ? clearScreen\n      : () => {}\n\n  function output(type: LogType, msg: string, options: LogErrorOptions = {}) {\n    if (thresh >= LogLevels[type]) {\n      const method = type === 'info' ? 'log' : type\n      const format = () => {\n        if (options.timestamp) {\n          const tag =\n            type === 'info'\n              ? chalk.cyan.bold(prefix)\n              : type === 'warn'\n              ? chalk.yellow.bold(prefix)\n              : chalk.red.bold(prefix)\n          return `${chalk.dim(new Date().toLocaleTimeString())} ${tag} ${msg}`\n        } else {\n          return msg\n        }\n      }\n      if (options.error) {\n        loggedErrors.add(options.error)\n      }\n      if (type === lastType && msg === lastMsg) {\n        sameCount++\n        clear()\n        console[method](format(), chalk.yellow(`(x${sameCount + 1})`))\n      } else {\n        sameCount = 0\n        lastMsg = msg\n        lastType = type\n        if (options.clear) {\n          clear()\n        }\n        console[method](format())\n      }\n    }\n  }\n\n  const warnedMessages = new Set<string>()\n\n  const logger: Logger = {\n    hasWarned: false,\n    info(msg, opts) {\n      output('info', msg, opts)\n    },\n    warn(msg, opts) {\n      logger.hasWarned = true\n      output('warn', msg, opts)\n    },\n    warnOnce(msg, opts) {\n      if (warnedMessages.has(msg)) return\n      logger.hasWarned = true\n      output('warn', msg, opts)\n      warnedMessages.add(msg)\n    },\n    error(msg, opts) {\n      logger.hasWarned = true\n      output('error', msg, opts)\n    },\n    clearScreen(type) {\n      if (thresh >= LogLevels[type]) {\n        clear()\n      }\n    },\n    hasErrorLogged(error) {\n      return loggedErrors.has(error)\n    }\n  }\n\n  return logger\n}\n\nexport function printServerUrls(\n  hostname: Hostname,\n  protocol: string,\n  port: number,\n  base: string,\n  info: Logger['info']\n): void {\n  if (hostname.host === '127.0.0.1') {\n    const url = `${protocol}://${hostname.name}:${chalk.bold(port)}${base}`\n    info(`  > Local: ${chalk.cyan(url)}`)\n    if (hostname.name !== '127.0.0.1') {\n      info(`  > Network: ${chalk.dim('use `--host` to expose')}`)\n    }\n  } else {\n    Object.values(os.networkInterfaces())\n      .flatMap((nInterface) => nInterface ?? [])\n      .filter((detail) => detail.family === 'IPv4')\n      .map((detail) => {\n        const type = detail.address.includes('127.0.0.1')\n          ? 'Local:   '\n          : 'Network: '\n        const host = detail.address.replace('127.0.0.1', hostname.name)\n        const url = `${protocol}://${host}:${chalk.bold(port)}${base}`\n        return `  > ${type} ${chalk.cyan(url)}`\n      })\n      .forEach((msg) => info(msg))\n  }\n}\n","import path from 'path'\nimport chalk from 'chalk'\nimport { gzip } from 'zlib'\nimport { promisify } from 'util'\nimport { Plugin } from 'rollup'\nimport { ResolvedConfig } from '../config'\nimport { normalizePath } from '../utils'\nimport { LogLevels } from '../logger'\n\nconst enum WriteType {\n  JS,\n  CSS,\n  ASSET,\n  HTML,\n  SOURCE_MAP\n}\n\nconst writeColors = {\n  [WriteType.JS]: chalk.cyan,\n  [WriteType.CSS]: chalk.magenta,\n  [WriteType.ASSET]: chalk.green,\n  [WriteType.HTML]: chalk.blue,\n  [WriteType.SOURCE_MAP]: chalk.gray\n}\n\nexport function buildReporterPlugin(config: ResolvedConfig): Plugin {\n  const compress = promisify(gzip)\n  const chunkLimit = config.build.chunkSizeWarningLimit\n\n  function isLarge(code: string | Uint8Array): boolean {\n    // bail out on particularly large chunks\n    return code.length / 1024 > chunkLimit\n  }\n\n  async function getCompressedSize(code: string | Uint8Array): Promise<string> {\n    if (\n      config.build.ssr ||\n      !config.build.reportCompressedSize ||\n      config.build.brotliSize === false\n    ) {\n      return ''\n    }\n    return ` / gzip: ${(\n      (await compress(typeof code === 'string' ? code : Buffer.from(code)))\n        .length / 1024\n    ).toFixed(2)} KiB`\n  }\n\n  function printFileInfo(\n    filePath: string,\n    content: string | Uint8Array,\n    type: WriteType,\n    maxLength: number,\n    compressedSize = ''\n  ) {\n    const outDir =\n      normalizePath(\n        path.relative(\n          config.root,\n          path.resolve(config.root, config.build.outDir)\n        )\n      ) + '/'\n    const kibs = content.length / 1024\n    const sizeColor = kibs > chunkLimit ? chalk.yellow : chalk.dim\n    config.logger.info(\n      `${chalk.gray(chalk.white.dim(outDir))}${writeColors[type](\n        filePath.padEnd(maxLength + 2)\n      )} ${sizeColor(`${kibs.toFixed(2)} KiB${compressedSize}`)}`\n    )\n  }\n\n  const tty = process.stdout.isTTY && !process.env.CI\n  const shouldLogInfo = LogLevels[config.logLevel || 'info'] >= LogLevels.info\n  let hasTransformed = false\n  let hasRenderedChunk = false\n  let transformedCount = 0\n  let chunkCount = 0\n\n  const logTransform = throttle((id: string) => {\n    writeLine(\n      `transforming (${transformedCount}) ${chalk.dim(\n        path.relative(config.root, id)\n      )}`\n    )\n  })\n\n  return {\n    name: 'vite:reporter',\n\n    transform(_, id) {\n      transformedCount++\n      if (shouldLogInfo) {\n        if (!tty) {\n          if (!hasTransformed) {\n            config.logger.info(`transforming...`)\n          }\n        } else {\n          if (id.includes(`?`)) return\n          logTransform(id)\n        }\n        hasTransformed = true\n      }\n      return null\n    },\n\n    buildEnd() {\n      if (shouldLogInfo) {\n        if (tty) {\n          process.stdout.clearLine(0)\n          process.stdout.cursorTo(0)\n        }\n        config.logger.info(\n          `${chalk.green(`✓`)} ${transformedCount} modules transformed.`\n        )\n      }\n    },\n\n    renderStart() {\n      chunkCount = 0\n    },\n\n    renderChunk() {\n      chunkCount++\n      if (shouldLogInfo) {\n        if (!tty) {\n          if (!hasRenderedChunk) {\n            config.logger.info('rendering chunks...')\n          }\n        } else {\n          writeLine(`rendering chunks (${chunkCount})...`)\n        }\n        hasRenderedChunk = true\n      }\n      return null\n    },\n\n    generateBundle() {\n      if (shouldLogInfo && tty) {\n        process.stdout.clearLine(0)\n        process.stdout.cursorTo(0)\n      }\n    },\n\n    async writeBundle(_, output) {\n      let hasLargeChunks = false\n\n      if (shouldLogInfo) {\n        let longest = 0\n        for (const file in output) {\n          const l = output[file].fileName.length\n          if (l > longest) longest = l\n        }\n\n        // large chunks are deferred to be logged at the end so they are more\n        // visible.\n        const deferredLogs: (() => void)[] = []\n\n        await Promise.all(\n          Object.keys(output).map(async (file) => {\n            const chunk = output[file]\n            if (chunk.type === 'chunk') {\n              const log = async () => {\n                printFileInfo(\n                  chunk.fileName,\n                  chunk.code,\n                  WriteType.JS,\n                  longest,\n                  await getCompressedSize(chunk.code)\n                )\n                if (chunk.map) {\n                  printFileInfo(\n                    chunk.fileName + '.map',\n                    chunk.map.toString(),\n                    WriteType.SOURCE_MAP,\n                    longest\n                  )\n                }\n              }\n              if (isLarge(chunk.code)) {\n                hasLargeChunks = true\n                deferredLogs.push(log)\n              } else {\n                await log()\n              }\n            } else if (chunk.source) {\n              const isCSS = chunk.fileName.endsWith('.css')\n              printFileInfo(\n                chunk.fileName,\n                chunk.source,\n                isCSS ? WriteType.CSS : WriteType.ASSET,\n                longest,\n                isCSS ? await getCompressedSize(chunk.source) : undefined\n              )\n            }\n          })\n        )\n\n        await Promise.all(deferredLogs.map((l) => l()))\n      } else {\n        hasLargeChunks = Object.keys(output).some((file) => {\n          const chunk = output[file]\n          return chunk.type === 'chunk' && chunk.code.length / 1024 > chunkLimit\n        })\n      }\n\n      if (\n        hasLargeChunks &&\n        config.build.minify &&\n        !config.build.lib &&\n        !config.build.ssr\n      ) {\n        config.logger.warn(\n          chalk.yellow(\n            `\\n(!) Some chunks are larger than ${chunkLimit} KiB after minification. Consider:\\n` +\n              `- Using dynamic import() to code-split the application\\n` +\n              `- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/guide/en/#outputmanualchunks\\n` +\n              `- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.`\n          )\n        )\n      }\n    }\n  }\n}\n\nfunction writeLine(output: string) {\n  process.stdout.clearLine(0)\n  process.stdout.cursorTo(0)\n  if (output.length < process.stdout.columns) {\n    process.stdout.write(output)\n  } else {\n    process.stdout.write(output.substring(0, process.stdout.columns - 1))\n  }\n}\n\nfunction throttle(fn: Function) {\n  let timerHandle: NodeJS.Timeout | null = null\n  return (...args: any[]) => {\n    if (timerHandle) return\n    fn(...args)\n    timerHandle = setTimeout(() => {\n      timerHandle = null\n    }, 100)\n  }\n}\n","'use strict';\n\n/**\n * @param typeMap [Object] Map of MIME type -> Array[extensions]\n * @param ...\n */\nfunction Mime() {\n  this._types = Object.create(null);\n  this._extensions = Object.create(null);\n\n  for (let i = 0; i < arguments.length; i++) {\n    this.define(arguments[i]);\n  }\n\n  this.define = this.define.bind(this);\n  this.getType = this.getType.bind(this);\n  this.getExtension = this.getExtension.bind(this);\n}\n\n/**\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\n * to an array of extensions associated with the type.  The first extension is\n * used as the default extension for the type.\n *\n * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\n *\n * If a type declares an extension that has already been defined, an error will\n * be thrown.  To suppress this error and force the extension to be associated\n * with the new type, pass `force`=true.  Alternatively, you may prefix the\n * extension with \"*\" to map the type to extension, without mapping the\n * extension to the type.\n *\n * e.g. mime.define({'audio/wav', ['wav']}, {'audio/x-wav', ['*wav']});\n *\n *\n * @param map (Object) type definitions\n * @param force (Boolean) if true, force overriding of existing definitions\n */\nMime.prototype.define = function(typeMap, force) {\n  for (let type in typeMap) {\n    let extensions = typeMap[type].map(function(t) {\n      return t.toLowerCase();\n    });\n    type = type.toLowerCase();\n\n    for (let i = 0; i < extensions.length; i++) {\n      const ext = extensions[i];\n\n      // '*' prefix = not the preferred type for this extension.  So fixup the\n      // extension, and skip it.\n      if (ext[0] === '*') {\n        continue;\n      }\n\n      if (!force && (ext in this._types)) {\n        throw new Error(\n          'Attempt to change mapping for \"' + ext +\n          '\" extension from \"' + this._types[ext] + '\" to \"' + type +\n          '\". Pass `force=true` to allow this, otherwise remove \"' + ext +\n          '\" from the list of extensions for \"' + type + '\".'\n        );\n      }\n\n      this._types[ext] = type;\n    }\n\n    // Use first extension as default\n    if (force || !this._extensions[type]) {\n      const ext = extensions[0];\n      this._extensions[type] = (ext[0] !== '*') ? ext : ext.substr(1);\n    }\n  }\n};\n\n/**\n * Lookup a mime type based on extension\n */\nMime.prototype.getType = function(path) {\n  path = String(path);\n  let last = path.replace(/^.*[/\\\\]/, '').toLowerCase();\n  let ext = last.replace(/^.*\\./, '').toLowerCase();\n\n  let hasPath = last.length < path.length;\n  let hasDot = ext.length < last.length - 1;\n\n  return (hasDot || !hasPath) && this._types[ext] || null;\n};\n\n/**\n * Return file extension associated with a mime type\n */\nMime.prototype.getExtension = function(type) {\n  type = /^\\s*([^;\\s]*)/.test(type) && RegExp.$1;\n  return type && this._extensions[type.toLowerCase()] || null;\n};\n\nmodule.exports = Mime;\n","module.exports = {\"application/andrew-inset\":[\"ez\"],\"application/applixware\":[\"aw\"],\"application/atom+xml\":[\"atom\"],\"application/atomcat+xml\":[\"atomcat\"],\"application/atomdeleted+xml\":[\"atomdeleted\"],\"application/atomsvc+xml\":[\"atomsvc\"],\"application/atsc-dwd+xml\":[\"dwd\"],\"application/atsc-held+xml\":[\"held\"],\"application/atsc-rsat+xml\":[\"rsat\"],\"application/bdoc\":[\"bdoc\"],\"application/calendar+xml\":[\"xcs\"],\"application/ccxml+xml\":[\"ccxml\"],\"application/cdfx+xml\":[\"cdfx\"],\"application/cdmi-capability\":[\"cdmia\"],\"application/cdmi-container\":[\"cdmic\"],\"application/cdmi-domain\":[\"cdmid\"],\"application/cdmi-object\":[\"cdmio\"],\"application/cdmi-queue\":[\"cdmiq\"],\"application/cu-seeme\":[\"cu\"],\"application/dash+xml\":[\"mpd\"],\"application/davmount+xml\":[\"davmount\"],\"application/docbook+xml\":[\"dbk\"],\"application/dssc+der\":[\"dssc\"],\"application/dssc+xml\":[\"xdssc\"],\"application/ecmascript\":[\"ecma\",\"es\"],\"application/emma+xml\":[\"emma\"],\"application/emotionml+xml\":[\"emotionml\"],\"application/epub+zip\":[\"epub\"],\"application/exi\":[\"exi\"],\"application/fdt+xml\":[\"fdt\"],\"application/font-tdpfr\":[\"pfr\"],\"application/geo+json\":[\"geojson\"],\"application/gml+xml\":[\"gml\"],\"application/gpx+xml\":[\"gpx\"],\"application/gxf\":[\"gxf\"],\"application/gzip\":[\"gz\"],\"application/hjson\":[\"hjson\"],\"application/hyperstudio\":[\"stk\"],\"application/inkml+xml\":[\"ink\",\"inkml\"],\"application/ipfix\":[\"ipfix\"],\"application/its+xml\":[\"its\"],\"application/java-archive\":[\"jar\",\"war\",\"ear\"],\"application/java-serialized-object\":[\"ser\"],\"application/java-vm\":[\"class\"],\"application/javascript\":[\"js\",\"mjs\"],\"application/json\":[\"json\",\"map\"],\"application/json5\":[\"json5\"],\"application/jsonml+json\":[\"jsonml\"],\"application/ld+json\":[\"jsonld\"],\"application/lgr+xml\":[\"lgr\"],\"application/lost+xml\":[\"lostxml\"],\"application/mac-binhex40\":[\"hqx\"],\"application/mac-compactpro\":[\"cpt\"],\"application/mads+xml\":[\"mads\"],\"application/manifest+json\":[\"webmanifest\"],\"application/marc\":[\"mrc\"],\"application/marcxml+xml\":[\"mrcx\"],\"application/mathematica\":[\"ma\",\"nb\",\"mb\"],\"application/mathml+xml\":[\"mathml\"],\"application/mbox\":[\"mbox\"],\"application/mediaservercontrol+xml\":[\"mscml\"],\"application/metalink+xml\":[\"metalink\"],\"application/metalink4+xml\":[\"meta4\"],\"application/mets+xml\":[\"mets\"],\"application/mmt-aei+xml\":[\"maei\"],\"application/mmt-usd+xml\":[\"musd\"],\"application/mods+xml\":[\"mods\"],\"application/mp21\":[\"m21\",\"mp21\"],\"application/mp4\":[\"mp4s\",\"m4p\"],\"application/mrb-consumer+xml\":[\"*xdf\"],\"application/mrb-publish+xml\":[\"*xdf\"],\"application/msword\":[\"doc\",\"dot\"],\"application/mxf\":[\"mxf\"],\"application/n-quads\":[\"nq\"],\"application/n-triples\":[\"nt\"],\"application/node\":[\"cjs\"],\"application/octet-stream\":[\"bin\",\"dms\",\"lrf\",\"mar\",\"so\",\"dist\",\"distz\",\"pkg\",\"bpk\",\"dump\",\"elc\",\"deploy\",\"exe\",\"dll\",\"deb\",\"dmg\",\"iso\",\"img\",\"msi\",\"msp\",\"msm\",\"buffer\"],\"application/oda\":[\"oda\"],\"application/oebps-package+xml\":[\"opf\"],\"application/ogg\":[\"ogx\"],\"application/omdoc+xml\":[\"omdoc\"],\"application/onenote\":[\"onetoc\",\"onetoc2\",\"onetmp\",\"onepkg\"],\"application/oxps\":[\"oxps\"],\"application/p2p-overlay+xml\":[\"relo\"],\"application/patch-ops-error+xml\":[\"*xer\"],\"application/pdf\":[\"pdf\"],\"application/pgp-encrypted\":[\"pgp\"],\"application/pgp-signature\":[\"asc\",\"sig\"],\"application/pics-rules\":[\"prf\"],\"application/pkcs10\":[\"p10\"],\"application/pkcs7-mime\":[\"p7m\",\"p7c\"],\"application/pkcs7-signature\":[\"p7s\"],\"application/pkcs8\":[\"p8\"],\"application/pkix-attr-cert\":[\"ac\"],\"application/pkix-cert\":[\"cer\"],\"application/pkix-crl\":[\"crl\"],\"application/pkix-pkipath\":[\"pkipath\"],\"application/pkixcmp\":[\"pki\"],\"application/pls+xml\":[\"pls\"],\"application/postscript\":[\"ai\",\"eps\",\"ps\"],\"application/provenance+xml\":[\"provx\"],\"application/pskc+xml\":[\"pskcxml\"],\"application/raml+yaml\":[\"raml\"],\"application/rdf+xml\":[\"rdf\",\"owl\"],\"application/reginfo+xml\":[\"rif\"],\"application/relax-ng-compact-syntax\":[\"rnc\"],\"application/resource-lists+xml\":[\"rl\"],\"application/resource-lists-diff+xml\":[\"rld\"],\"application/rls-services+xml\":[\"rs\"],\"application/route-apd+xml\":[\"rapd\"],\"application/route-s-tsid+xml\":[\"sls\"],\"application/route-usd+xml\":[\"rusd\"],\"application/rpki-ghostbusters\":[\"gbr\"],\"application/rpki-manifest\":[\"mft\"],\"application/rpki-roa\":[\"roa\"],\"application/rsd+xml\":[\"rsd\"],\"application/rss+xml\":[\"rss\"],\"application/rtf\":[\"rtf\"],\"application/sbml+xml\":[\"sbml\"],\"application/scvp-cv-request\":[\"scq\"],\"application/scvp-cv-response\":[\"scs\"],\"application/scvp-vp-request\":[\"spq\"],\"application/scvp-vp-response\":[\"spp\"],\"application/sdp\":[\"sdp\"],\"application/senml+xml\":[\"senmlx\"],\"application/sensml+xml\":[\"sensmlx\"],\"application/set-payment-initiation\":[\"setpay\"],\"application/set-registration-initiation\":[\"setreg\"],\"application/shf+xml\":[\"shf\"],\"application/sieve\":[\"siv\",\"sieve\"],\"application/smil+xml\":[\"smi\",\"smil\"],\"application/sparql-query\":[\"rq\"],\"application/sparql-results+xml\":[\"srx\"],\"application/srgs\":[\"gram\"],\"application/srgs+xml\":[\"grxml\"],\"application/sru+xml\":[\"sru\"],\"application/ssdl+xml\":[\"ssdl\"],\"application/ssml+xml\":[\"ssml\"],\"application/swid+xml\":[\"swidtag\"],\"application/tei+xml\":[\"tei\",\"teicorpus\"],\"application/thraud+xml\":[\"tfi\"],\"application/timestamped-data\":[\"tsd\"],\"application/toml\":[\"toml\"],\"application/ttml+xml\":[\"ttml\"],\"application/ubjson\":[\"ubj\"],\"application/urc-ressheet+xml\":[\"rsheet\"],\"application/urc-targetdesc+xml\":[\"td\"],\"application/voicexml+xml\":[\"vxml\"],\"application/wasm\":[\"wasm\"],\"application/widget\":[\"wgt\"],\"application/winhlp\":[\"hlp\"],\"application/wsdl+xml\":[\"wsdl\"],\"application/wspolicy+xml\":[\"wspolicy\"],\"application/xaml+xml\":[\"xaml\"],\"application/xcap-att+xml\":[\"xav\"],\"application/xcap-caps+xml\":[\"xca\"],\"application/xcap-diff+xml\":[\"xdf\"],\"application/xcap-el+xml\":[\"xel\"],\"application/xcap-error+xml\":[\"xer\"],\"application/xcap-ns+xml\":[\"xns\"],\"application/xenc+xml\":[\"xenc\"],\"application/xhtml+xml\":[\"xhtml\",\"xht\"],\"application/xliff+xml\":[\"xlf\"],\"application/xml\":[\"xml\",\"xsl\",\"xsd\",\"rng\"],\"application/xml-dtd\":[\"dtd\"],\"application/xop+xml\":[\"xop\"],\"application/xproc+xml\":[\"xpl\"],\"application/xslt+xml\":[\"*xsl\",\"xslt\"],\"application/xspf+xml\":[\"xspf\"],\"application/xv+xml\":[\"mxml\",\"xhvml\",\"xvml\",\"xvm\"],\"application/yang\":[\"yang\"],\"application/yin+xml\":[\"yin\"],\"application/zip\":[\"zip\"],\"audio/3gpp\":[\"*3gpp\"],\"audio/adpcm\":[\"adp\"],\"audio/amr\":[\"amr\"],\"audio/basic\":[\"au\",\"snd\"],\"audio/midi\":[\"mid\",\"midi\",\"kar\",\"rmi\"],\"audio/mobile-xmf\":[\"mxmf\"],\"audio/mp3\":[\"*mp3\"],\"audio/mp4\":[\"m4a\",\"mp4a\"],\"audio/mpeg\":[\"mpga\",\"mp2\",\"mp2a\",\"mp3\",\"m2a\",\"m3a\"],\"audio/ogg\":[\"oga\",\"ogg\",\"spx\",\"opus\"],\"audio/s3m\":[\"s3m\"],\"audio/silk\":[\"sil\"],\"audio/wav\":[\"wav\"],\"audio/wave\":[\"*wav\"],\"audio/webm\":[\"weba\"],\"audio/xm\":[\"xm\"],\"font/collection\":[\"ttc\"],\"font/otf\":[\"otf\"],\"font/ttf\":[\"ttf\"],\"font/woff\":[\"woff\"],\"font/woff2\":[\"woff2\"],\"image/aces\":[\"exr\"],\"image/apng\":[\"apng\"],\"image/avif\":[\"avif\"],\"image/bmp\":[\"bmp\"],\"image/cgm\":[\"cgm\"],\"image/dicom-rle\":[\"drle\"],\"image/emf\":[\"emf\"],\"image/fits\":[\"fits\"],\"image/g3fax\":[\"g3\"],\"image/gif\":[\"gif\"],\"image/heic\":[\"heic\"],\"image/heic-sequence\":[\"heics\"],\"image/heif\":[\"heif\"],\"image/heif-sequence\":[\"heifs\"],\"image/hej2k\":[\"hej2\"],\"image/hsj2\":[\"hsj2\"],\"image/ief\":[\"ief\"],\"image/jls\":[\"jls\"],\"image/jp2\":[\"jp2\",\"jpg2\"],\"image/jpeg\":[\"jpeg\",\"jpg\",\"jpe\"],\"image/jph\":[\"jph\"],\"image/jphc\":[\"jhc\"],\"image/jpm\":[\"jpm\"],\"image/jpx\":[\"jpx\",\"jpf\"],\"image/jxr\":[\"jxr\"],\"image/jxra\":[\"jxra\"],\"image/jxrs\":[\"jxrs\"],\"image/jxs\":[\"jxs\"],\"image/jxsc\":[\"jxsc\"],\"image/jxsi\":[\"jxsi\"],\"image/jxss\":[\"jxss\"],\"image/ktx\":[\"ktx\"],\"image/ktx2\":[\"ktx2\"],\"image/png\":[\"png\"],\"image/sgi\":[\"sgi\"],\"image/svg+xml\":[\"svg\",\"svgz\"],\"image/t38\":[\"t38\"],\"image/tiff\":[\"tif\",\"tiff\"],\"image/tiff-fx\":[\"tfx\"],\"image/webp\":[\"webp\"],\"image/wmf\":[\"wmf\"],\"message/disposition-notification\":[\"disposition-notification\"],\"message/global\":[\"u8msg\"],\"message/global-delivery-status\":[\"u8dsn\"],\"message/global-disposition-notification\":[\"u8mdn\"],\"message/global-headers\":[\"u8hdr\"],\"message/rfc822\":[\"eml\",\"mime\"],\"model/3mf\":[\"3mf\"],\"model/gltf+json\":[\"gltf\"],\"model/gltf-binary\":[\"glb\"],\"model/iges\":[\"igs\",\"iges\"],\"model/mesh\":[\"msh\",\"mesh\",\"silo\"],\"model/mtl\":[\"mtl\"],\"model/obj\":[\"obj\"],\"model/stl\":[\"stl\"],\"model/vrml\":[\"wrl\",\"vrml\"],\"model/x3d+binary\":[\"*x3db\",\"x3dbz\"],\"model/x3d+fastinfoset\":[\"x3db\"],\"model/x3d+vrml\":[\"*x3dv\",\"x3dvz\"],\"model/x3d+xml\":[\"x3d\",\"x3dz\"],\"model/x3d-vrml\":[\"x3dv\"],\"text/cache-manifest\":[\"appcache\",\"manifest\"],\"text/calendar\":[\"ics\",\"ifb\"],\"text/coffeescript\":[\"coffee\",\"litcoffee\"],\"text/css\":[\"css\"],\"text/csv\":[\"csv\"],\"text/html\":[\"html\",\"htm\",\"shtml\"],\"text/jade\":[\"jade\"],\"text/jsx\":[\"jsx\"],\"text/less\":[\"less\"],\"text/markdown\":[\"markdown\",\"md\"],\"text/mathml\":[\"mml\"],\"text/mdx\":[\"mdx\"],\"text/n3\":[\"n3\"],\"text/plain\":[\"txt\",\"text\",\"conf\",\"def\",\"list\",\"log\",\"in\",\"ini\"],\"text/richtext\":[\"rtx\"],\"text/rtf\":[\"*rtf\"],\"text/sgml\":[\"sgml\",\"sgm\"],\"text/shex\":[\"shex\"],\"text/slim\":[\"slim\",\"slm\"],\"text/spdx\":[\"spdx\"],\"text/stylus\":[\"stylus\",\"styl\"],\"text/tab-separated-values\":[\"tsv\"],\"text/troff\":[\"t\",\"tr\",\"roff\",\"man\",\"me\",\"ms\"],\"text/turtle\":[\"ttl\"],\"text/uri-list\":[\"uri\",\"uris\",\"urls\"],\"text/vcard\":[\"vcard\"],\"text/vtt\":[\"vtt\"],\"text/xml\":[\"*xml\"],\"text/yaml\":[\"yaml\",\"yml\"],\"video/3gpp\":[\"3gp\",\"3gpp\"],\"video/3gpp2\":[\"3g2\"],\"video/h261\":[\"h261\"],\"video/h263\":[\"h263\"],\"video/h264\":[\"h264\"],\"video/iso.segment\":[\"m4s\"],\"video/jpeg\":[\"jpgv\"],\"video/jpm\":[\"*jpm\",\"jpgm\"],\"video/mj2\":[\"mj2\",\"mjp2\"],\"video/mp2t\":[\"ts\"],\"video/mp4\":[\"mp4\",\"mp4v\",\"mpg4\"],\"video/mpeg\":[\"mpeg\",\"mpg\",\"mpe\",\"m1v\",\"m2v\"],\"video/ogg\":[\"ogv\"],\"video/quicktime\":[\"qt\",\"mov\"],\"video/webm\":[\"webm\"]};","'use strict';\n\nlet Mime = require('./Mime');\nmodule.exports = new Mime(require('./types/standard'));\n","import path from 'path'\nimport { parse as parseUrl } from 'url'\nimport fs, { promises as fsp } from 'fs'\nimport mime from 'mime/lite'\nimport { Plugin } from '../plugin'\nimport { ResolvedConfig } from '../config'\nimport { cleanUrl } from '../utils'\nimport { FS_PREFIX } from '../constants'\nimport { OutputOptions, PluginContext, RenderedChunk } from 'rollup'\nimport MagicString from 'magic-string'\nimport { createHash } from 'crypto'\nimport { normalizePath } from '../utils'\n\nexport const assetUrlRE = /__VITE_ASSET__([a-z\\d]{8})__(?:\\$_(.*?)__)?/g\n\n// urls in JS must be quoted as strings, so when replacing them we need\n// a different regex\nconst assetUrlQuotedRE = /\"__VITE_ASSET__([a-z\\d]{8})__(?:\\$_(.*?)__)?\"/g\n\nconst rawRE = /(\\?|&)raw(?:&|$)/\nconst urlRE = /(\\?|&)url(?:&|$)/\n\nexport const chunkToEmittedAssetsMap = new WeakMap<RenderedChunk, Set<string>>()\n\nconst assetCache = new WeakMap<ResolvedConfig, Map<string, string>>()\n\nconst assetHashToFilenameMap = new WeakMap<\n  ResolvedConfig,\n  Map<string, string>\n>()\n// save hashes of the files that has been emitted in build watch\nconst emittedHashMap = new WeakMap<ResolvedConfig, Set<string>>()\n\n/**\n * Also supports loading plain strings with import text from './foo.txt?raw'\n */\nexport function assetPlugin(config: ResolvedConfig): Plugin {\n  // assetHashToFilenameMap initialization in buildStart causes getAssetFilename to return undefined\n  assetHashToFilenameMap.set(config, new Map())\n  return {\n    name: 'vite:asset',\n\n    buildStart() {\n      assetCache.set(config, new Map())\n      emittedHashMap.set(config, new Set())\n    },\n\n    resolveId(id) {\n      if (!config.assetsInclude(cleanUrl(id))) {\n        return\n      }\n      // imports to absolute urls pointing to files in /public\n      // will fail to resolve in the main resolver. handle them here.\n      const publicFile = checkPublicFile(id, config)\n      if (publicFile) {\n        return id\n      }\n    },\n\n    async load(id) {\n      if (id.startsWith('\\0')) {\n        // Rollup convention, this id should be handled by the\n        // plugin that marked it with \\0\n        return\n      }\n\n      // raw requests, read from disk\n      if (rawRE.test(id)) {\n        const file = checkPublicFile(id, config) || cleanUrl(id)\n        // raw query, read file and return as string\n        return `export default ${JSON.stringify(\n          await fsp.readFile(file, 'utf-8')\n        )}`\n      }\n\n      if (!config.assetsInclude(cleanUrl(id)) && !urlRE.test(id)) {\n        return\n      }\n\n      id = id.replace(urlRE, '$1').replace(/[\\?&]$/, '')\n      const url = await fileToUrl(id, config, this)\n      return `export default ${JSON.stringify(url)}`\n    },\n\n    renderChunk(code, chunk) {\n      let match: RegExpExecArray | null\n      let s: MagicString | undefined\n      while ((match = assetUrlQuotedRE.exec(code))) {\n        s = s || (s = new MagicString(code))\n        const [full, hash, postfix = ''] = match\n        // some internal plugins may still need to emit chunks (e.g. worker) so\n        // fallback to this.getFileName for that.\n        const file = getAssetFilename(hash, config) || this.getFileName(hash)\n        registerAssetToChunk(chunk, file)\n        const outputFilepath = config.base + file + postfix\n        s.overwrite(\n          match.index,\n          match.index + full.length,\n          JSON.stringify(outputFilepath)\n        )\n      }\n      if (s) {\n        return {\n          code: s.toString(),\n          map: config.build.sourcemap ? s.generateMap({ hires: true }) : null\n        }\n      } else {\n        return null\n      }\n    },\n\n    generateBundle(_, bundle) {\n      // do not emit assets for SSR build\n      if (config.command === 'build' && config.build.ssr) {\n        for (const file in bundle) {\n          if (\n            bundle[file].type === 'asset' &&\n            !file.includes('ssr-manifest.json')\n          ) {\n            delete bundle[file]\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function registerAssetToChunk(chunk: RenderedChunk, file: string): void {\n  let emitted = chunkToEmittedAssetsMap.get(chunk)\n  if (!emitted) {\n    emitted = new Set()\n    chunkToEmittedAssetsMap.set(chunk, emitted)\n  }\n  emitted.add(cleanUrl(file))\n}\n\nexport function checkPublicFile(\n  url: string,\n  { publicDir }: ResolvedConfig\n): string | undefined {\n  // note if the file is in /public, the resolver would have returned it\n  // as-is so it's not going to be a fully resolved path.\n  if (!publicDir || !url.startsWith('/')) {\n    return\n  }\n  const publicFile = path.join(publicDir, cleanUrl(url))\n  if (fs.existsSync(publicFile)) {\n    return publicFile\n  } else {\n    return\n  }\n}\n\nexport function fileToUrl(\n  id: string,\n  config: ResolvedConfig,\n  ctx: PluginContext\n): string | Promise<string> {\n  if (config.command === 'serve') {\n    return fileToDevUrl(id, config)\n  } else {\n    return fileToBuiltUrl(id, config, ctx)\n  }\n}\n\nfunction fileToDevUrl(id: string, config: ResolvedConfig) {\n  let rtn: string\n  if (checkPublicFile(id, config)) {\n    // in public dir, keep the url as-is\n    rtn = id\n  } else if (id.startsWith(config.root)) {\n    // in project root, infer short public path\n    rtn = '/' + path.posix.relative(config.root, id)\n  } else {\n    // outside of project root, use absolute fs path\n    // (this is special handled by the serve static middleware\n    rtn = path.posix.join(FS_PREFIX + id)\n  }\n  return config.base + rtn.replace(/^\\//, '')\n}\n\nexport function getAssetFilename(\n  hash: string,\n  config: ResolvedConfig\n): string | undefined {\n  return assetHashToFilenameMap.get(config)?.get(hash)\n}\n\n/**\n * converts the source filepath of the asset to the output filename based on the assetFileNames option. \\\n * this function imitates the behavior of rollup.js. \\\n * https://rollupjs.org/guide/en/#outputassetfilenames\n *\n * @example\n * ```ts\n * const content = Buffer.from('text');\n * const fileName = assetFileNamesToFileName(\n *   'assets/[name].[hash][extname]',\n *   '/path/to/file.txt',\n *   getAssetHash(content),\n *   content\n * )\n * // fileName: 'assets/file.982d9e3e.txt'\n * ```\n *\n * @param assetFileNames filename pattern. e.g. `'assets/[name].[hash][extname]'`\n * @param file filepath of the asset\n * @param contentHash hash of the asset. used for `'[hash]'` placeholder\n * @param content content of the asset. passed to `assetFileNames` if `assetFileNames` is a function\n * @returns output filename\n */\nexport function assetFileNamesToFileName(\n  assetFileNames: Exclude<OutputOptions['assetFileNames'], undefined>,\n  file: string,\n  contentHash: string,\n  content: string | Buffer\n): string {\n  const basename = path.basename(file)\n\n  // placeholders for `assetFileNames`\n  // `hash` is slightly different from the rollup's one\n  const extname = path.extname(basename)\n  const ext = extname.substr(1)\n  const name = basename.slice(0, -extname.length)\n  const hash = contentHash\n\n  if (typeof assetFileNames === 'function') {\n    assetFileNames = assetFileNames({\n      name: file,\n      source: content,\n      type: 'asset'\n    })\n    if (typeof assetFileNames !== 'string') {\n      throw new TypeError('assetFileNames must return a string')\n    }\n  } else if (typeof assetFileNames !== 'string') {\n    throw new TypeError('assetFileNames must be a string or a function')\n  }\n\n  const fileName = assetFileNames.replace(\n    /\\[\\w+\\]/g,\n    (placeholder: string): string => {\n      switch (placeholder) {\n        case '[ext]':\n          return ext\n\n        case '[extname]':\n          return extname\n\n        case '[hash]':\n          return hash\n\n        case '[name]':\n          return name\n      }\n      throw new Error(\n        `invalid placeholder ${placeholder} in assetFileNames \"${assetFileNames}\"`\n      )\n    }\n  )\n\n  return fileName\n}\n\n/**\n * Register an asset to be emitted as part of the bundle (if necessary)\n * and returns the resolved public URL\n */\nasync function fileToBuiltUrl(\n  id: string,\n  config: ResolvedConfig,\n  pluginContext: PluginContext,\n  skipPublicCheck = false\n): Promise<string> {\n  if (!skipPublicCheck && checkPublicFile(id, config)) {\n    return config.base + id.slice(1)\n  }\n\n  const cache = assetCache.get(config)!\n  const cached = cache.get(id)\n  if (cached) {\n    return cached\n  }\n\n  const file = cleanUrl(id)\n  const content = await fsp.readFile(file)\n\n  let url: string\n  if (\n    config.build.lib ||\n    (!file.endsWith('.svg') &&\n      content.length < Number(config.build.assetsInlineLimit))\n  ) {\n    // base64 inlined as a string\n    url = `data:${mime.getType(file)};base64,${content.toString('base64')}`\n  } else {\n    // emit as asset\n    // rollup supports `import.meta.ROLLUP_FILE_URL_*`, but it generates code\n    // that uses runtime url sniffing and it can be verbose when targeting\n    // non-module format. It also fails to cascade the asset content change\n    // into the chunk's hash, so we have to do our own content hashing here.\n    // https://bundlers.tooling.report/hashing/asset-cascade/\n    // https://github.com/rollup/rollup/issues/3415\n    const map = assetHashToFilenameMap.get(config)!\n    const contentHash = getAssetHash(content)\n    const { search, hash } = parseUrl(id)\n    const postfix = (search || '') + (hash || '')\n    const output = config.build?.rollupOptions?.output\n    const assetFileNames =\n      (output && !Array.isArray(output) ? output.assetFileNames : undefined) ??\n      // defaults to '<assetsDir>/[name].[hash][extname]'\n      // slightly different from rollup's one ('assets/[name]-[hash][extname]')\n      path.posix.join(config.build.assetsDir, '[name].[hash][extname]')\n    const fileName = assetFileNamesToFileName(\n      assetFileNames,\n      file,\n      contentHash,\n      content\n    )\n    if (!map.has(contentHash)) {\n      map.set(contentHash, fileName)\n    }\n    const emittedSet = emittedHashMap.get(config)!\n    if (!emittedSet.has(contentHash)) {\n      const name = normalizePath(path.relative(config.root, file))\n      pluginContext.emitFile({\n        name,\n        fileName,\n        type: 'asset',\n        source: content\n      })\n      emittedSet.add(contentHash)\n    }\n\n    url = `__VITE_ASSET__${contentHash}__${postfix ? `$_${postfix}__` : ``}`\n  }\n\n  cache.set(id, url)\n  return url\n}\n\nexport function getAssetHash(content: Buffer): string {\n  return createHash('sha256').update(content).digest('hex').slice(0, 8)\n}\n\nexport async function urlToBuiltUrl(\n  url: string,\n  importer: string,\n  config: ResolvedConfig,\n  pluginContext: PluginContext\n): Promise<string> {\n  if (checkPublicFile(url, config)) {\n    return config.base + url.slice(1)\n  }\n  const file = url.startsWith('/')\n    ? path.join(config.root, url)\n    : path.join(path.dirname(importer), url)\n  return fileToBuiltUrl(\n    file,\n    config,\n    pluginContext,\n    // skip public check since we just did it above\n    true\n  )\n}\n","import fs from 'fs'\nimport path from 'path'\nimport glob from 'fast-glob'\nimport {\n  // createDebugger,\n  isExternalUrl,\n  asyncReplace,\n  cleanUrl,\n  generateCodeFrame,\n  isDataUrl,\n  isObject,\n  normalizePath,\n  processSrcSet\n} from '../utils'\nimport { Plugin } from '../plugin'\nimport { ResolvedConfig } from '../config'\nimport postcssrc from 'postcss-load-config'\nimport {\n  NormalizedOutputOptions,\n  OutputChunk,\n  RenderedChunk,\n  RollupError,\n  SourceMap\n} from 'rollup'\nimport { dataToEsm } from '@rollup/pluginutils'\nimport chalk from 'chalk'\nimport { CLIENT_PUBLIC_PATH } from '../constants'\nimport { ResolveFn, ViteDevServer } from '../'\nimport {\n  getAssetFilename,\n  assetUrlRE,\n  registerAssetToChunk,\n  fileToUrl,\n  checkPublicFile\n} from './asset'\nimport MagicString from 'magic-string'\nimport * as Postcss from 'postcss'\nimport type Sass from 'sass'\n// We need to disable check of extraneous import which is buggy for stylus,\n// and causes the CI tests fail, see: https://github.com/vitejs/vite/pull/2860\nimport type Stylus from 'stylus' // eslint-disable-line node/no-extraneous-import\nimport type Less from 'less'\nimport { Alias } from 'types/alias'\nimport type { ModuleNode } from '../server/moduleGraph'\nimport { transform, formatMessages } from 'esbuild'\n\n// const debug = createDebugger('vite:css')\n\nexport interface CSSOptions {\n  /**\n   * https://github.com/css-modules/postcss-modules\n   */\n  modules?: CSSModulesOptions | false\n  preprocessorOptions?: Record<string, any>\n  postcss?:\n    | string\n    | (Postcss.ProcessOptions & {\n        plugins?: Postcss.Plugin[]\n      })\n}\n\nexport interface CSSModulesOptions {\n  getJSON?: (\n    cssFileName: string,\n    json: Record<string, string>,\n    outputFileName: string\n  ) => void\n  scopeBehaviour?: 'global' | 'local'\n  globalModulePaths?: RegExp[]\n  generateScopedName?:\n    | string\n    | ((name: string, filename: string, css: string) => string)\n  hashPrefix?: string\n  /**\n   * default: null\n   */\n  localsConvention?:\n    | 'camelCase'\n    | 'camelCaseOnly'\n    | 'dashes'\n    | 'dashesOnly'\n    | null\n}\n\nconst cssLangs = `\\\\.(css|less|sass|scss|styl|stylus|pcss|postcss)($|\\\\?)`\nconst cssLangRE = new RegExp(cssLangs)\nconst cssModuleRE = new RegExp(`\\\\.module${cssLangs}`)\nconst directRequestRE = /(\\?|&)direct\\b/\nconst commonjsProxyRE = /\\?commonjs-proxy/\nconst inlineRE = /(\\?|&)inline\\b/\nconst usedRE = /(\\?|&)used\\b/\n\nconst enum PreprocessLang {\n  less = 'less',\n  sass = 'sass',\n  scss = 'scss',\n  styl = 'styl',\n  stylus = 'stylus'\n}\nconst enum PureCssLang {\n  css = 'css'\n}\ntype CssLang = keyof typeof PureCssLang | keyof typeof PreprocessLang\n\nexport const isCSSRequest = (request: string): boolean =>\n  cssLangRE.test(request)\n\nexport const isDirectCSSRequest = (request: string): boolean =>\n  cssLangRE.test(request) && directRequestRE.test(request)\n\nexport const isDirectRequest = (request: string): boolean =>\n  directRequestRE.test(request)\n\nconst cssModulesCache = new WeakMap<\n  ResolvedConfig,\n  Map<string, Record<string, string>>\n>()\n\nexport const chunkToEmittedCssFileMap = new WeakMap<\n  RenderedChunk,\n  Set<string>\n>()\n\nexport const removedPureCssFilesCache = new WeakMap<\n  ResolvedConfig,\n  Map<string, RenderedChunk>\n>()\n\nconst postcssConfigCache = new WeakMap<\n  ResolvedConfig,\n  PostCSSConfigResult | null\n>()\n\n/**\n * Plugin applied before user plugins\n */\nexport function cssPlugin(config: ResolvedConfig): Plugin {\n  let server: ViteDevServer\n  let moduleCache: Map<string, Record<string, string>>\n\n  const resolveUrl = config.createResolver({\n    preferRelative: true,\n    tryIndex: false,\n    extensions: []\n  })\n  const atImportResolvers = createCSSResolvers(config)\n\n  return {\n    name: 'vite:css',\n\n    configureServer(_server) {\n      server = _server\n    },\n\n    buildStart() {\n      // Ensure a new cache for every build (i.e. rebuilding in watch mode)\n      moduleCache = new Map<string, Record<string, string>>()\n      cssModulesCache.set(config, moduleCache)\n\n      removedPureCssFilesCache.set(config, new Map<string, RenderedChunk>())\n    },\n\n    async transform(raw, id) {\n      if (!isCSSRequest(id) || commonjsProxyRE.test(id)) {\n        return\n      }\n\n      const urlReplacer: CssUrlReplacer = async (url, importer) => {\n        if (checkPublicFile(url, config)) {\n          return config.base + url.slice(1)\n        }\n        const resolved = await resolveUrl(url, importer)\n        if (resolved) {\n          return fileToUrl(resolved, config, this)\n        }\n        return url\n      }\n\n      const {\n        code: css,\n        modules,\n        deps\n      } = await compileCSS(\n        id,\n        raw,\n        config,\n        urlReplacer,\n        atImportResolvers,\n        server\n      )\n      if (modules) {\n        moduleCache.set(id, modules)\n      }\n\n      // track deps for build watch mode\n      if (config.command === 'build' && config.build.watch && deps) {\n        for (const file of deps) {\n          this.addWatchFile(file)\n        }\n      }\n\n      // dev\n      if (server) {\n        // server only logic for handling CSS @import dependency hmr\n        const { moduleGraph } = server\n        const thisModule = moduleGraph.getModuleById(id)\n        if (thisModule) {\n          // CSS modules cannot self-accept since it exports values\n          const isSelfAccepting = !modules\n          if (deps) {\n            // record deps in the module graph so edits to @import css can trigger\n            // main import to hot update\n            const depModules = new Set<string | ModuleNode>()\n            for (const file of deps) {\n              depModules.add(\n                isCSSRequest(file)\n                  ? moduleGraph.createFileOnlyEntry(file)\n                  : await moduleGraph.ensureEntryFromUrl(\n                      (\n                        await fileToUrl(file, config, this)\n                      ).replace(config.base, '/')\n                    )\n              )\n            }\n            moduleGraph.updateModuleInfo(\n              thisModule,\n              depModules,\n              // The root CSS proxy module is self-accepting and should not\n              // have an explicit accept list\n              new Set(),\n              isSelfAccepting\n            )\n            for (const file of deps) {\n              this.addWatchFile(file)\n            }\n          } else {\n            thisModule.isSelfAccepting = isSelfAccepting\n          }\n        }\n      }\n\n      return {\n        code: css,\n        // TODO CSS source map\n        map: { mappings: '' }\n      }\n    }\n  }\n}\n\n/**\n * Plugin applied after user plugins\n */\nexport function cssPostPlugin(config: ResolvedConfig): Plugin {\n  // styles initialization in buildStart causes a styling loss in watch\n  const styles: Map<string, string> = new Map<string, string>()\n  let pureCssChunks: Set<string>\n\n  // when there are multiple rollup outputs and extracting CSS, only emit once,\n  // since output formats have no effect on the generated CSS.\n  let outputToExtractedCSSMap: Map<NormalizedOutputOptions, string>\n  let hasEmitted = false\n\n  return {\n    name: 'vite:css-post',\n\n    buildStart() {\n      // Ensure new caches for every build (i.e. rebuilding in watch mode)\n      pureCssChunks = new Set<string>()\n      outputToExtractedCSSMap = new Map<NormalizedOutputOptions, string>()\n      hasEmitted = false\n    },\n\n    async transform(css, id, ssr) {\n      if (!isCSSRequest(id) || commonjsProxyRE.test(id)) {\n        return\n      }\n\n      const inlined = inlineRE.test(id)\n      const modules = cssModulesCache.get(config)!.get(id)\n      const modulesCode =\n        modules && dataToEsm(modules, { namedExports: true, preferConst: true })\n\n      if (config.command === 'serve') {\n        if (isDirectCSSRequest(id)) {\n          return css\n        } else {\n          // server only\n          if (ssr) {\n            return modulesCode || `export default ${JSON.stringify(css)}`\n          }\n          if (inlined) {\n            return `export default ${JSON.stringify(css)}`\n          }\n          return [\n            `import { updateStyle, removeStyle } from ${JSON.stringify(\n              path.posix.join(config.base, CLIENT_PUBLIC_PATH)\n            )}`,\n            `const id = ${JSON.stringify(id)}`,\n            `const css = ${JSON.stringify(css)}`,\n            `updateStyle(id, css)`,\n            // css modules exports change on edit so it can't self accept\n            `${modulesCode || `import.meta.hot.accept()\\nexport default css`}`,\n            `import.meta.hot.prune(() => removeStyle(id))`\n          ].join('\\n')\n        }\n      }\n\n      // build CSS handling ----------------------------------------------------\n\n      // record css\n      if (!inlined) {\n        styles.set(id, css)\n      } else {\n        css = await minifyCSS(css, config)\n      }\n\n      return {\n        code:\n          modulesCode ||\n          (usedRE.test(id)\n            ? `export default ${JSON.stringify(css)}`\n            : `export default ''`),\n        map: { mappings: '' },\n        // avoid the css module from being tree-shaken so that we can retrieve\n        // it in renderChunk()\n        moduleSideEffects: inlined ? false : 'no-treeshake'\n      }\n    },\n\n    async renderChunk(code, chunk, opts) {\n      let chunkCSS = ''\n      let isPureCssChunk = true\n      const ids = Object.keys(chunk.modules)\n      for (const id of ids) {\n        if (\n          !isCSSRequest(id) ||\n          cssModuleRE.test(id) ||\n          commonjsProxyRE.test(id)\n        ) {\n          isPureCssChunk = false\n        }\n        if (styles.has(id)) {\n          chunkCSS += styles.get(id)\n        }\n      }\n\n      if (!chunkCSS) {\n        return null\n      }\n\n      // resolve asset URL placeholders to their built file URLs and perform\n      // minification if necessary\n      const processChunkCSS = async (\n        css: string,\n        {\n          inlined,\n          minify\n        }: {\n          inlined: boolean\n          minify: boolean\n        }\n      ) => {\n        // replace asset url references with resolved url.\n        const isRelativeBase = config.base === '' || config.base.startsWith('.')\n        css = css.replace(assetUrlRE, (_, fileHash, postfix = '') => {\n          const filename = getAssetFilename(fileHash, config) + postfix\n          registerAssetToChunk(chunk, filename)\n          if (!isRelativeBase || inlined) {\n            // absolute base or relative base but inlined (injected as style tag into\n            // index.html) use the base as-is\n            return config.base + filename\n          } else {\n            // relative base + extracted CSS - asset file will be in the same dir\n            return `./${path.posix.basename(filename)}`\n          }\n        })\n        // only external @imports should exist at this point - and they need to\n        // be hoisted to the top of the CSS chunk per spec (#1845)\n        if (css.includes('@import')) {\n          css = await hoistAtImports(css)\n        }\n        if (minify && config.build.minify) {\n          css = await minifyCSS(css, config)\n        }\n        return css\n      }\n\n      if (config.build.cssCodeSplit) {\n        if (isPureCssChunk) {\n          // this is a shared CSS-only chunk that is empty.\n          pureCssChunks.add(chunk.fileName)\n        }\n        if (opts.format === 'es' || opts.format === 'cjs') {\n          chunkCSS = await processChunkCSS(chunkCSS, {\n            inlined: false,\n            minify: true\n          })\n          // emit corresponding css file\n          const fileHandle = this.emitFile({\n            name: chunk.name + '.css',\n            type: 'asset',\n            source: chunkCSS\n          })\n          chunkToEmittedCssFileMap.set(\n            chunk,\n            new Set([this.getFileName(fileHandle)])\n          )\n        } else if (!config.build.ssr) {\n          // legacy build, inline css\n          chunkCSS = await processChunkCSS(chunkCSS, {\n            inlined: true,\n            minify: true\n          })\n          const style = `__vite_style__`\n          const injectCode =\n            `var ${style} = document.createElement('style');` +\n            `${style}.innerHTML = ${JSON.stringify(chunkCSS)};` +\n            `document.head.appendChild(${style});`\n          if (config.build.sourcemap) {\n            const s = new MagicString(code)\n            s.prepend(injectCode)\n            return {\n              code: s.toString(),\n              map: s.generateMap({ hires: true })\n            }\n          } else {\n            return { code: injectCode + code }\n          }\n        }\n      } else {\n        // non-split extracted CSS will be minified together\n        chunkCSS = await processChunkCSS(chunkCSS, {\n          inlined: false,\n          minify: false\n        })\n        outputToExtractedCSSMap.set(\n          opts,\n          (outputToExtractedCSSMap.get(opts) || '') + chunkCSS\n        )\n      }\n      return null\n    },\n\n    async generateBundle(opts, bundle) {\n      // remove empty css chunks and their imports\n      if (pureCssChunks.size) {\n        const emptyChunkFiles = [...pureCssChunks]\n          .map((file) => path.basename(file))\n          .join('|')\n          .replace(/\\./g, '\\\\.')\n        const emptyChunkRE = new RegExp(\n          opts.format === 'es'\n            ? `\\\\bimport\\\\s*\"[^\"]*(?:${emptyChunkFiles})\";\\n?`\n            : `\\\\brequire\\\\(\\\\s*\"[^\"]*(?:${emptyChunkFiles})\"\\\\);\\n?`,\n          'g'\n        )\n        for (const file in bundle) {\n          const chunk = bundle[file]\n          if (chunk.type === 'chunk') {\n            // remove pure css chunk from other chunk's imports,\n            // and also register the emitted CSS files under the importer\n            // chunks instead.\n            chunk.imports = chunk.imports.filter((file) => {\n              if (pureCssChunks.has(file)) {\n                const css = chunkToEmittedCssFileMap.get(\n                  bundle[file] as OutputChunk\n                )\n                if (css) {\n                  let existing = chunkToEmittedCssFileMap.get(chunk)\n                  if (!existing) {\n                    existing = new Set()\n                  }\n                  css.forEach((file) => existing!.add(file))\n                  chunkToEmittedCssFileMap.set(chunk, existing)\n                }\n                return false\n              }\n              return true\n            })\n            chunk.code = chunk.code.replace(\n              emptyChunkRE,\n              // remove css import while preserving source map location\n              (m) => `/* empty css ${''.padEnd(m.length - 15)}*/`\n            )\n          }\n        }\n        const removedPureCssFiles = removedPureCssFilesCache.get(config)!\n        pureCssChunks.forEach((fileName) => {\n          removedPureCssFiles.set(fileName, bundle[fileName] as RenderedChunk)\n          delete bundle[fileName]\n        })\n      }\n\n      let extractedCss = outputToExtractedCSSMap.get(opts)\n      if (extractedCss && !hasEmitted) {\n        hasEmitted = true\n        // minify css\n        if (config.build.minify) {\n          extractedCss = await minifyCSS(extractedCss, config)\n        }\n        this.emitFile({\n          name: 'style.css',\n          type: 'asset',\n          source: extractedCss\n        })\n      }\n    }\n  }\n}\n\ninterface CSSAtImportResolvers {\n  css: ResolveFn\n  sass: ResolveFn\n  less: ResolveFn\n}\n\nfunction createCSSResolvers(config: ResolvedConfig): CSSAtImportResolvers {\n  let cssResolve: ResolveFn | undefined\n  let sassResolve: ResolveFn | undefined\n  let lessResolve: ResolveFn | undefined\n  return {\n    get css() {\n      return (\n        cssResolve ||\n        (cssResolve = config.createResolver({\n          extensions: ['.css'],\n          mainFields: ['style'],\n          tryIndex: false,\n          preferRelative: true\n        }))\n      )\n    },\n\n    get sass() {\n      return (\n        sassResolve ||\n        (sassResolve = config.createResolver({\n          extensions: ['.scss', '.sass', '.css'],\n          mainFields: ['sass', 'style'],\n          tryIndex: true,\n          tryPrefix: '_',\n          preferRelative: true\n        }))\n      )\n    },\n\n    get less() {\n      return (\n        lessResolve ||\n        (lessResolve = config.createResolver({\n          extensions: ['.less', '.css'],\n          mainFields: ['less', 'style'],\n          tryIndex: false,\n          preferRelative: true\n        }))\n      )\n    }\n  }\n}\n\nfunction getCssResolversKeys(\n  resolvers: CSSAtImportResolvers\n): Array<keyof CSSAtImportResolvers> {\n  return Object.keys(resolvers) as unknown as Array<keyof CSSAtImportResolvers>\n}\n\nasync function compileCSS(\n  id: string,\n  code: string,\n  config: ResolvedConfig,\n  urlReplacer: CssUrlReplacer,\n  atImportResolvers: CSSAtImportResolvers,\n  server?: ViteDevServer\n): Promise<{\n  code: string\n  map?: SourceMap\n  ast?: Postcss.Result\n  modules?: Record<string, string>\n  deps?: Set<string>\n}> {\n  const { modules: modulesOptions, preprocessorOptions } = config.css || {}\n  const isModule = modulesOptions !== false && cssModuleRE.test(id)\n  // although at serve time it can work without processing, we do need to\n  // crawl them in order to register watch dependencies.\n  const needInlineImport = code.includes('@import')\n  const hasUrl = cssUrlRE.test(code) || cssImageSetRE.test(code)\n  const postcssConfig = await resolvePostcssConfig(config)\n  const lang = id.match(cssLangRE)?.[1] as CssLang | undefined\n\n  // 1. plain css that needs no processing\n  if (\n    lang === 'css' &&\n    !postcssConfig &&\n    !isModule &&\n    !needInlineImport &&\n    !hasUrl\n  ) {\n    return { code }\n  }\n\n  let map: SourceMap | undefined\n  let modules: Record<string, string> | undefined\n  const deps = new Set<string>()\n\n  // 2. pre-processors: sass etc.\n  if (isPreProcessor(lang)) {\n    const preProcessor = preProcessors[lang]\n    let opts = (preprocessorOptions && preprocessorOptions[lang]) || {}\n    // support @import from node dependencies by default\n    switch (lang) {\n      case PreprocessLang.scss:\n      case PreprocessLang.sass:\n        opts = {\n          includePaths: ['node_modules'],\n          alias: config.resolve.alias,\n          ...opts\n        }\n        break\n      case PreprocessLang.less:\n      case PreprocessLang.styl:\n      case PreprocessLang.stylus:\n        opts = {\n          paths: ['node_modules'],\n          alias: config.resolve.alias,\n          ...opts\n        }\n    }\n    // important: set this for relative import resolving\n    opts.filename = cleanUrl(id)\n    const preprocessResult = await preProcessor(\n      code,\n      config.root,\n      opts,\n      atImportResolvers\n    )\n    if (preprocessResult.errors.length) {\n      throw preprocessResult.errors[0]\n    }\n\n    code = preprocessResult.code\n    map = preprocessResult.map as SourceMap\n    if (preprocessResult.deps) {\n      preprocessResult.deps.forEach((dep) => {\n        // sometimes sass registers the file itself as a dep\n        if (normalizePath(dep) !== normalizePath(opts.filename)) {\n          deps.add(dep)\n        }\n      })\n    }\n  }\n\n  // 3. postcss\n  const postcssOptions = (postcssConfig && postcssConfig.options) || {}\n  const postcssPlugins =\n    postcssConfig && postcssConfig.plugins ? postcssConfig.plugins.slice() : []\n\n  if (needInlineImport) {\n    postcssPlugins.unshift(\n      (await import('postcss-import')).default({\n        async resolve(id, basedir) {\n          const resolved = await atImportResolvers.css(\n            id,\n            path.join(basedir, '*')\n          )\n          if (resolved) {\n            return path.resolve(resolved)\n          }\n          return id\n        }\n      })\n    )\n  }\n  postcssPlugins.push(\n    UrlRewritePostcssPlugin({\n      replacer: urlReplacer\n    }) as Postcss.Plugin\n  )\n\n  if (isModule) {\n    postcssPlugins.unshift(\n      (await import('postcss-modules')).default({\n        ...modulesOptions,\n        getJSON(\n          cssFileName: string,\n          _modules: Record<string, string>,\n          outputFileName: string\n        ) {\n          modules = _modules\n          if (modulesOptions && typeof modulesOptions.getJSON === 'function') {\n            modulesOptions.getJSON(cssFileName, _modules, outputFileName)\n          }\n        },\n        async resolve(id: string) {\n          for (const key of getCssResolversKeys(atImportResolvers)) {\n            const resolved = await atImportResolvers[key](id)\n            if (resolved) {\n              return path.resolve(resolved)\n            }\n          }\n\n          return id\n        }\n      })\n    )\n  }\n\n  if (!postcssPlugins.length) {\n    return {\n      code,\n      map\n    }\n  }\n\n  // postcss is an unbundled dep and should be lazy imported\n  const postcssResult = await (await import('postcss'))\n    .default(postcssPlugins)\n    .process(code, {\n      ...postcssOptions,\n      to: id,\n      from: id,\n      map: {\n        inline: false,\n        annotation: false,\n        prev: map\n      }\n    })\n\n  // record CSS dependencies from @imports\n  for (const message of postcssResult.messages) {\n    if (message.type === 'dependency') {\n      deps.add(message.file as string)\n    } else if (message.type === 'dir-dependency') {\n      // https://github.com/postcss/postcss/blob/main/docs/guidelines/plugin.md#3-dependencies\n      const { dir, glob: globPattern = '**' } = message\n      const pattern =\n        normalizePath(path.resolve(path.dirname(id), dir)) + `/` + globPattern\n      const files = glob.sync(pattern, {\n        ignore: ['**/node_modules/**']\n      })\n      for (let i = 0; i < files.length; i++) {\n        deps.add(files[i])\n      }\n      if (server) {\n        // register glob importers so we can trigger updates on file add/remove\n        if (!(id in server._globImporters)) {\n          server._globImporters[id] = {\n            module: server.moduleGraph.getModuleById(id)!,\n            importGlobs: []\n          }\n        }\n        server._globImporters[id].importGlobs.push({\n          base: config.root,\n          pattern\n        })\n      }\n    } else if (message.type === 'warning') {\n      let msg = `[vite:css] ${message.text}`\n      if (message.line && message.column) {\n        msg += `\\n${generateCodeFrame(code, {\n          line: message.line,\n          column: message.column\n        })}`\n      }\n      config.logger.warn(chalk.yellow(msg))\n    }\n  }\n\n  return {\n    ast: postcssResult,\n    code: postcssResult.css,\n    map: postcssResult.map as any,\n    modules,\n    deps\n  }\n}\n\ninterface PostCSSConfigResult {\n  options: Postcss.ProcessOptions\n  plugins: Postcss.Plugin[]\n}\n\nasync function resolvePostcssConfig(\n  config: ResolvedConfig\n): Promise<PostCSSConfigResult | null> {\n  let result = postcssConfigCache.get(config)\n  if (result !== undefined) {\n    return result\n  }\n\n  // inline postcss config via vite config\n  const inlineOptions = config.css?.postcss\n  if (isObject(inlineOptions)) {\n    const options = { ...inlineOptions }\n\n    delete options.plugins\n    result = {\n      options,\n      plugins: inlineOptions.plugins || []\n    }\n  } else {\n    try {\n      const searchPath =\n        typeof inlineOptions === 'string' ? inlineOptions : config.root\n      // @ts-ignore\n      result = await postcssrc({}, searchPath)\n    } catch (e) {\n      if (!/No PostCSS Config found/.test(e.message)) {\n        throw e\n      }\n      result = null\n    }\n  }\n\n  postcssConfigCache.set(config, result)\n  return result\n}\n\ntype CssUrlReplacer = (\n  url: string,\n  importer?: string\n) => string | Promise<string>\n// https://drafts.csswg.org/css-syntax-3/#identifier-code-point\nexport const cssUrlRE =\n  /(?<=^|[^\\w\\-\\u0080-\\uffff])url\\(\\s*('[^']+'|\"[^\"]+\"|[^'\")]+)\\s*\\)/\nconst cssImageSetRE = /image-set\\(([^)]+)\\)/\n\nconst UrlRewritePostcssPlugin: Postcss.PluginCreator<{\n  replacer: CssUrlReplacer\n}> = (opts) => {\n  if (!opts) {\n    throw new Error('base or replace is required')\n  }\n\n  return {\n    postcssPlugin: 'vite-url-rewrite',\n    Once(root) {\n      const promises: Promise<void>[] = []\n      root.walkDecls((declaration) => {\n        const isCssUrl = cssUrlRE.test(declaration.value)\n        const isCssImageSet = cssImageSetRE.test(declaration.value)\n        if (isCssUrl || isCssImageSet) {\n          const replacerForDeclaration = (rawUrl: string) => {\n            const importer = declaration.source?.input.file\n            return opts.replacer(rawUrl, importer)\n          }\n          const rewriterToUse = isCssUrl ? rewriteCssUrls : rewriteCssImageSet\n          promises.push(\n            rewriterToUse(declaration.value, replacerForDeclaration).then(\n              (url) => {\n                declaration.value = url\n              }\n            )\n          )\n        }\n      })\n      if (promises.length) {\n        return Promise.all(promises) as any\n      }\n    }\n  }\n}\nUrlRewritePostcssPlugin.postcss = true\n\nfunction rewriteCssUrls(\n  css: string,\n  replacer: CssUrlReplacer\n): Promise<string> {\n  return asyncReplace(css, cssUrlRE, async (match) => {\n    const [matched, rawUrl] = match\n    return await doUrlReplace(rawUrl, matched, replacer)\n  })\n}\n\nfunction rewriteCssImageSet(\n  css: string,\n  replacer: CssUrlReplacer\n): Promise<string> {\n  return asyncReplace(css, cssImageSetRE, async (match) => {\n    const [matched, rawUrl] = match\n    const url = await processSrcSet(rawUrl, ({ url }) =>\n      doUrlReplace(url, matched, replacer)\n    )\n    return `image-set(${url})`\n  })\n}\nasync function doUrlReplace(\n  rawUrl: string,\n  matched: string,\n  replacer: CssUrlReplacer\n) {\n  let wrap = ''\n  const first = rawUrl[0]\n  if (first === `\"` || first === `'`) {\n    wrap = first\n    rawUrl = rawUrl.slice(1, -1)\n  }\n  if (isExternalUrl(rawUrl) || isDataUrl(rawUrl) || rawUrl.startsWith('#')) {\n    return matched\n  }\n\n  return `url(${wrap}${await replacer(rawUrl)}${wrap})`\n}\n\nasync function minifyCSS(css: string, config: ResolvedConfig) {\n  const { code, warnings } = await transform(css, {\n    loader: 'css',\n    minify: true,\n    target: config.build.target || undefined\n  })\n  if (warnings.length) {\n    const msgs = await formatMessages(warnings, { kind: 'warning' })\n    config.logger.warn(\n      chalk.yellow(`warnings when minifying css:\\n${msgs.join('\\n')}`)\n    )\n  }\n  return code\n}\n\n// #1845\n// CSS @import can only appear at top of the file. We need to hoist all @import\n// to top when multiple files are concatenated.\nasync function hoistAtImports(css: string) {\n  const postcss = await import('postcss')\n  return (await postcss.default([AtImportHoistPlugin]).process(css)).css\n}\n\nconst AtImportHoistPlugin: Postcss.PluginCreator<any> = () => {\n  return {\n    postcssPlugin: 'vite-hoist-at-imports',\n    Once(root) {\n      const imports: Postcss.AtRule[] = []\n      root.walkAtRules((rule) => {\n        if (rule.name === 'import') {\n          // record in reverse so that can simply prepend to preserve order\n          imports.unshift(rule)\n        }\n      })\n      imports.forEach((i) => root.prepend(i))\n    }\n  }\n}\nAtImportHoistPlugin.postcss = true\n\n// Preprocessor support. This logic is largely replicated from @vue/compiler-sfc\n\ntype PreprocessorAdditionalData =\n  | string\n  | ((source: string, filename: string) => string | Promise<string>)\n\ntype StylePreprocessorOptions = {\n  [key: string]: any\n  additionalData?: PreprocessorAdditionalData\n  filename: string\n  alias: Alias[]\n}\n\ntype SassStylePreprocessorOptions = StylePreprocessorOptions & Sass.Options\n\ntype StylePreprocessor = (\n  source: string,\n  root: string,\n  options: StylePreprocessorOptions,\n  resolvers: CSSAtImportResolvers\n) => StylePreprocessorResults | Promise<StylePreprocessorResults>\n\ntype SassStylePreprocessor = (\n  source: string,\n  root: string,\n  options: SassStylePreprocessorOptions,\n  resolvers: CSSAtImportResolvers\n) => StylePreprocessorResults | Promise<StylePreprocessorResults>\n\nexport interface StylePreprocessorResults {\n  code: string\n  map?: object\n  errors: RollupError[]\n  deps: string[]\n}\n\nconst loadedPreprocessors: Partial<Record<PreprocessLang, any>> = {}\n\nfunction loadPreprocessor(lang: PreprocessLang.scss, root: string): typeof Sass\nfunction loadPreprocessor(lang: PreprocessLang.sass, root: string): typeof Sass\nfunction loadPreprocessor(lang: PreprocessLang.less, root: string): typeof Less\nfunction loadPreprocessor(\n  lang: PreprocessLang.stylus,\n  root: string\n): typeof Stylus\nfunction loadPreprocessor(lang: PreprocessLang, root: string): any {\n  if (lang in loadedPreprocessors) {\n    return loadedPreprocessors[lang]\n  }\n  try {\n    // Search for the preprocessor in the root directory first, and fall back\n    // to the default require paths.\n    const fallbackPaths = require.resolve.paths?.(lang) || []\n    const resolved = require.resolve(lang, { paths: [root, ...fallbackPaths] })\n    return (loadedPreprocessors[lang] = require(resolved))\n  } catch (e) {\n    throw new Error(\n      `Preprocessor dependency \"${lang}\" not found. Did you install it?`\n    )\n  }\n}\n\n// .scss/.sass processor\nconst scss: SassStylePreprocessor = async (\n  source,\n  root,\n  options,\n  resolvers\n) => {\n  const render = loadPreprocessor(PreprocessLang.sass, root).render\n  const internalImporter: Sass.Importer = (url, importer, done) => {\n    resolvers.sass(url, importer).then((resolved) => {\n      if (resolved) {\n        rebaseUrls(resolved, options.filename, options.alias)\n          .then(done)\n          .catch(done)\n      } else {\n        done(null)\n      }\n    })\n  }\n  const importer = [internalImporter]\n  if (options.importer) {\n    Array.isArray(options.importer)\n      ? importer.push(...options.importer)\n      : importer.push(options.importer)\n  }\n\n  const finalOptions: Sass.Options = {\n    ...options,\n    data: await getSource(source, options.filename, options.additionalData),\n    file: options.filename,\n    outFile: options.filename,\n    importer\n  }\n\n  try {\n    const result = await new Promise<Sass.Result>((resolve, reject) => {\n      render(finalOptions, (err, res) => {\n        if (err) {\n          reject(err)\n        } else {\n          resolve(res)\n        }\n      })\n    })\n    const deps = result.stats.includedFiles\n\n    return {\n      code: result.css.toString(),\n      errors: [],\n      deps\n    }\n  } catch (e) {\n    // normalize SASS error\n    e.id = e.file\n    e.frame = e.formatted\n    return { code: '', errors: [e], deps: [] }\n  }\n}\n\nconst sass: SassStylePreprocessor = (source, root, options, aliasResolver) =>\n  scss(\n    source,\n    root,\n    {\n      ...options,\n      indentedSyntax: true\n    },\n    aliasResolver\n  )\n\n/**\n * relative url() inside \\@imported sass and less files must be rebased to use\n * root file as base.\n */\nasync function rebaseUrls(\n  file: string,\n  rootFile: string,\n  alias: Alias[]\n): Promise<Sass.ImporterReturnType> {\n  file = path.resolve(file) // ensure os-specific flashes\n  // in the same dir, no need to rebase\n  const fileDir = path.dirname(file)\n  const rootDir = path.dirname(rootFile)\n  if (fileDir === rootDir) {\n    return { file }\n  }\n  // no url()\n  const content = fs.readFileSync(file, 'utf-8')\n  if (!cssUrlRE.test(content)) {\n    return { file }\n  }\n  const rebased = await rewriteCssUrls(content, (url) => {\n    if (url.startsWith('/')) return url\n    // match alias, no need to rewrite\n    for (const { find } of alias) {\n      const matches =\n        typeof find === 'string' ? url.startsWith(find) : find.test(url)\n      if (matches) {\n        return url\n      }\n    }\n    const absolute = path.resolve(fileDir, url)\n    const relative = path.relative(rootDir, absolute)\n    return normalizePath(relative)\n  })\n  return {\n    file,\n    contents: rebased\n  }\n}\n\n// .less\nconst less: StylePreprocessor = async (source, root, options, resolvers) => {\n  const nodeLess = loadPreprocessor(PreprocessLang.less, root)\n  const viteResolverPlugin = createViteLessPlugin(\n    nodeLess,\n    options.filename,\n    options.alias,\n    resolvers\n  )\n  source = await getSource(source, options.filename, options.additionalData)\n\n  let result: Less.RenderOutput | undefined\n  try {\n    result = await nodeLess.render(source, {\n      ...options,\n      plugins: [viteResolverPlugin, ...(options.plugins || [])]\n    })\n  } catch (e) {\n    const error = e as Less.RenderError\n    // normalize error info\n    const normalizedError: RollupError = new Error(error.message || error.type)\n    normalizedError.loc = {\n      file: error.filename || options.filename,\n      line: error.line,\n      column: error.column\n    }\n    return { code: '', errors: [normalizedError], deps: [] }\n  }\n  return {\n    code: result.css.toString(),\n    deps: result.imports,\n    errors: []\n  }\n}\n\n/**\n * Less manager, lazy initialized\n */\nlet ViteLessManager: any\n\nfunction createViteLessPlugin(\n  less: typeof Less,\n  rootFile: string,\n  alias: Alias[],\n  resolvers: CSSAtImportResolvers\n): Less.Plugin {\n  if (!ViteLessManager) {\n    ViteLessManager = class ViteManager extends less.FileManager {\n      resolvers\n      rootFile\n      alias\n      constructor(\n        rootFile: string,\n        resolvers: CSSAtImportResolvers,\n        alias: Alias[]\n      ) {\n        super()\n        this.rootFile = rootFile\n        this.resolvers = resolvers\n        this.alias = alias\n      }\n      override supports() {\n        return true\n      }\n      override supportsSync() {\n        return false\n      }\n      override async loadFile(\n        filename: string,\n        dir: string,\n        opts: any,\n        env: any\n      ): Promise<Less.FileLoadResult> {\n        const resolved = await this.resolvers.less(\n          filename,\n          path.join(dir, '*')\n        )\n        if (resolved) {\n          const result = await rebaseUrls(resolved, this.rootFile, this.alias)\n          let contents: string\n          if (result && 'contents' in result) {\n            contents = result.contents\n          } else {\n            contents = fs.readFileSync(resolved, 'utf-8')\n          }\n          return {\n            filename: path.resolve(resolved),\n            contents\n          }\n        } else {\n          return super.loadFile(filename, dir, opts, env)\n        }\n      }\n    }\n  }\n\n  return {\n    install(_, pluginManager) {\n      pluginManager.addFileManager(\n        new ViteLessManager(rootFile, resolvers, alias)\n      )\n    },\n    minVersion: [3, 0, 0]\n  }\n}\n\n// .styl\nconst styl: StylePreprocessor = async (source, root, options) => {\n  const nodeStylus = loadPreprocessor(PreprocessLang.stylus, root)\n  // Get source with preprocessor options.additionalData. Make sure a new line separator\n  // is added to avoid any render error, as added stylus content may not have semi-colon separators\n  source = await getSource(\n    source,\n    options.filename,\n    options.additionalData,\n    '\\n'\n  )\n  // Get preprocessor options.imports dependencies as stylus\n  // does not return them with its builtin `.deps()` method\n  const importsDeps = (options.imports ?? []).map((dep: string) =>\n    path.resolve(dep)\n  )\n  try {\n    const ref = nodeStylus(source, options)\n\n    // if (map) ref.set('sourcemap', { inline: false, comment: false })\n\n    const result = ref.render()\n\n    // Concat imports deps with computed deps\n    const deps = [...ref.deps(), ...importsDeps]\n\n    return { code: result, errors: [], deps }\n  } catch (e) {\n    return { code: '', errors: [e], deps: [] }\n  }\n}\n\nfunction getSource(\n  source: string,\n  filename: string,\n  additionalData?: PreprocessorAdditionalData,\n  sep: string = ''\n): string | Promise<string> {\n  if (!additionalData) return source\n  if (typeof additionalData === 'function') {\n    return additionalData(source, filename)\n  }\n  return additionalData + sep + source\n}\n\nconst preProcessors = Object.freeze({\n  [PreprocessLang.less]: less,\n  [PreprocessLang.sass]: sass,\n  [PreprocessLang.scss]: scss,\n  [PreprocessLang.styl]: styl,\n  [PreprocessLang.stylus]: styl\n})\n\nfunction isPreProcessor(lang: any): lang is PreprocessLang {\n  return lang && lang in preProcessors\n}\n","import path from 'path'\nimport glob from 'fast-glob'\nimport {\n  isModernFlag,\n  preloadMethod,\n  preloadMarker\n} from './plugins/importAnalysisBuild'\nimport { cleanUrl } from './utils'\nimport { RollupError } from 'rollup'\n\nexport async function transformImportGlob(\n  source: string,\n  pos: number,\n  importer: string,\n  importIndex: number,\n  root: string,\n  normalizeUrl?: (url: string, pos: number) => Promise<[string, string]>,\n  preload = true\n): Promise<{\n  importsString: string\n  imports: string[]\n  exp: string\n  endIndex: number\n  isEager: boolean\n  pattern: string\n  base: string\n}> {\n  const isEager = source.slice(pos, pos + 21) === 'import.meta.globEager'\n  const isEagerDefault =\n    isEager && source.slice(pos + 21, pos + 28) === 'Default'\n\n  const err = (msg: string) => {\n    const e = new Error(`Invalid glob import syntax: ${msg}`)\n    ;(e as any).pos = pos\n    return e\n  }\n\n  importer = cleanUrl(importer)\n  const importerBasename = path.basename(importer)\n\n  let [pattern, endIndex] = lexGlobPattern(source, pos)\n  if (!pattern.startsWith('.') && !pattern.startsWith('/')) {\n    throw err(`pattern must start with \".\" or \"/\" (relative to project root)`)\n  }\n  let base: string\n  let parentDepth = 0\n  const isAbsolute = pattern.startsWith('/')\n  if (isAbsolute) {\n    base = path.resolve(root)\n    pattern = pattern.slice(1)\n  } else {\n    base = path.dirname(importer)\n    while (pattern.startsWith('../')) {\n      pattern = pattern.slice(3)\n      base = path.resolve(base, '../')\n      parentDepth++\n    }\n    if (pattern.startsWith('./')) {\n      pattern = pattern.slice(2)\n    }\n  }\n  const files = glob.sync(pattern, {\n    cwd: base,\n    ignore: ['**/node_modules/**']\n  })\n  const imports: string[] = []\n  let importsString = ``\n  let entries = ``\n  for (let i = 0; i < files.length; i++) {\n    // skip importer itself\n    if (files[i] === importerBasename) continue\n    const file = isAbsolute\n      ? `/${files[i]}`\n      : parentDepth\n      ? `${'../'.repeat(parentDepth)}${files[i]}`\n      : `./${files[i]}`\n    let importee = file\n    if (normalizeUrl) {\n      ;[importee] = await normalizeUrl(file, pos)\n    }\n    imports.push(importee)\n    const identifier = `__glob_${importIndex}_${i}`\n    if (isEager) {\n      importsString += `import ${\n        isEagerDefault ? `` : `* as `\n      }${identifier} from ${JSON.stringify(importee)};`\n      entries += ` ${JSON.stringify(file)}: ${identifier},`\n    } else {\n      let imp = `import(${JSON.stringify(importee)})`\n      if (!normalizeUrl && preload) {\n        imp =\n          `(${isModernFlag}` +\n          `? ${preloadMethod}(()=>${imp},\"${preloadMarker}\")` +\n          `: ${imp})`\n      }\n      entries += ` ${JSON.stringify(file)}: () => ${imp},`\n    }\n  }\n\n  return {\n    imports,\n    importsString,\n    exp: `{${entries}}`,\n    endIndex,\n    isEager,\n    pattern,\n    base\n  }\n}\n\nconst enum LexerState {\n  inCall,\n  inSingleQuoteString,\n  inDoubleQuoteString,\n  inTemplateString\n}\n\nfunction lexGlobPattern(code: string, pos: number): [string, number] {\n  let state = LexerState.inCall\n  let pattern = ''\n\n  let i = code.indexOf(`(`, pos) + 1\n  outer: for (; i < code.length; i++) {\n    const char = code.charAt(i)\n    switch (state) {\n      case LexerState.inCall:\n        if (char === `'`) {\n          state = LexerState.inSingleQuoteString\n        } else if (char === `\"`) {\n          state = LexerState.inDoubleQuoteString\n        } else if (char === '`') {\n          state = LexerState.inTemplateString\n        } else if (/\\s/.test(char)) {\n          continue\n        } else {\n          error(i)\n        }\n        break\n      case LexerState.inSingleQuoteString:\n        if (char === `'`) {\n          break outer\n        } else {\n          pattern += char\n        }\n        break\n      case LexerState.inDoubleQuoteString:\n        if (char === `\"`) {\n          break outer\n        } else {\n          pattern += char\n        }\n        break\n      case LexerState.inTemplateString:\n        if (char === '`') {\n          break outer\n        } else {\n          pattern += char\n        }\n        break\n      default:\n        throw new Error('unknown import.meta.glob lexer state')\n    }\n  }\n  return [pattern, code.indexOf(`)`, i) + 1]\n}\n\nfunction error(pos: number) {\n  const err = new Error(\n    `import.meta.glob() can only accept string literals.`\n  ) as RollupError\n  err.pos = pos\n  throw err\n}\n","import path from 'path'\nimport { ResolvedConfig } from '../config'\nimport { Plugin } from '../plugin'\nimport MagicString from 'magic-string'\nimport { ImportSpecifier, init, parse as parseImports } from 'es-module-lexer'\nimport { OutputChunk } from 'rollup'\nimport {\n  chunkToEmittedCssFileMap,\n  isCSSRequest,\n  removedPureCssFilesCache\n} from './css'\nimport { transformImportGlob } from '../importGlob'\nimport { bareImportRE } from '../utils'\n\n/**\n * A flag for injected helpers. This flag will be set to `false` if the output\n * target is not native es - so that injected helper logic can be conditionally\n * dropped.\n */\nexport const isModernFlag = `__VITE_IS_MODERN__`\nexport const preloadMethod = `__vitePreload`\nexport const preloadMarker = `__VITE_PRELOAD__`\nexport const preloadBaseMarker = `__VITE_PRELOAD_BASE__`\n\nconst preloadHelperId = 'vite/preload-helper'\nconst preloadMarkerRE = new RegExp(`\"${preloadMarker}\"`, 'g')\n\n/**\n * Helper for preloading CSS and direct imports of async chunks in parallel to\n * the async chunk itself.\n */\n\nfunction detectScriptRel() {\n  // @ts-ignore\n  const relList = document.createElement('link').relList\n  // @ts-ignore\n  return relList && relList.supports && relList.supports('modulepreload')\n    ? 'modulepreload'\n    : 'preload'\n}\n\ndeclare const scriptRel: string\nfunction preload(baseModule: () => Promise<{}>, deps?: string[]) {\n  // @ts-ignore\n  if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n    return baseModule()\n  }\n\n  return Promise.all(\n    deps.map((dep) => {\n      // @ts-ignore\n      dep = `${base}${dep}`\n      // @ts-ignore\n      if (dep in seen) return\n      // @ts-ignore\n      seen[dep] = true\n      const isCss = dep.endsWith('.css')\n      const cssSelector = isCss ? '[rel=\"stylesheet\"]' : ''\n      // @ts-ignore check if the file is already preloaded by SSR markup\n      if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n        return\n      }\n      // @ts-ignore\n      const link = document.createElement('link')\n      // @ts-ignore\n      link.rel = isCss ? 'stylesheet' : scriptRel\n      if (!isCss) {\n        link.as = 'script'\n        link.crossOrigin = ''\n      }\n      link.href = dep\n      // @ts-ignore\n      document.head.appendChild(link)\n      if (isCss) {\n        return new Promise((res, rej) => {\n          link.addEventListener('load', res)\n          link.addEventListener('error', rej)\n        })\n      }\n    })\n  ).then(() => baseModule())\n}\n\n/**\n * Build only. During serve this is performed as part of ./importAnalysis.\n */\nexport function buildImportAnalysisPlugin(config: ResolvedConfig): Plugin {\n  const ssr = !!config.build.ssr\n  const insertPreload = !(ssr || !!config.build.lib)\n\n  const scriptRel = config.build.polyfillModulePreload\n    ? `'modulepreload'`\n    : `(${detectScriptRel.toString()})()`\n  const preloadCode = `const scriptRel = ${scriptRel};const seen = {};const base = '${preloadBaseMarker}';export const ${preloadMethod} = ${preload.toString()}`\n\n  return {\n    name: 'vite:import-analysis',\n\n    resolveId(id) {\n      if (id === preloadHelperId) {\n        return id\n      }\n    },\n\n    load(id) {\n      if (id === preloadHelperId) {\n        return preloadCode.replace(preloadBaseMarker, config.base)\n      }\n    },\n\n    async transform(source, importer) {\n      if (\n        importer.includes('node_modules') &&\n        !source.includes('import.meta.glob')\n      ) {\n        return\n      }\n\n      await init\n\n      let imports: readonly ImportSpecifier[] = []\n      try {\n        imports = parseImports(source)[0]\n      } catch (e: any) {\n        this.error(e, e.idx)\n      }\n\n      if (!imports.length) {\n        return null\n      }\n\n      let s: MagicString | undefined\n      const str = () => s || (s = new MagicString(source))\n      let needPreloadHelper = false\n\n      for (let index = 0; index < imports.length; index++) {\n        const {\n          s: start,\n          e: end,\n          ss: expStart,\n          n: specifier,\n          d: dynamicIndex\n        } = imports[index]\n\n        // import.meta.glob\n        if (\n          source.slice(start, end) === 'import.meta' &&\n          source.slice(end, end + 5) === '.glob'\n        ) {\n          const { importsString, exp, endIndex, isEager } =\n            await transformImportGlob(\n              source,\n              start,\n              importer,\n              index,\n              config.root,\n              undefined,\n              insertPreload\n            )\n          str().prepend(importsString)\n          str().overwrite(expStart, endIndex, exp)\n          if (!isEager) {\n            needPreloadHelper = true\n          }\n          continue\n        }\n\n        if (dynamicIndex > -1 && insertPreload) {\n          needPreloadHelper = true\n          const dynamicEnd = source.indexOf(`)`, end) + 1\n          const original = source.slice(dynamicIndex, dynamicEnd)\n          const replacement = `${preloadMethod}(() => ${original},${isModernFlag}?\"${preloadMarker}\":void 0)`\n          str().overwrite(dynamicIndex, dynamicEnd, replacement)\n        }\n\n        // Differentiate CSS imports that use the default export from those that\n        // do not by injecting a ?used query - this allows us to avoid including\n        // the CSS string when unnecessary (esbuild has trouble treeshaking\n        // them)\n        if (\n          specifier &&\n          isCSSRequest(specifier) &&\n          source.slice(expStart, start).includes('from') &&\n          // edge case for package names ending with .css (e.g normalize.css)\n          !(bareImportRE.test(specifier) && !specifier.includes('/'))\n        ) {\n          const url = specifier.replace(/\\?|$/, (m) => `?used${m ? '&' : ''}`)\n          str().overwrite(start, end, dynamicIndex > -1 ? `'${url}'` : url)\n        }\n      }\n\n      if (\n        needPreloadHelper &&\n        insertPreload &&\n        !source.includes(`const ${preloadMethod} =`)\n      ) {\n        str().prepend(`import { ${preloadMethod} } from \"${preloadHelperId}\";`)\n      }\n\n      if (s) {\n        return {\n          code: s.toString(),\n          map: config.build.sourcemap ? s.generateMap({ hires: true }) : null\n        }\n      }\n    },\n\n    renderChunk(code, _, { format }) {\n      // make sure we only perform the preload logic in modern builds.\n      if (code.indexOf(isModernFlag) > -1) {\n        const re = new RegExp(isModernFlag, 'g')\n        const isModern = String(format === 'es')\n        if (config.build.sourcemap) {\n          const s = new MagicString(code)\n          let match: RegExpExecArray | null\n          while ((match = re.exec(code))) {\n            s.overwrite(\n              match.index,\n              match.index + isModernFlag.length,\n              isModern\n            )\n          }\n          return {\n            code: s.toString(),\n            map: s.generateMap({ hires: true })\n          }\n        } else {\n          return code.replace(re, isModern)\n        }\n      }\n      return null\n    },\n\n    generateBundle({ format }, bundle) {\n      if (format !== 'es' || ssr) {\n        return\n      }\n\n      for (const file in bundle) {\n        const chunk = bundle[file]\n        // can't use chunk.dynamicImports.length here since some modules e.g.\n        // dynamic import to constant json may get inlined.\n        if (chunk.type === 'chunk' && chunk.code.indexOf(preloadMarker) > -1) {\n          const code = chunk.code\n          let imports: ImportSpecifier[]\n          try {\n            imports = parseImports(code)[0].filter((i) => i.d > -1)\n          } catch (e: any) {\n            this.error(e, e.idx)\n          }\n\n          if (imports.length) {\n            const s = new MagicString(code)\n            for (let index = 0; index < imports.length; index++) {\n              const { s: start, e: end, d: dynamicIndex } = imports[index]\n              // check the chunk being imported\n              const url = code.slice(start, end)\n              const deps: Set<string> = new Set()\n              let hasRemovedPureCssChunk = false\n\n              if (url[0] === `\"` && url[url.length - 1] === `\"`) {\n                const ownerFilename = chunk.fileName\n                // literal import - trace direct imports and add to deps\n                const analyzed: Set<string> = new Set<string>()\n                const addDeps = (filename: string) => {\n                  if (filename === ownerFilename) return\n                  if (analyzed.has(filename)) return\n                  analyzed.add(filename)\n                  const chunk = bundle[filename] as OutputChunk | undefined\n                  if (chunk) {\n                    deps.add(chunk.fileName)\n                    const cssFiles = chunkToEmittedCssFileMap.get(chunk)\n                    if (cssFiles) {\n                      cssFiles.forEach((file) => {\n                        deps.add(file)\n                      })\n                    }\n                    chunk.imports.forEach(addDeps)\n                  } else {\n                    const removedPureCssFiles =\n                      removedPureCssFilesCache.get(config)!\n                    const chunk = removedPureCssFiles.get(filename)\n                    if (chunk) {\n                      const cssFiles = chunkToEmittedCssFileMap.get(chunk)\n                      if (cssFiles && cssFiles.size > 0) {\n                        cssFiles.forEach((file) => {\n                          deps.add(file)\n                        })\n                        hasRemovedPureCssChunk = true\n                      }\n\n                      s.overwrite(dynamicIndex, end + 1, 'Promise.resolve({})')\n                    }\n                  }\n                }\n                const normalizedFile = path.posix.join(\n                  path.posix.dirname(chunk.fileName),\n                  url.slice(1, -1)\n                )\n                addDeps(normalizedFile)\n              }\n\n              let markPos = code.indexOf(preloadMarker, end)\n              // fix issue #3051\n              if (markPos === -1 && imports.length === 1) {\n                markPos = code.indexOf(preloadMarker)\n              }\n\n              if (markPos > 0) {\n                s.overwrite(\n                  markPos - 1,\n                  markPos + preloadMarker.length + 1,\n                  // the dep list includes the main chunk, so only need to\n                  // preload when there are actual other deps.\n                  deps.size > 1 ||\n                    // main chunk is removed\n                    (hasRemovedPureCssChunk && deps.size > 0)\n                    ? `[${[...deps].map((d) => JSON.stringify(d)).join(',')}]`\n                    : `[]`\n                )\n              }\n            }\n            chunk.code = s.toString()\n            // TODO source map\n          }\n\n          // there may still be markers due to inlined dynamic imports, remove\n          // all the markers regardless\n          chunk.code = chunk.code.replace(preloadMarkerRE, 'void 0')\n        }\n      }\n    }\n  }\n}\n","import { ResolvedConfig } from '..'\nimport { Plugin } from '../plugin'\nimport { isModernFlag } from './importAnalysisBuild'\n\nexport const modulePreloadPolyfillId = 'vite/modulepreload-polyfill'\n\nexport function modulePreloadPolyfillPlugin(config: ResolvedConfig): Plugin {\n  const skip = config.build.ssr\n  let polyfillString: string | undefined\n\n  return {\n    name: 'vite:modulepreload-polyfill',\n    resolveId(id) {\n      if (id === modulePreloadPolyfillId) {\n        return id\n      }\n    },\n    load(id) {\n      if (id === modulePreloadPolyfillId) {\n        if (skip) {\n          return ''\n        }\n        if (!polyfillString) {\n          polyfillString =\n            `const p = ${polyfill.toString()};` + `${isModernFlag}&&p();`\n        }\n        return polyfillString\n      }\n    }\n  }\n}\n\n/**\nThe following polyfill function is meant to run in the browser and adapted from\nhttps://github.com/guybedford/es-module-shims\nMIT License\nCopyright (C) 2018-2021 Guy Bedford\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n*/\n\ndeclare const document: any\ndeclare const MutationObserver: any\ndeclare const fetch: any\n\nfunction polyfill() {\n  const relList = document.createElement('link').relList\n  if (relList && relList.supports && relList.supports('modulepreload')) {\n    return\n  }\n\n  for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n    processPreload(link)\n  }\n\n  new MutationObserver((mutations: any) => {\n    for (const mutation of mutations) {\n      if (mutation.type !== 'childList') {\n        continue\n      }\n      for (const node of mutation.addedNodes) {\n        if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n          processPreload(node)\n      }\n    }\n  }).observe(document, { childList: true, subtree: true })\n\n  function getFetchOpts(script: any) {\n    const fetchOpts = {} as any\n    if (script.integrity) fetchOpts.integrity = script.integrity\n    if (script.referrerpolicy) fetchOpts.referrerPolicy = script.referrerpolicy\n    if (script.crossorigin === 'use-credentials')\n      fetchOpts.credentials = 'include'\n    else if (script.crossorigin === 'anonymous') fetchOpts.credentials = 'omit'\n    else fetchOpts.credentials = 'same-origin'\n    return fetchOpts\n  }\n\n  function processPreload(link: any) {\n    if (link.ep)\n      // ep marker = processed\n      return\n    link.ep = true\n    // prepopulate the load record\n    const fetchOpts = getFetchOpts(link)\n    fetch(link.href, fetchOpts)\n  }\n}\n","import fs from 'fs'\nimport path from 'path'\nimport { Plugin } from '../plugin'\nimport { ViteDevServer } from '../server'\nimport { OutputAsset, OutputBundle, OutputChunk } from 'rollup'\nimport {\n  slash,\n  cleanUrl,\n  isExternalUrl,\n  isDataUrl,\n  generateCodeFrame,\n  processSrcSet\n} from '../utils'\nimport { ResolvedConfig } from '../config'\nimport MagicString from 'magic-string'\nimport {\n  checkPublicFile,\n  assetUrlRE,\n  urlToBuiltUrl,\n  getAssetFilename\n} from './asset'\nimport { isCSSRequest, chunkToEmittedCssFileMap } from './css'\nimport { modulePreloadPolyfillId } from './modulePreloadPolyfill'\nimport {\n  AttributeNode,\n  NodeTransform,\n  NodeTypes,\n  ElementNode\n} from '@vue/compiler-dom'\n\nconst htmlProxyRE = /\\?html-proxy&index=(\\d+)\\.js$/\nexport const isHTMLProxy = (id: string): boolean => htmlProxyRE.test(id)\n\nconst htmlCommentRE = /<!--[\\s\\S]*?-->/g\nconst scriptModuleRE =\n  /(<script\\b[^>]*type\\s*=\\s*(?:\"module\"|'module')[^>]*>)(.*?)<\\/script>/gims\n\nexport function htmlInlineScriptProxyPlugin(): Plugin {\n  return {\n    name: 'vite:html',\n\n    resolveId(id) {\n      if (htmlProxyRE.test(id)) {\n        return id\n      }\n    },\n\n    load(id) {\n      const proxyMatch = id.match(htmlProxyRE)\n      if (proxyMatch) {\n        const index = Number(proxyMatch[1])\n        const file = cleanUrl(id)\n        const html = fs.readFileSync(file, 'utf-8').replace(htmlCommentRE, '')\n        let match: RegExpExecArray | null | undefined\n        scriptModuleRE.lastIndex = 0\n        for (let i = 0; i <= index; i++) {\n          match = scriptModuleRE.exec(html)\n        }\n        if (match) {\n          return match[2]\n        } else {\n          throw new Error(`No matching html proxy module found from ${id}`)\n        }\n      }\n    }\n  }\n}\n\n// this extends the config in @vue/compiler-sfc with <link href>\nexport const assetAttrsConfig: Record<string, string[]> = {\n  link: ['href'],\n  video: ['src', 'poster'],\n  source: ['src', 'srcset'],\n  img: ['src', 'srcset'],\n  image: ['xlink:href', 'href'],\n  use: ['xlink:href', 'href']\n}\n\nexport const isAsyncScriptMap = new WeakMap<\n  ResolvedConfig,\n  Map<string, boolean>\n>()\n\nexport async function traverseHtml(\n  html: string,\n  filePath: string,\n  visitor: NodeTransform\n): Promise<void> {\n  // lazy load compiler\n  const { parse, transform } = await import('@vue/compiler-dom')\n  // @vue/compiler-core doesn't like lowercase doctypes\n  html = html.replace(/<!doctype\\s/i, '<!DOCTYPE ')\n  try {\n    const ast = parse(html, { comments: true })\n    transform(ast, {\n      nodeTransforms: [visitor]\n    })\n  } catch (e) {\n    const parseError = {\n      loc: filePath,\n      frame: '',\n      ...formatParseError(e, filePath, html)\n    }\n    throw new Error(\n      `Unable to parse ${JSON.stringify(parseError.loc)}\\n${parseError.frame}`\n    )\n  }\n}\n\nexport function getScriptInfo(node: ElementNode): {\n  src: AttributeNode | undefined\n  isModule: boolean\n  isAsync: boolean\n} {\n  let src: AttributeNode | undefined\n  let isModule = false\n  let isAsync = false\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i]\n    if (p.type === NodeTypes.ATTRIBUTE) {\n      if (p.name === 'src') {\n        src = p\n      } else if (p.name === 'type' && p.value && p.value.content === 'module') {\n        isModule = true\n      } else if (p.name === 'async') {\n        isAsync = true\n      }\n    }\n  }\n  return { src, isModule, isAsync }\n}\n\nfunction formatParseError(e: any, id: string, html: string): Error {\n  // normalize the error to rollup format\n  if (e.loc) {\n    e.frame = generateCodeFrame(html, e.loc.start.offset)\n    e.loc = {\n      file: id,\n      line: e.loc.start.line,\n      column: e.loc.start.column\n    }\n  }\n  return e\n}\n\n/**\n * Compiles index.html into an entry js module\n */\nexport function buildHtmlPlugin(config: ResolvedConfig): Plugin {\n  const [preHooks, postHooks] = resolveHtmlTransforms(config.plugins)\n  const processedHtml = new Map<string, string>()\n  const isExcludedUrl = (url: string) =>\n    url.startsWith('#') ||\n    isExternalUrl(url) ||\n    isDataUrl(url) ||\n    checkPublicFile(url, config)\n\n  return {\n    name: 'vite:build-html',\n\n    buildStart() {\n      isAsyncScriptMap.set(config, new Map())\n    },\n\n    async transform(html, id) {\n      if (id.endsWith('.html')) {\n        const publicPath = `/${slash(path.relative(config.root, id))}`\n        // pre-transform\n        html = await applyHtmlTransforms(html, preHooks, {\n          path: publicPath,\n          filename: id\n        })\n\n        let js = ''\n        const s = new MagicString(html)\n        const assetUrls: AttributeNode[] = []\n        let inlineModuleIndex = -1\n\n        let everyScriptIsAsync = true\n        let someScriptsAreAsync = false\n        let someScriptsAreDefer = false\n\n        await traverseHtml(html, id, (node) => {\n          if (node.type !== NodeTypes.ELEMENT) {\n            return\n          }\n\n          let shouldRemove = false\n\n          // script tags\n          if (node.tag === 'script') {\n            const { src, isModule, isAsync } = getScriptInfo(node)\n\n            const url = src && src.value && src.value.content\n            if (url && checkPublicFile(url, config)) {\n              // referencing public dir url, prefix with base\n              s.overwrite(\n                src!.value!.loc.start.offset,\n                src!.value!.loc.end.offset,\n                `\"${config.base + url.slice(1)}\"`\n              )\n            }\n\n            if (isModule) {\n              inlineModuleIndex++\n              if (url && !isExcludedUrl(url)) {\n                // <script type=\"module\" src=\"...\"/>\n                // add it as an import\n                js += `\\nimport ${JSON.stringify(url)}`\n                shouldRemove = true\n              } else if (node.children.length) {\n                // <script type=\"module\">...</script>\n                js += `\\nimport \"${id}?html-proxy&index=${inlineModuleIndex}.js\"`\n                shouldRemove = true\n              }\n\n              everyScriptIsAsync &&= isAsync\n              someScriptsAreAsync ||= isAsync\n              someScriptsAreDefer ||= !isAsync\n            }\n          }\n\n          // For asset references in index.html, also generate an import\n          // statement for each - this will be handled by the asset plugin\n          const assetAttrs = assetAttrsConfig[node.tag]\n          if (assetAttrs) {\n            for (const p of node.props) {\n              if (\n                p.type === NodeTypes.ATTRIBUTE &&\n                p.value &&\n                assetAttrs.includes(p.name)\n              ) {\n                const url = p.value.content\n                if (!isExcludedUrl(url)) {\n                  if (node.tag === 'link' && isCSSRequest(url)) {\n                    // CSS references, convert to import\n                    js += `\\nimport ${JSON.stringify(url)}`\n                    shouldRemove = true\n                  } else {\n                    assetUrls.push(p)\n                  }\n                } else if (checkPublicFile(url, config)) {\n                  s.overwrite(\n                    p.value.loc.start.offset,\n                    p.value.loc.end.offset,\n                    `\"${config.base + url.slice(1)}\"`\n                  )\n                }\n              }\n            }\n          }\n\n          if (shouldRemove) {\n            // remove the script tag from the html. we are going to inject new\n            // ones in the end.\n            s.remove(node.loc.start.offset, node.loc.end.offset)\n          }\n        })\n\n        isAsyncScriptMap.get(config)!.set(id, everyScriptIsAsync)\n\n        if (someScriptsAreAsync && someScriptsAreDefer) {\n          config.logger.warn(\n            `\\nMixed async and defer script modules in ${id}, output script will fallback to defer. Every script, including inline ones, need to be marked as async for your output script to be async.`\n          )\n        }\n\n        // for each encountered asset url, rewrite original html so that it\n        // references the post-build location.\n        for (const attr of assetUrls) {\n          const value = attr.value!\n          try {\n            const url =\n              attr.name === 'srcset'\n                ? await processSrcSet(value.content, ({ url }) =>\n                    urlToBuiltUrl(url, id, config, this)\n                  )\n                : await urlToBuiltUrl(value.content, id, config, this)\n\n            s.overwrite(\n              value.loc.start.offset,\n              value.loc.end.offset,\n              `\"${url}\"`\n            )\n          } catch (e) {\n            // #1885 preload may be pointing to urls that do not exist\n            // locally on disk\n            if (e.code !== 'ENOENT') {\n              throw e\n            }\n          }\n        }\n\n        processedHtml.set(id, s.toString())\n\n        // inject module preload polyfill\n        if (config.build.polyfillModulePreload) {\n          js = `import \"${modulePreloadPolyfillId}\";\\n${js}`\n        }\n\n        return js\n      }\n    },\n\n    async generateBundle(options, bundle) {\n      const analyzedChunk: Map<OutputChunk, number> = new Map()\n      const getImportedChunks = (\n        chunk: OutputChunk,\n        seen: Set<string> = new Set()\n      ): OutputChunk[] => {\n        const chunks: OutputChunk[] = []\n        chunk.imports.forEach((file) => {\n          const importee = bundle[file]\n          if (importee?.type === 'chunk' && !seen.has(file)) {\n            seen.add(file)\n\n            // post-order traversal\n            chunks.push(...getImportedChunks(importee, seen))\n            chunks.push(importee)\n          }\n        })\n        return chunks\n      }\n\n      const toScriptTag = (\n        chunk: OutputChunk,\n        isAsync: boolean\n      ): HtmlTagDescriptor => ({\n        tag: 'script',\n        attrs: {\n          ...(isAsync ? { async: true } : {}),\n          type: 'module',\n          crossorigin: true,\n          src: toPublicPath(chunk.fileName, config)\n        }\n      })\n\n      const toPreloadTag = (chunk: OutputChunk): HtmlTagDescriptor => ({\n        tag: 'link',\n        attrs: {\n          rel: 'modulepreload',\n          href: toPublicPath(chunk.fileName, config)\n        }\n      })\n\n      const getCssTagsForChunk = (\n        chunk: OutputChunk,\n        seen: Set<string> = new Set()\n      ): HtmlTagDescriptor[] => {\n        const tags: HtmlTagDescriptor[] = []\n        if (!analyzedChunk.has(chunk)) {\n          analyzedChunk.set(chunk, 1)\n          chunk.imports.forEach((file) => {\n            const importee = bundle[file]\n            if (importee?.type === 'chunk') {\n              tags.push(...getCssTagsForChunk(importee, seen))\n            }\n          })\n        }\n\n        const cssFiles = chunkToEmittedCssFileMap.get(chunk)\n        if (cssFiles) {\n          cssFiles.forEach((file) => {\n            if (!seen.has(file)) {\n              seen.add(file)\n              tags.push({\n                tag: 'link',\n                attrs: {\n                  rel: 'stylesheet',\n                  href: toPublicPath(file, config)\n                }\n              })\n            }\n          })\n        }\n        return tags\n      }\n\n      for (const [id, html] of processedHtml) {\n        const isAsync = isAsyncScriptMap.get(config)!.get(id)!\n\n        // resolve asset url references\n        let result = html.replace(assetUrlRE, (_, fileHash, postfix = '') => {\n          return config.base + getAssetFilename(fileHash, config) + postfix\n        })\n\n        // find corresponding entry chunk\n        const chunk = Object.values(bundle).find(\n          (chunk) =>\n            chunk.type === 'chunk' &&\n            chunk.isEntry &&\n            chunk.facadeModuleId === id\n        ) as OutputChunk | undefined\n        let canInlineEntry = false\n\n        // inject chunk asset links\n        if (chunk) {\n          // an entry chunk can be inlined if\n          //  - it's an ES module (e.g. not generated by the legacy plugin)\n          //  - it contains no meaningful code other than import statments\n          if (options.format === 'es' && isEntirelyImport(chunk.code)) {\n            canInlineEntry = true\n          }\n\n          // when not inlined, inject <script> for entry and modulepreload its dependencies\n          // when inlined, discard entry chunk and inject <script> for everything in post-order\n          const imports = getImportedChunks(chunk)\n          const assetTags = canInlineEntry\n            ? imports.map((chunk) => toScriptTag(chunk, isAsync))\n            : [toScriptTag(chunk, isAsync), ...imports.map(toPreloadTag)]\n\n          assetTags.push(...getCssTagsForChunk(chunk))\n\n          result = injectToHead(result, assetTags)\n        }\n\n        // inject css link when cssCodeSplit is false\n        if (!config.build.cssCodeSplit) {\n          const cssChunk = Object.values(bundle).find(\n            (chunk) => chunk.type === 'asset' && chunk.name === 'style.css'\n          ) as OutputAsset | undefined\n          if (cssChunk) {\n            result = injectToHead(result, [\n              {\n                tag: 'link',\n                attrs: {\n                  rel: 'stylesheet',\n                  href: toPublicPath(cssChunk.fileName, config)\n                }\n              }\n            ])\n          }\n        }\n\n        const shortEmitName = path.posix.relative(config.root, id)\n        result = await applyHtmlTransforms(result, postHooks, {\n          path: '/' + shortEmitName,\n          filename: id,\n          bundle,\n          chunk\n        })\n\n        if (chunk && canInlineEntry) {\n          // all imports from entry have been inlined to html, prevent rollup from outputting it\n          delete bundle[chunk.fileName]\n        }\n\n        this.emitFile({\n          type: 'asset',\n          fileName: shortEmitName,\n          source: result\n        })\n      }\n    }\n  }\n}\n\nexport interface HtmlTagDescriptor {\n  tag: string\n  attrs?: Record<string, string | boolean | undefined>\n  children?: string | HtmlTagDescriptor[]\n  /**\n   * default: 'head-prepend'\n   */\n  injectTo?: 'head' | 'body' | 'head-prepend' | 'body-prepend'\n}\n\nexport type IndexHtmlTransformResult =\n  | string\n  | HtmlTagDescriptor[]\n  | {\n      html: string\n      tags: HtmlTagDescriptor[]\n    }\n\nexport interface IndexHtmlTransformContext {\n  /**\n   * public path when served\n   */\n  path: string\n  /**\n   * filename on disk\n   */\n  filename: string\n  server?: ViteDevServer\n  bundle?: OutputBundle\n  chunk?: OutputChunk\n  originalUrl?: string\n}\n\nexport type IndexHtmlTransformHook = (\n  html: string,\n  ctx: IndexHtmlTransformContext\n) => IndexHtmlTransformResult | void | Promise<IndexHtmlTransformResult | void>\n\nexport type IndexHtmlTransform =\n  | IndexHtmlTransformHook\n  | {\n      enforce?: 'pre' | 'post'\n      transform: IndexHtmlTransformHook\n    }\n\nexport function resolveHtmlTransforms(\n  plugins: readonly Plugin[]\n): [IndexHtmlTransformHook[], IndexHtmlTransformHook[]] {\n  const preHooks: IndexHtmlTransformHook[] = []\n  const postHooks: IndexHtmlTransformHook[] = []\n\n  for (const plugin of plugins) {\n    const hook = plugin.transformIndexHtml\n    if (hook) {\n      if (typeof hook === 'function') {\n        postHooks.push(hook)\n      } else if (hook.enforce === 'pre') {\n        preHooks.push(hook.transform)\n      } else {\n        postHooks.push(hook.transform)\n      }\n    }\n  }\n\n  return [preHooks, postHooks]\n}\n\nexport async function applyHtmlTransforms(\n  html: string,\n  hooks: IndexHtmlTransformHook[],\n  ctx: IndexHtmlTransformContext\n): Promise<string> {\n  const headTags: HtmlTagDescriptor[] = []\n  const headPrependTags: HtmlTagDescriptor[] = []\n  const bodyTags: HtmlTagDescriptor[] = []\n  const bodyPrependTags: HtmlTagDescriptor[] = []\n\n  for (const hook of hooks) {\n    const res = await hook(html, ctx)\n    if (!res) {\n      continue\n    }\n    if (typeof res === 'string') {\n      html = res\n    } else {\n      let tags: HtmlTagDescriptor[]\n      if (Array.isArray(res)) {\n        tags = res\n      } else {\n        html = res.html || html\n        tags = res.tags\n      }\n      for (const tag of tags) {\n        if (tag.injectTo === 'body') {\n          bodyTags.push(tag)\n        } else if (tag.injectTo === 'body-prepend') {\n          bodyPrependTags.push(tag)\n        } else if (tag.injectTo === 'head') {\n          headTags.push(tag)\n        } else {\n          headPrependTags.push(tag)\n        }\n      }\n    }\n  }\n\n  // inject tags\n  if (headPrependTags.length) {\n    html = injectToHead(html, headPrependTags, true)\n  }\n  if (headTags.length) {\n    html = injectToHead(html, headTags)\n  }\n  if (bodyPrependTags.length) {\n    html = injectToBody(html, bodyPrependTags, true)\n  }\n  if (bodyTags.length) {\n    html = injectToBody(html, bodyTags)\n  }\n\n  return html\n}\n\nconst importRE = /\\bimport\\s*(\"[^\"]*[^\\\\]\"|'[^']*[^\\\\]');*/g\nconst commentRE = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$/gm\nfunction isEntirelyImport(code: string) {\n  // only consider \"side-effect\" imports, which match <script type=module> semantics exactly\n  // the regexes will remove too little in some exotic cases, but false-negatives are alright\n  return !code.replace(importRE, '').replace(commentRE, '').trim().length\n}\n\nfunction toPublicPath(filename: string, config: ResolvedConfig) {\n  return isExternalUrl(filename) ? filename : config.base + filename\n}\n\nconst headInjectRE = /<\\/head>/\nconst headPrependInjectRE = [/<head>/, /<!doctype html>/i]\nfunction injectToHead(\n  html: string,\n  tags: HtmlTagDescriptor[],\n  prepend = false\n) {\n  const tagsHtml = serializeTags(tags)\n  if (prepend) {\n    // inject after head or doctype\n    for (const re of headPrependInjectRE) {\n      if (re.test(html)) {\n        return html.replace(re, `$&\\n${tagsHtml}`)\n      }\n    }\n  } else {\n    // inject before head close\n    if (headInjectRE.test(html)) {\n      return html.replace(headInjectRE, `${tagsHtml}\\n  $&`)\n    }\n  }\n  // if no <head> tag is present, just prepend\n  return tagsHtml + `\\n` + html\n}\n\nconst bodyInjectRE = /<\\/body>/\nconst bodyPrependInjectRE = /<body[^>]*>/\nfunction injectToBody(\n  html: string,\n  tags: HtmlTagDescriptor[],\n  prepend = false\n) {\n  if (prepend) {\n    // inject after body open\n    const tagsHtml = `\\n` + serializeTags(tags)\n    if (bodyPrependInjectRE.test(html)) {\n      return html.replace(bodyPrependInjectRE, `$&\\n${tagsHtml}`)\n    }\n    // if no body, prepend\n    return tagsHtml + `\\n` + html\n  } else {\n    // inject before body close\n    const tagsHtml = `\\n` + serializeTags(tags)\n    if (bodyInjectRE.test(html)) {\n      return html.replace(bodyInjectRE, `${tagsHtml}\\n$&`)\n    }\n    // if no body, append\n    return html + `\\n` + tagsHtml\n  }\n}\n\nconst unaryTags = new Set(['link', 'meta', 'base'])\n\nfunction serializeTag({ tag, attrs, children }: HtmlTagDescriptor): string {\n  if (unaryTags.has(tag)) {\n    return `<${tag}${serializeAttrs(attrs)}>`\n  } else {\n    return `<${tag}${serializeAttrs(attrs)}>${serializeTags(children)}</${tag}>`\n  }\n}\n\nfunction serializeTags(tags: HtmlTagDescriptor['children']): string {\n  if (typeof tags === 'string') {\n    return tags\n  } else if (tags) {\n    return `  ${tags.map(serializeTag).join('\\n    ')}`\n  }\n  return ''\n}\n\nfunction serializeAttrs(attrs: HtmlTagDescriptor['attrs']): string {\n  let res = ''\n  for (const key in attrs) {\n    if (typeof attrs[key] === 'boolean') {\n      res += attrs[key] ? ` ${key}` : ``\n    } else {\n      res += ` ${key}=${JSON.stringify(attrs[key])}`\n    }\n  }\n  return res\n}\n","import path from 'path'\nimport chalk from 'chalk'\nimport { Plugin } from '../plugin'\nimport {\n  transform,\n  Message,\n  Loader,\n  TransformOptions,\n  TransformResult\n} from 'esbuild'\nimport {\n  cleanUrl,\n  createDebugger,\n  ensureWatchedFile,\n  generateCodeFrame,\n  toUpperCaseDriveLetter\n} from '../utils'\nimport { RawSourceMap } from '@ampproject/remapping/dist/types/types'\nimport { SourceMap } from 'rollup'\nimport { ResolvedConfig, ViteDevServer } from '..'\nimport { createFilter } from '@rollup/pluginutils'\nimport { combineSourcemaps } from '../utils'\nimport { parse, TSConfckParseError, TSConfckParseResult } from 'tsconfck'\n\nconst debug = createDebugger('vite:esbuild')\n\nlet server: ViteDevServer\n\nexport interface ESBuildOptions extends TransformOptions {\n  include?: string | RegExp | string[] | RegExp[]\n  exclude?: string | RegExp | string[] | RegExp[]\n  jsxInject?: string\n}\n\nexport type ESBuildTransformResult = Omit<TransformResult, 'map'> & {\n  map: SourceMap\n}\n\ntype TSConfigJSON = {\n  extends?: string\n  compilerOptions?: {\n    target?: string\n    jsxFactory?: string\n    jsxFragmentFactory?: string\n    useDefineForClassFields?: boolean\n    importsNotUsedAsValues?: 'remove' | 'preserve' | 'error'\n  }\n  [key: string]: any\n}\ntype TSCompilerOptions = NonNullable<TSConfigJSON['compilerOptions']>\n\nexport async function transformWithEsbuild(\n  code: string,\n  filename: string,\n  options?: TransformOptions,\n  inMap?: object\n): Promise<ESBuildTransformResult> {\n  let loader = options?.loader\n\n  if (!loader) {\n    // if the id ends with a valid ext, use it (e.g. vue blocks)\n    // otherwise, cleanup the query before checking the ext\n    const ext = path\n      .extname(/\\.\\w+$/.test(filename) ? filename : cleanUrl(filename))\n      .slice(1)\n\n    if (ext === 'cjs' || ext === 'mjs') {\n      loader = 'js'\n    } else {\n      loader = ext as Loader\n    }\n  }\n\n  let tsconfigRaw = options?.tsconfigRaw\n\n  // if options provide tsconfigraw in string, it takes highest precedence\n  if (typeof tsconfigRaw !== 'string') {\n    // these fields would affect the compilation result\n    // https://esbuild.github.io/content-types/#tsconfig-json\n    const meaningfulFields: Array<keyof TSCompilerOptions> = [\n      'jsxFactory',\n      'jsxFragmentFactory',\n      'useDefineForClassFields',\n      'importsNotUsedAsValues'\n    ]\n    const compilerOptionsForFile: TSCompilerOptions = {}\n    if (loader === 'ts' || loader === 'tsx') {\n      const loadedTsconfig = await loadTsconfigJsonForFile(filename)\n      const loadedCompilerOptions = loadedTsconfig.compilerOptions ?? {}\n\n      for (const field of meaningfulFields) {\n        if (field in loadedCompilerOptions) {\n          // @ts-ignore TypeScript can't tell they are of the same type\n          compilerOptionsForFile[field] = loadedCompilerOptions[field]\n        }\n      }\n\n      // align with TypeScript 4.3\n      // https://github.com/microsoft/TypeScript/pull/42663\n      if (loadedCompilerOptions.target?.toLowerCase() === 'esnext') {\n        compilerOptionsForFile.useDefineForClassFields =\n          loadedCompilerOptions.useDefineForClassFields ?? true\n      }\n    }\n\n    tsconfigRaw = {\n      ...tsconfigRaw,\n      compilerOptions: {\n        ...compilerOptionsForFile,\n        ...tsconfigRaw?.compilerOptions\n      }\n    }\n  }\n\n  const resolvedOptions = {\n    sourcemap: true,\n    // ensure source file name contains full query\n    sourcefile: filename,\n    ...options,\n    loader,\n    tsconfigRaw\n  } as ESBuildOptions\n\n  delete resolvedOptions.include\n  delete resolvedOptions.exclude\n  delete resolvedOptions.jsxInject\n\n  try {\n    const result = await transform(code, resolvedOptions)\n    let map: SourceMap\n    if (inMap && resolvedOptions.sourcemap) {\n      const nextMap = JSON.parse(result.map)\n      nextMap.sourcesContent = []\n      map = combineSourcemaps(filename, [\n        nextMap as RawSourceMap,\n        inMap as RawSourceMap\n      ]) as SourceMap\n    } else {\n      map = resolvedOptions.sourcemap\n        ? JSON.parse(result.map)\n        : { mappings: '' }\n    }\n    if (Array.isArray(map.sources)) {\n      map.sources = map.sources.map((it) => toUpperCaseDriveLetter(it))\n    }\n    return {\n      ...result,\n      map\n    }\n  } catch (e) {\n    debug(`esbuild error with options used: `, resolvedOptions)\n    // patch error information\n    if (e.errors) {\n      e.frame = ''\n      e.errors.forEach((m: Message) => {\n        e.frame += `\\n` + prettifyMessage(m, code)\n      })\n      e.loc = e.errors[0].location\n    }\n    throw e\n  }\n}\n\nexport function esbuildPlugin(options: ESBuildOptions = {}): Plugin {\n  const filter = createFilter(\n    options.include || /\\.(tsx?|jsx)$/,\n    options.exclude || /\\.js$/\n  )\n\n  return {\n    name: 'vite:esbuild',\n    configureServer(_server) {\n      server = _server\n      server.watcher\n        .on('add', reloadOnTsconfigChange)\n        .on('change', reloadOnTsconfigChange)\n        .on('unlink', reloadOnTsconfigChange)\n    },\n    async transform(code, id) {\n      if (filter(id) || filter(cleanUrl(id))) {\n        const result = await transformWithEsbuild(code, id, options)\n        if (result.warnings.length) {\n          result.warnings.forEach((m) => {\n            this.warn(prettifyMessage(m, code))\n          })\n        }\n        if (options.jsxInject && /\\.(?:j|t)sx\\b/.test(id)) {\n          result.code = options.jsxInject + ';' + result.code\n        }\n        return {\n          code: result.code,\n          map: result.map\n        }\n      }\n    }\n  }\n}\n\nexport const buildEsbuildPlugin = (config: ResolvedConfig): Plugin => {\n  return {\n    name: 'vite:esbuild-transpile',\n    async renderChunk(code, chunk, opts) {\n      // @ts-ignore injected by @vitejs/plugin-legacy\n      if (opts.__vite_skip_esbuild__) {\n        return null\n      }\n\n      const target = config.build.target\n      const minify = config.build.minify === 'esbuild'\n      if ((!target || target === 'esnext') && !minify) {\n        return null\n      }\n      return transformWithEsbuild(code, chunk.fileName, {\n        target: target || undefined,\n        minify\n      })\n    }\n  }\n}\n\nfunction prettifyMessage(m: Message, code: string): string {\n  let res = chalk.yellow(m.text)\n  if (m.location) {\n    const lines = code.split(/\\r?\\n/g)\n    const line = Number(m.location.line)\n    const column = Number(m.location.column)\n    const offset =\n      lines\n        .slice(0, line - 1)\n        .map((l) => l.length)\n        .reduce((total, l) => total + l + 1, 0) + column\n    res += `\\n` + generateCodeFrame(code, offset, offset + 1)\n  }\n  return res + `\\n`\n}\n\nconst tsconfigCache = new Map<string, TSConfckParseResult>()\nasync function loadTsconfigJsonForFile(\n  filename: string\n): Promise<TSConfigJSON> {\n  try {\n    const result = await parse(filename, {\n      cache: tsconfigCache,\n      resolveWithEmptyIfConfigNotFound: true\n    })\n    // tsconfig could be out of root, make sure it is watched on dev\n    if (server && result.tsconfigFile !== 'no_tsconfig_file_found') {\n      ensureWatchedFile(server.watcher, result.tsconfigFile, server.config.root)\n    }\n    return result.tsconfig\n  } catch (e) {\n    if (e instanceof TSConfckParseError) {\n      // tsconfig could be out of root, make sure it is watched on dev\n      if (server && e.tsconfigFile) {\n        ensureWatchedFile(server.watcher, e.tsconfigFile, server.config.root)\n      }\n    }\n    throw e\n  }\n}\n\nfunction reloadOnTsconfigChange(changedFile: string) {\n  // any tsconfig.json that's added in the workspace could be closer to a code file than a previously cached one\n  // any json file in the tsconfig cache could have been used to compile ts\n  if (\n    path.basename(changedFile) === 'tsconfig.json' ||\n    (changedFile.endsWith('.json') && tsconfigCache.has(changedFile))\n  ) {\n    server.config.logger.info(\n      `changed tsconfig file detected: ${changedFile} - Clearing cache and forcing full-reload to ensure typescript is compiled with updated config values.`,\n      { clear: server.config.clearScreen, timestamp: true }\n    )\n    // clear tsconfig cache so that recompile works with up2date configs\n    tsconfigCache.clear()\n    // clear module graph to remove code compiled with outdated config\n    server.moduleGraph.invalidateAll()\n    // force full reload\n    server.ws.send({\n      type: 'full-reload',\n      path: '*'\n    })\n  }\n}\n","import { Plugin } from '../plugin'\nimport { Worker } from 'okie'\nimport { Terser } from 'types/terser'\n\nexport function terserPlugin(options: Terser.MinifyOptions): Plugin {\n  const worker = new Worker(\n    (basedir: string, code: string, options: Terser.MinifyOptions) => {\n      // when vite is linked, the worker thread won't share the same resolve\n      // root with vite itself, so we have to pass in the basedir and resolve\n      // terser first.\n      // eslint-disable-next-line node/no-restricted-require\n      const terserPath = require.resolve('terser', {\n        paths: [basedir]\n      })\n      return require(terserPath).minify(code, options) as Terser.MinifyOutput\n    }\n  )\n\n  return {\n    name: 'vite:terser',\n\n    async renderChunk(code, _chunk, outputOptions) {\n      const res = await worker.run(__dirname, code, {\n        safari10: true,\n        ...options,\n        sourceMap: !!outputOptions.sourcemap,\n        module: outputOptions.format.startsWith('es'),\n        toplevel: outputOptions.format === 'cjs'\n      })\n      return {\n        code: res.code!,\n        map: res.map as any\n      }\n    },\n\n    closeBundle() {\n      worker.stop()\n    }\n  }\n}\n","import path from 'path'\nimport { OutputChunk } from 'rollup'\nimport { ResolvedConfig } from '..'\nimport { Plugin } from '../plugin'\nimport { chunkToEmittedCssFileMap } from './css'\nimport { chunkToEmittedAssetsMap } from './asset'\nimport { normalizePath } from '../utils'\n\nexport type Manifest = Record<string, ManifestChunk>\n\nexport interface ManifestChunk {\n  src?: string\n  file: string\n  css?: string[]\n  assets?: string[]\n  isEntry?: boolean\n  isDynamicEntry?: boolean\n  imports?: string[]\n  dynamicImports?: string[]\n}\n\nexport function manifestPlugin(config: ResolvedConfig): Plugin {\n  const manifest: Manifest = {}\n\n  let outputCount: number\n\n  return {\n    name: 'vite:manifest',\n\n    buildStart() {\n      outputCount = 0\n    },\n\n    generateBundle({ format }, bundle) {\n      function getChunkName(chunk: OutputChunk) {\n        if (chunk.facadeModuleId) {\n          let name = normalizePath(\n            path.relative(config.root, chunk.facadeModuleId)\n          )\n          if (format === 'system' && !chunk.name.includes('-legacy')) {\n            const ext = path.extname(name)\n            name = name.slice(0, -ext.length) + `-legacy` + ext\n          }\n          return name\n        } else {\n          return `_` + path.basename(chunk.fileName)\n        }\n      }\n\n      function getInternalImports(imports: string[]): string[] {\n        const filteredImports: string[] = []\n\n        for (const file of imports) {\n          if (bundle[file] === undefined) {\n            continue\n          }\n\n          filteredImports.push(getChunkName(bundle[file] as OutputChunk))\n        }\n\n        return filteredImports\n      }\n\n      function createChunk(chunk: OutputChunk): ManifestChunk {\n        const manifestChunk: ManifestChunk = {\n          file: chunk.fileName\n        }\n\n        if (chunk.facadeModuleId) {\n          manifestChunk.src = getChunkName(chunk)\n        }\n        if (chunk.isEntry) {\n          manifestChunk.isEntry = true\n        }\n        if (chunk.isDynamicEntry) {\n          manifestChunk.isDynamicEntry = true\n        }\n\n        if (chunk.imports.length) {\n          const internalImports = getInternalImports(chunk.imports)\n          if (internalImports.length > 0) {\n            manifestChunk.imports = internalImports\n          }\n        }\n\n        if (chunk.dynamicImports.length) {\n          const internalImports = getInternalImports(chunk.dynamicImports)\n          if (internalImports.length > 0) {\n            manifestChunk.dynamicImports = internalImports\n          }\n        }\n\n        const cssFiles = chunkToEmittedCssFileMap.get(chunk)\n        if (cssFiles) {\n          manifestChunk.css = [...cssFiles]\n        }\n\n        const assets = chunkToEmittedAssetsMap.get(chunk)\n        if (assets) [(manifestChunk.assets = [...assets])]\n\n        return manifestChunk\n      }\n\n      for (const file in bundle) {\n        const chunk = bundle[file]\n        if (chunk.type === 'chunk') {\n          manifest[getChunkName(chunk)] = createChunk(chunk)\n        }\n      }\n\n      outputCount++\n      const output = config.build.rollupOptions?.output\n      const outputLength = Array.isArray(output) ? output.length : 1\n      if (outputCount >= outputLength) {\n        this.emitFile({\n          fileName: `manifest.json`,\n          type: 'asset',\n          source: JSON.stringify(manifest, null, 2)\n        })\n      }\n    }\n  }\n}\n","// This is based on @rollup/plugin-data-uri\n// MIT Licensed https://github.com/rollup/plugins/blob/master/LICENSE\n// ref https://github.com/vitejs/vite/issues/1428#issuecomment-757033808\nimport { Plugin } from '../plugin'\nimport { URL } from 'url'\n\nconst dataUriRE = /^([^/]+\\/[^;,]+)(;base64)?,([\\s\\S]*)$/\n\nconst dataUriPrefix = `/@data-uri/`\n\n/**\n * Build only, since importing from a data URI works natively.\n */\nexport function dataURIPlugin(): Plugin {\n  let resolved: {\n    [key: string]: string\n  }\n\n  return {\n    name: 'vite:data-uri',\n\n    buildStart() {\n      resolved = {}\n    },\n\n    resolveId(id) {\n      if (!dataUriRE.test(id)) {\n        return null\n      }\n\n      const uri = new URL(id)\n      if (uri.protocol !== 'data:') {\n        return null\n      }\n\n      const match = uri.pathname.match(dataUriRE)\n      if (!match) {\n        return null\n      }\n\n      const [, mime, format, data] = match\n      if (mime !== 'text/javascript') {\n        throw new Error(\n          `data URI with non-JavaScript mime type is not supported.`\n        )\n      }\n\n      // decode data\n      const base64 = format && /base64/i.test(format.substring(1))\n      const content = base64\n        ? Buffer.from(data, 'base64').toString('utf-8')\n        : data\n      resolved[id] = content\n      return dataUriPrefix + id\n    },\n\n    load(id) {\n      if (id.startsWith(dataUriPrefix)) {\n        id = id.slice(dataUriPrefix.length)\n        return resolved[id] || null\n      }\n    }\n  }\n}\n","import fs from 'fs'\nimport path from 'path'\nimport { Plugin } from '../plugin'\nimport chalk from 'chalk'\nimport {\n  FS_PREFIX,\n  SPECIAL_QUERY_RE,\n  DEFAULT_EXTENSIONS,\n  DEFAULT_MAIN_FIELDS,\n  OPTIMIZABLE_ENTRY_RE\n} from '../constants'\nimport {\n  isBuiltin,\n  bareImportRE,\n  createDebugger,\n  deepImportRE,\n  injectQuery,\n  isExternalUrl,\n  isObject,\n  normalizePath,\n  fsPathFromId,\n  ensureVolumeInPath,\n  resolveFrom,\n  isDataUrl,\n  cleanUrl,\n  slash,\n  nestedResolveFrom\n} from '../utils'\nimport { ViteDevServer, SSROptions } from '..'\nimport { createFilter } from '@rollup/pluginutils'\nimport { PartialResolvedId } from 'rollup'\nimport { resolve as _resolveExports } from 'resolve.exports'\n\n// special id for paths marked with browser: false\n// https://github.com/defunctzombie/package-browser-field-spec#ignore-a-module\nexport const browserExternalId = '__vite-browser-external'\n\nconst isDebug = process.env.DEBUG\nconst debug = createDebugger('vite:resolve-details', {\n  onlyWhenFocused: true\n})\n\nexport interface ResolveOptions {\n  mainFields?: string[]\n  conditions?: string[]\n  extensions?: string[]\n  dedupe?: string[]\n  preserveSymlinks?: boolean\n}\n\nexport interface InternalResolveOptions extends ResolveOptions {\n  root: string\n  isBuild: boolean\n  isProduction: boolean\n  ssrConfig?: SSROptions\n  /**\n   * src code mode also attempts the following:\n   * - resolving /xxx as URLs\n   * - resolving bare imports from optimized deps\n   */\n  asSrc?: boolean\n  tryIndex?: boolean\n  tryPrefix?: string\n  skipPackageJson?: boolean\n  preferRelative?: boolean\n  isRequire?: boolean\n}\n\nexport function resolvePlugin(baseOptions: InternalResolveOptions): Plugin {\n  const {\n    root,\n    isProduction,\n    asSrc,\n    ssrConfig,\n    preferRelative = false\n  } = baseOptions\n  const requireOptions: InternalResolveOptions = {\n    ...baseOptions,\n    isRequire: true\n  }\n  let server: ViteDevServer | undefined\n\n  const { target: ssrTarget, noExternal: ssrNoExternal } = ssrConfig ?? {}\n\n  return {\n    name: 'vite:resolve',\n\n    configureServer(_server) {\n      server = _server\n    },\n\n    resolveId(id, importer, resolveOpts, ssr) {\n      if (id.startsWith(browserExternalId)) {\n        return id\n      }\n\n      // fast path for commonjs proxy modules\n      if (/\\?commonjs/.test(id) || id === 'commonjsHelpers.js') {\n        return\n      }\n\n      const targetWeb = !ssr || ssrTarget === 'webworker'\n\n      // this is passed by @rollup/plugin-commonjs\n      const isRequire =\n        resolveOpts &&\n        resolveOpts.custom &&\n        resolveOpts.custom['node-resolve'] &&\n        resolveOpts.custom['node-resolve'].isRequire\n\n      const options = isRequire ? requireOptions : baseOptions\n\n      const preserveSymlinks = !!server?.config.resolve.preserveSymlinks\n\n      let res: string | PartialResolvedId | undefined\n\n      // explicit fs paths that starts with /@fs/*\n      if (asSrc && id.startsWith(FS_PREFIX)) {\n        const fsPath = fsPathFromId(id)\n        res = tryFsResolve(fsPath, options, preserveSymlinks)\n        isDebug && debug(`[@fs] ${chalk.cyan(id)} -> ${chalk.dim(res)}`)\n        // always return here even if res doesn't exist since /@fs/ is explicit\n        // if the file doesn't exist it should be a 404\n        return res || fsPath\n      }\n\n      // URL\n      // /foo -> /fs-root/foo\n      if (asSrc && id.startsWith('/')) {\n        const fsPath = path.resolve(root, id.slice(1))\n        if ((res = tryFsResolve(fsPath, options, preserveSymlinks))) {\n          isDebug && debug(`[url] ${chalk.cyan(id)} -> ${chalk.dim(res)}`)\n          return res\n        }\n      }\n\n      // relative\n      if (id.startsWith('.') || (preferRelative && /^\\w/.test(id))) {\n        const basedir = importer ? path.dirname(importer) : process.cwd()\n        const fsPath = path.resolve(basedir, id)\n        // handle browser field mapping for relative imports\n\n        const normalizedFsPath = normalizePath(fsPath)\n        const pathFromBasedir = normalizedFsPath.slice(basedir.length)\n        if (pathFromBasedir.startsWith('/node_modules/')) {\n          // normalize direct imports from node_modules to bare imports, so the\n          // hashing logic is shared and we avoid duplicated modules #2503\n          const bareImport = pathFromBasedir.slice('/node_modules/'.length)\n          if (\n            (res = tryNodeResolve(\n              bareImport,\n              importer,\n              options,\n              targetWeb,\n              server,\n              ssr\n            )) &&\n            res.id.startsWith(normalizedFsPath)\n          ) {\n            return res\n          }\n        }\n\n        if (\n          targetWeb &&\n          (res = tryResolveBrowserMapping(\n            fsPath,\n            importer,\n            options,\n            true,\n            preserveSymlinks\n          ))\n        ) {\n          return res\n        }\n\n        if ((res = tryFsResolve(fsPath, options, preserveSymlinks))) {\n          isDebug && debug(`[relative] ${chalk.cyan(id)} -> ${chalk.dim(res)}`)\n          const pkg = importer != null && idToPkgMap.get(importer)\n          if (pkg) {\n            idToPkgMap.set(res, pkg)\n            return {\n              id: res,\n              moduleSideEffects: pkg.hasSideEffects(res)\n            }\n          }\n          return res\n        }\n      }\n\n      // absolute fs paths\n      if (\n        path.isAbsolute(id) &&\n        (res = tryFsResolve(id, options, preserveSymlinks))\n      ) {\n        isDebug && debug(`[fs] ${chalk.cyan(id)} -> ${chalk.dim(res)}`)\n        return res\n      }\n\n      // external\n      if (isExternalUrl(id)) {\n        return {\n          id,\n          external: true\n        }\n      }\n\n      // data uri: pass through (this only happens during build and will be\n      // handled by dedicated plugin)\n      if (isDataUrl(id)) {\n        return null\n      }\n\n      // bare package imports, perform node resolve\n      if (bareImportRE.test(id)) {\n        if (\n          asSrc &&\n          server &&\n          !ssr &&\n          (res = tryOptimizedResolve(id, server, importer))\n        ) {\n          return res\n        }\n\n        if (\n          targetWeb &&\n          (res = tryResolveBrowserMapping(\n            id,\n            importer,\n            options,\n            false,\n            preserveSymlinks\n          ))\n        ) {\n          return res\n        }\n\n        if (\n          (res = tryNodeResolve(id, importer, options, targetWeb, server, ssr))\n        ) {\n          return res\n        }\n\n        // node built-ins.\n        // externalize if building for SSR, otherwise redirect to empty module\n        if (isBuiltin(id)) {\n          if (ssr) {\n            if (ssrNoExternal === true) {\n              let message = `Cannot bundle Node.js built-in \"${id}\"`\n              if (importer) {\n                message += ` imported from \"${path.relative(\n                  process.cwd(),\n                  importer\n                )}\"`\n              }\n              message += `. Consider disabling ssr.noExternal or remove the built-in dependency.`\n              this.error(message)\n            }\n\n            return {\n              id,\n              external: true\n            }\n          } else {\n            if (!asSrc) {\n              debug(\n                `externalized node built-in \"${id}\" to empty module. ` +\n                  `(imported by: ${chalk.white.dim(importer)})`\n              )\n            }\n            return isProduction\n              ? browserExternalId\n              : `${browserExternalId}:${id}`\n          }\n        }\n      }\n\n      isDebug && debug(`[fallthrough] ${chalk.dim(id)}`)\n    },\n\n    load(id) {\n      if (id.startsWith(browserExternalId)) {\n        return isProduction\n          ? `export default {}`\n          : `export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"${id.slice(\n      browserExternalId.length + 1\n    )}\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})`\n      }\n    }\n  }\n}\n\nfunction tryFsResolve(\n  fsPath: string,\n  options: InternalResolveOptions,\n  preserveSymlinks: boolean,\n  tryIndex = true,\n  targetWeb = true\n): string | undefined {\n  let file = fsPath\n  let postfix = ''\n\n  let postfixIndex = fsPath.indexOf('?')\n  if (postfixIndex < 0) {\n    postfixIndex = fsPath.indexOf('#')\n  }\n  if (postfixIndex > 0) {\n    file = fsPath.slice(0, postfixIndex)\n    postfix = fsPath.slice(postfixIndex)\n  }\n\n  let res: string | undefined\n  if (\n    (res = tryResolveFile(\n      file,\n      postfix,\n      options,\n      false,\n      targetWeb,\n      preserveSymlinks,\n      options.tryPrefix,\n      options.skipPackageJson\n    ))\n  ) {\n    return res\n  }\n\n  for (const ext of options.extensions || DEFAULT_EXTENSIONS) {\n    if (\n      (res = tryResolveFile(\n        file + ext,\n        postfix,\n        options,\n        false,\n        targetWeb,\n        preserveSymlinks,\n        options.tryPrefix,\n        options.skipPackageJson\n      ))\n    ) {\n      return res\n    }\n  }\n\n  if (\n    (res = tryResolveFile(\n      file,\n      postfix,\n      options,\n      tryIndex,\n      targetWeb,\n      preserveSymlinks,\n      options.tryPrefix,\n      options.skipPackageJson\n    ))\n  ) {\n    return res\n  }\n}\n\nfunction tryResolveFile(\n  file: string,\n  postfix: string,\n  options: InternalResolveOptions,\n  tryIndex: boolean,\n  targetWeb: boolean,\n  preserveSymlinks: boolean,\n  tryPrefix?: string,\n  skipPackageJson?: boolean\n): string | undefined {\n  let isReadable = false\n  try {\n    // #2051 if we don't have read permission on a directory, existsSync() still\n    // works and will result in massively slow subsequent checks (which are\n    // unnecessary in the first place)\n    fs.accessSync(file, fs.constants.R_OK)\n    isReadable = true\n  } catch (e) {}\n  if (isReadable) {\n    if (!fs.statSync(file).isDirectory()) {\n      return normalizePath(ensureVolumeInPath(file)) + postfix\n    } else if (tryIndex) {\n      if (!skipPackageJson) {\n        const pkgPath = file + '/package.json'\n        if (fs.existsSync(pkgPath)) {\n          // path points to a node package\n          const pkg = loadPackageData(pkgPath)\n          const resolved = resolvePackageEntry(\n            file,\n            pkg,\n            options,\n            targetWeb,\n            preserveSymlinks\n          )\n          return resolved ? getRealPath(resolved, preserveSymlinks) : resolved\n        }\n      }\n      const index = tryFsResolve(file + '/index', options, preserveSymlinks)\n      if (index) return index + postfix\n    }\n  }\n  if (tryPrefix) {\n    const prefixed = `${path.dirname(file)}/${tryPrefix}${path.basename(file)}`\n    return tryResolveFile(\n      prefixed,\n      postfix,\n      options,\n      tryIndex,\n      targetWeb,\n      preserveSymlinks\n    )\n  }\n}\n\nexport const idToPkgMap = new Map<string, PackageData>()\n\nexport function tryNodeResolve(\n  id: string,\n  importer: string | undefined,\n  options: InternalResolveOptions,\n  targetWeb: boolean,\n  server?: ViteDevServer,\n  ssr?: boolean\n): PartialResolvedId | undefined {\n  const { root, dedupe, isBuild } = options\n\n  // split id by last '>' for nested selected packages, for example:\n  // 'foo > bar > baz' => 'foo > bar' & 'baz'\n  // 'foo'             => ''          & 'foo'\n  const lastArrowIndex = id.lastIndexOf('>')\n  const nestedRoot = id.substring(0, lastArrowIndex).trim()\n  const nestedPath = id.substring(lastArrowIndex + 1).trim()\n\n  // check for deep import, e.g. \"my-lib/foo\"\n  const deepMatch = nestedPath.match(deepImportRE)\n\n  const pkgId = deepMatch ? deepMatch[1] || deepMatch[2] : nestedPath\n\n  let basedir: string\n  if (dedupe && dedupe.includes(pkgId)) {\n    basedir = root\n  } else if (\n    importer &&\n    path.isAbsolute(importer) &&\n    fs.existsSync(cleanUrl(importer))\n  ) {\n    basedir = path.dirname(importer)\n  } else {\n    basedir = root\n  }\n\n  const preserveSymlinks = !!server?.config.resolve.preserveSymlinks\n\n  // nested node module, step-by-step resolve to the basedir of the nestedPath\n  if (nestedRoot) {\n    basedir = nestedResolveFrom(nestedRoot, basedir, preserveSymlinks)\n  }\n\n  const pkg = resolvePackageData(pkgId, basedir, preserveSymlinks)\n\n  if (!pkg) {\n    return\n  }\n\n  let resolved = deepMatch\n    ? resolveDeepImport(\n        '.' + id.slice(pkgId.length),\n        pkg,\n        options,\n        targetWeb,\n        preserveSymlinks\n      )\n    : resolvePackageEntry(id, pkg, options, targetWeb, preserveSymlinks)\n  if (!resolved) {\n    return\n  }\n\n  resolved = getRealPath(resolved, preserveSymlinks)\n\n  // link id to pkg for browser field mapping check\n  idToPkgMap.set(resolved, pkg)\n  if (isBuild) {\n    // Resolve package side effects for build so that rollup can better\n    // perform tree-shaking\n    return {\n      id: resolved,\n      moduleSideEffects: pkg.hasSideEffects(resolved)\n    }\n  } else {\n    if (\n      !resolved.includes('node_modules') || // linked\n      !server || // build\n      server._isRunningOptimizer || // optimizing\n      !server._optimizeDepsMetadata\n    ) {\n      return { id: resolved }\n    }\n    // if we reach here, it's a valid dep import that hasn't been optimized.\n    const isJsType = OPTIMIZABLE_ENTRY_RE.test(resolved)\n    const exclude = server.config.optimizeDeps?.exclude\n    if (\n      !isJsType ||\n      importer?.includes('node_modules') ||\n      exclude?.includes(pkgId) ||\n      exclude?.includes(id) ||\n      SPECIAL_QUERY_RE.test(resolved)\n    ) {\n      // excluded from optimization\n      // Inject a version query to npm deps so that the browser\n      // can cache it without re-validation, but only do so for known js types.\n      // otherwise we may introduce duplicated modules for externalized files\n      // from pre-bundled deps.\n      const versionHash = server._optimizeDepsMetadata?.browserHash\n      if (versionHash && isJsType) {\n        resolved = injectQuery(resolved, `v=${versionHash}`)\n      }\n    } else {\n      // this is a missing import.\n      // queue optimize-deps re-run.\n      server._registerMissingImport?.(id, resolved, ssr)\n    }\n    return { id: resolved }\n  }\n}\n\nexport function tryOptimizedResolve(\n  id: string,\n  server: ViteDevServer,\n  importer?: string\n): string | undefined {\n  const cacheDir = server.config.cacheDir\n  const depData = server._optimizeDepsMetadata\n\n  if (!cacheDir || !depData) return\n\n  const getOptimizedUrl = (optimizedData: typeof depData.optimized[string]) => {\n    return (\n      optimizedData.file +\n      `?v=${depData.browserHash}${\n        optimizedData.needsInterop ? `&es-interop` : ``\n      }`\n    )\n  }\n\n  // check if id has been optimized\n  const isOptimized = depData.optimized[id]\n  if (isOptimized) {\n    return getOptimizedUrl(isOptimized)\n  }\n\n  if (!importer) return\n\n  // further check if id is imported by nested dependency\n  let resolvedSrc: string | undefined\n\n  for (const [pkgPath, optimizedData] of Object.entries(depData.optimized)) {\n    // check for scenarios, e.g.\n    //   pkgPath  => \"my-lib > foo\"\n    //   id       => \"foo\"\n    // this narrows the need to do a full resolve\n    if (!pkgPath.endsWith(id)) continue\n\n    // lazily initialize resolvedSrc\n    if (resolvedSrc == null) {\n      try {\n        // this may throw errors if unable to resolve, e.g. aliased id\n        resolvedSrc = normalizePath(resolveFrom(id, path.dirname(importer)))\n      } catch {\n        // this is best-effort only so swallow errors\n        break\n      }\n    }\n\n    // match by src to correctly identify if id belongs to nested dependency\n    if (optimizedData.src === resolvedSrc) {\n      return getOptimizedUrl(optimizedData)\n    }\n  }\n}\n\nexport interface PackageData {\n  dir: string\n  hasSideEffects: (id: string) => boolean\n  webResolvedImports: Record<string, string | undefined>\n  nodeResolvedImports: Record<string, string | undefined>\n  setResolvedCache: (key: string, entry: string, targetWeb: boolean) => void\n  getResolvedCache: (key: string, targetWeb: boolean) => string | undefined\n  data: {\n    [field: string]: any\n    version: string\n    main: string\n    module: string\n    browser: string | Record<string, string | false>\n    exports: string | Record<string, any> | string[]\n    dependencies: Record<string, string>\n  }\n}\n\nconst packageCache = new Map<string, PackageData>()\n\nexport function resolvePackageData(\n  id: string,\n  basedir: string,\n  preserveSymlinks = false\n): PackageData | undefined {\n  const cacheKey = id + basedir\n  if (packageCache.has(cacheKey)) {\n    return packageCache.get(cacheKey)\n  }\n  try {\n    const pkgPath = resolveFrom(`${id}/package.json`, basedir, preserveSymlinks)\n    return loadPackageData(pkgPath, cacheKey)\n  } catch (e) {\n    isDebug && debug(`${chalk.red(`[failed loading package.json]`)} ${id}`)\n  }\n}\n\nfunction loadPackageData(pkgPath: string, cacheKey = pkgPath) {\n  const data = JSON.parse(fs.readFileSync(pkgPath, 'utf-8'))\n  const pkgDir = path.dirname(pkgPath)\n  const { sideEffects } = data\n  let hasSideEffects: (id: string) => boolean\n  if (typeof sideEffects === 'boolean') {\n    hasSideEffects = () => sideEffects\n  } else if (Array.isArray(sideEffects)) {\n    hasSideEffects = createFilter(sideEffects, null, { resolve: pkgDir })\n  } else {\n    hasSideEffects = () => true\n  }\n\n  const pkg: PackageData = {\n    dir: pkgDir,\n    data,\n    hasSideEffects,\n    webResolvedImports: {},\n    nodeResolvedImports: {},\n    setResolvedCache(key: string, entry: string, targetWeb: boolean) {\n      if (targetWeb) {\n        pkg.webResolvedImports[key] = entry\n      } else {\n        pkg.nodeResolvedImports[key] = entry\n      }\n    },\n    getResolvedCache(key: string, targetWeb: boolean) {\n      if (targetWeb) {\n        return pkg.webResolvedImports[key]\n      } else {\n        return pkg.nodeResolvedImports[key]\n      }\n    }\n  }\n  packageCache.set(cacheKey, pkg)\n  return pkg\n}\n\nexport function resolvePackageEntry(\n  id: string,\n  { dir, data, setResolvedCache, getResolvedCache }: PackageData,\n  options: InternalResolveOptions,\n  targetWeb: boolean,\n  preserveSymlinks = false\n): string | undefined {\n  const cached = getResolvedCache('.', targetWeb)\n  if (cached) {\n    return cached\n  }\n  try {\n    let entryPoint: string | undefined | void\n\n    // resolve exports field with highest priority\n    // using https://github.com/lukeed/resolve.exports\n    if (data.exports) {\n      entryPoint = resolveExports(data, '.', options, targetWeb)\n    }\n\n    // if exports resolved to .mjs, still resolve other fields.\n    // This is because .mjs files can technically import .cjs files which would\n    // make them invalid for pure ESM environments - so if other module/browser\n    // fields are present, prioritize those instead.\n    if (targetWeb && (!entryPoint || entryPoint.endsWith('.mjs'))) {\n      // check browser field\n      // https://github.com/defunctzombie/package-browser-field-spec\n      const browserEntry =\n        typeof data.browser === 'string'\n          ? data.browser\n          : isObject(data.browser) && data.browser['.']\n      if (browserEntry) {\n        // check if the package also has a \"module\" field.\n        if (typeof data.module === 'string' && data.module !== browserEntry) {\n          // if both are present, we may have a problem: some package points both\n          // to ESM, with \"module\" targeting Node.js, while some packages points\n          // \"module\" to browser ESM and \"browser\" to UMD.\n          // the heuristics here is to actually read the browser entry when\n          // possible and check for hints of UMD. If it is UMD, prefer \"module\"\n          // instead; Otherwise, assume it's ESM and use it.\n          const resolvedBrowserEntry = tryFsResolve(\n            path.join(dir, browserEntry),\n            options,\n            preserveSymlinks\n          )\n          if (resolvedBrowserEntry) {\n            const content = fs.readFileSync(resolvedBrowserEntry, 'utf-8')\n            if (\n              (/typeof exports\\s*==/.test(content) &&\n                /typeof module\\s*==/.test(content)) ||\n              /module\\.exports\\s*=/.test(content)\n            ) {\n              // likely UMD or CJS(!!! e.g. firebase 7.x), prefer module\n              entryPoint = data.module\n            }\n          }\n        } else {\n          entryPoint = browserEntry\n        }\n      }\n    }\n\n    if (!entryPoint || entryPoint.endsWith('.mjs')) {\n      for (const field of options.mainFields || DEFAULT_MAIN_FIELDS) {\n        if (typeof data[field] === 'string') {\n          entryPoint = data[field]\n          break\n        }\n      }\n    }\n\n    entryPoint = entryPoint || data.main || 'index.js'\n\n    // make sure we don't get scripts when looking for sass\n    if (\n      options.mainFields?.[0] === 'sass' &&\n      !options.extensions?.includes(path.extname(entryPoint))\n    ) {\n      entryPoint = ''\n      options.skipPackageJson = true\n    }\n\n    // resolve object browser field in package.json\n    const { browser: browserField } = data\n    if (targetWeb && isObject(browserField)) {\n      entryPoint = mapWithBrowserField(entryPoint, browserField) || entryPoint\n    }\n\n    entryPoint = path.join(dir, entryPoint)\n    const resolvedEntryPoint = tryFsResolve(\n      entryPoint,\n      options,\n      preserveSymlinks\n    )\n\n    if (resolvedEntryPoint) {\n      isDebug &&\n        debug(\n          `[package entry] ${chalk.cyan(id)} -> ${chalk.dim(\n            resolvedEntryPoint\n          )}`\n        )\n      setResolvedCache('.', resolvedEntryPoint, targetWeb)\n      return resolvedEntryPoint\n    } else {\n      packageEntryFailure(id)\n    }\n  } catch (e) {\n    packageEntryFailure(id, e.message)\n  }\n}\n\nfunction packageEntryFailure(id: string, details?: string) {\n  throw new Error(\n    `Failed to resolve entry for package \"${id}\". ` +\n      `The package may have incorrect main/module/exports specified in its package.json` +\n      (details ? ': ' + details : '.')\n  )\n}\n\nfunction resolveExports(\n  pkg: PackageData['data'],\n  key: string,\n  options: InternalResolveOptions,\n  targetWeb: boolean\n) {\n  const conditions = [options.isProduction ? 'production' : 'development']\n  if (!options.isRequire) {\n    conditions.push('module')\n  }\n  if (options.conditions) {\n    conditions.push(...options.conditions)\n  }\n  return _resolveExports(pkg, key, {\n    browser: targetWeb,\n    require: options.isRequire,\n    conditions\n  })\n}\n\nfunction resolveDeepImport(\n  id: string,\n  {\n    webResolvedImports,\n    setResolvedCache,\n    getResolvedCache,\n    dir,\n    data\n  }: PackageData,\n  options: InternalResolveOptions,\n  targetWeb: boolean,\n  preserveSymlinks: boolean\n): string | undefined {\n  const cache = getResolvedCache(id, targetWeb)\n  if (cache) {\n    return cache\n  }\n\n  let relativeId: string | undefined | void = id\n  const { exports: exportsField, browser: browserField } = data\n\n  // map relative based on exports data\n  if (exportsField) {\n    if (isObject(exportsField) && !Array.isArray(exportsField)) {\n      relativeId = resolveExports(data, relativeId, options, targetWeb)\n    } else {\n      // not exposed\n      relativeId = undefined\n    }\n    if (!relativeId) {\n      throw new Error(\n        `Package subpath '${relativeId}' is not defined by \"exports\" in ` +\n          `${path.join(dir, 'package.json')}.`\n      )\n    }\n  } else if (targetWeb && isObject(browserField)) {\n    const mapped = mapWithBrowserField(relativeId, browserField)\n    if (mapped) {\n      relativeId = mapped\n    } else if (mapped === false) {\n      return (webResolvedImports[id] = browserExternalId)\n    }\n  }\n\n  if (relativeId) {\n    const resolved = tryFsResolve(\n      path.join(dir, relativeId),\n      options,\n      preserveSymlinks,\n      !exportsField, // try index only if no exports field\n      targetWeb\n    )\n    if (resolved) {\n      isDebug &&\n        debug(`[node/deep-import] ${chalk.cyan(id)} -> ${chalk.dim(resolved)}`)\n      setResolvedCache(id, resolved, targetWeb)\n      return resolved\n    }\n  }\n}\n\nfunction tryResolveBrowserMapping(\n  id: string,\n  importer: string | undefined,\n  options: InternalResolveOptions,\n  isFilePath: boolean,\n  preserveSymlinks: boolean\n) {\n  let res: string | undefined\n  const pkg = importer && idToPkgMap.get(importer)\n  if (pkg && isObject(pkg.data.browser)) {\n    const mapId = isFilePath ? './' + slash(path.relative(pkg.dir, id)) : id\n    const browserMappedPath = mapWithBrowserField(mapId, pkg.data.browser)\n    if (browserMappedPath) {\n      const fsPath = path.join(pkg.dir, browserMappedPath)\n      if ((res = tryFsResolve(fsPath, options, preserveSymlinks))) {\n        isDebug &&\n          debug(`[browser mapped] ${chalk.cyan(id)} -> ${chalk.dim(res)}`)\n        idToPkgMap.set(res, pkg)\n        return {\n          id: res,\n          moduleSideEffects: pkg.hasSideEffects(res)\n        }\n      }\n    } else if (browserMappedPath === false) {\n      return browserExternalId\n    }\n  }\n}\n\n/**\n * given a relative path in pkg dir,\n * return a relative path in pkg dir,\n * mapped with the \"map\" object\n *\n * - Returning `undefined` means there is no browser mapping for this id\n * - Returning `false` means this id is explicitly externalized for browser\n */\nfunction mapWithBrowserField(\n  relativePathInPkgDir: string,\n  map: Record<string, string | false>\n): string | false | undefined {\n  const normalizedPath = path.posix.normalize(relativePathInPkgDir)\n\n  for (const key in map) {\n    const normalizedKey = path.posix.normalize(key)\n    if (\n      normalizedPath === normalizedKey ||\n      equalWithoutSuffix(normalizedPath, normalizedKey, '.js') ||\n      equalWithoutSuffix(normalizedPath, normalizedKey, '/index.js')\n    ) {\n      return map[key]\n    }\n  }\n}\n\nfunction equalWithoutSuffix(path: string, key: string, suffix: string) {\n  return key.endsWith(suffix) && key.slice(0, -suffix.length) === path\n}\n\nfunction getRealPath(resolved: string, preserveSymlinks?: boolean): string {\n  if (!preserveSymlinks && browserExternalId !== resolved) {\n    return normalizePath(fs.realpathSync(resolved))\n  }\n  return resolved\n}\n","import fs from 'fs'\nimport path from 'path'\nimport { tryNodeResolve, InternalResolveOptions } from '../plugins/resolve'\nimport {\n  createDebugger,\n  isDefined,\n  lookupFile,\n  normalizePath,\n  resolveFrom,\n  unique\n} from '../utils'\nimport { ResolvedConfig } from '..'\nimport { createFilter } from '@rollup/pluginutils'\n\nconst debug = createDebugger('vite:ssr-external')\n\n/**\n * Heuristics for determining whether a dependency should be externalized for\n * server-side rendering.\n *\n * TODO right now externals are imported using require(), we probably need to\n * rework this when more libraries ship native ESM distributions for Node.\n */\nexport function resolveSSRExternal(\n  config: ResolvedConfig,\n  knownImports: string[],\n  ssrExternals: Set<string> = new Set(),\n  seen: Set<string> = new Set()\n): string[] {\n  if (config.ssr?.noExternal === true) {\n    return []\n  }\n\n  const { root } = config\n  const pkgContent = lookupFile(root, ['package.json'])\n  if (!pkgContent) {\n    return []\n  }\n  const pkg = JSON.parse(pkgContent)\n  const importedDeps = knownImports.map(getNpmPackageName).filter(isDefined)\n  const deps = unique([\n    ...importedDeps,\n    ...Object.keys(pkg.devDependencies || {}),\n    ...Object.keys(pkg.dependencies || {})\n  ])\n\n  const resolveOptions: InternalResolveOptions = {\n    root,\n    isProduction: false,\n    isBuild: true\n  }\n\n  const depsToTrace = new Set<string>()\n\n  for (const id of deps) {\n    if (seen.has(id)) {\n      continue\n    }\n    seen.add(id)\n\n    let entry: string | undefined\n    let requireEntry: string\n    try {\n      entry = tryNodeResolve(\n        id,\n        undefined,\n        resolveOptions,\n        true,\n        undefined,\n        true\n      )?.id\n      // normalizePath required for windows. tryNodeResolve uses normalizePath\n      // which returns with '/', require.resolve returns with '\\\\'\n      requireEntry = normalizePath(require.resolve(id, { paths: [root] }))\n    } catch (e) {\n      // resolve failed, assume include\n      debug(`Failed to resolve entries for package \"${id}\"\\n`, e)\n      continue\n    }\n    if (!entry) {\n      // no esm entry but has require entry (is this even possible?)\n      ssrExternals.add(id)\n      continue\n    }\n    if (!entry.includes('node_modules')) {\n      // entry is not a node dep, possibly linked - don't externalize\n      // instead, trace its dependencies.\n      depsToTrace.add(id)\n      continue\n    }\n    if (entry !== requireEntry) {\n      // has separate esm/require entry, assume require entry is cjs\n      ssrExternals.add(id)\n    } else {\n      // node resolve and esm resolve resolves to the same file.\n      if (!/\\.m?js$/.test(entry)) {\n        // entry is not js, cannot externalize\n        continue\n      }\n      // check if the entry is cjs\n      const content = fs.readFileSync(entry, 'utf-8')\n      if (/\\bmodule\\.exports\\b|\\bexports[.\\[]|\\brequire\\s*\\(/.test(content)) {\n        ssrExternals.add(id)\n      }\n    }\n  }\n\n  for (const id of depsToTrace) {\n    const depRoot = path.dirname(\n      resolveFrom(`${id}/package.json`, root, !!config.resolve.preserveSymlinks)\n    )\n    resolveSSRExternal(\n      {\n        ...config,\n        root: depRoot\n      },\n      knownImports,\n      ssrExternals,\n      seen\n    )\n  }\n\n  if (config.ssr?.external) {\n    config.ssr.external.forEach((id) => ssrExternals.add(id))\n  }\n  let externals = [...ssrExternals]\n  if (config.ssr?.noExternal) {\n    const filter = createFilter(undefined, config.ssr.noExternal, {\n      resolve: false\n    })\n    externals = externals.filter((id) => filter(id))\n  }\n  return externals.filter((id) => id !== 'vite')\n}\n\nexport function shouldExternalizeForSSR(\n  id: string,\n  externals: string[]\n): boolean {\n  const should = externals.some((e) => {\n    if (id === e) {\n      return true\n    }\n    // deep imports, check ext before externalizing - only externalize\n    // extension-less imports and explicit .js imports\n    if (id.startsWith(e + '/') && (!path.extname(id) || id.endsWith('.js'))) {\n      return true\n    }\n  })\n  return should\n}\n\nfunction getNpmPackageName(importPath: string): string | null {\n  const parts = importPath.split('/')\n  if (parts[0].startsWith('@')) {\n    if (!parts[1]) return null\n    return `${parts[0]}/${parts[1]}`\n  } else {\n    return parts[0]\n  }\n}\n","import { relative } from 'path'\nimport { normalizePath } from '@rollup/pluginutils'\nimport { ResolvedConfig } from '..'\nimport { Plugin } from '../plugin'\nimport { chunkToEmittedCssFileMap } from '../plugins/css'\nimport { chunkToEmittedAssetsMap } from '../plugins/asset'\n\nexport function ssrManifestPlugin(config: ResolvedConfig): Plugin {\n  // module id => preload assets mapping\n  const ssrManifest: Record<string, string[]> = {}\n  const base = config.base\n\n  return {\n    name: 'vite:ssr-manifest',\n    generateBundle(_options, bundle) {\n      for (const file in bundle) {\n        const chunk = bundle[file]\n        if (chunk.type === 'chunk') {\n          // links for certain entry chunks are already generated in static HTML\n          // in those cases we only need to record info for non-entry chunks\n          const cssFiles = chunk.isEntry\n            ? null\n            : chunkToEmittedCssFileMap.get(chunk)\n          const assetFiles = chunkToEmittedAssetsMap.get(chunk)\n          for (const id in chunk.modules) {\n            const normalizedId = normalizePath(relative(config.root, id))\n            const mappedChunks =\n              ssrManifest[normalizedId] || (ssrManifest[normalizedId] = [])\n            if (!chunk.isEntry) {\n              mappedChunks.push(base + chunk.fileName)\n            }\n            if (cssFiles) {\n              cssFiles.forEach((file) => {\n                mappedChunks.push(base + file)\n              })\n            }\n            if (assetFiles) {\n              assetFiles.forEach((file) => {\n                mappedChunks.push(base + file)\n              })\n            }\n          }\n        }\n      }\n\n      this.emitFile({\n        fileName: 'ssr-manifest.json',\n        type: 'asset',\n        source: JSON.stringify(ssrManifest, null, 2)\n      })\n    }\n  }\n}\n","import chalk from 'chalk'\nimport { RollupError } from 'rollup'\nimport { ViteDevServer } from '../..'\nimport { Connect } from 'types/connect'\nimport { pad } from '../../utils'\nimport strip from 'strip-ansi'\nimport { ErrorPayload } from 'types/hmrPayload'\n\nexport function prepareError(err: Error | RollupError): ErrorPayload['err'] {\n  // only copy the information we need and avoid serializing unnecessary\n  // properties, since some errors may attach full objects (e.g. PostCSS)\n  return {\n    message: strip(err.message),\n    stack: strip(cleanStack(err.stack || '')),\n    id: (err as RollupError).id,\n    frame: strip((err as RollupError).frame || ''),\n    plugin: (err as RollupError).plugin,\n    pluginCode: (err as RollupError).pluginCode,\n    loc: (err as RollupError).loc\n  }\n}\n\nexport function buildErrorMessage(\n  err: RollupError,\n  args: string[] = [],\n  includeStack = true\n): string {\n  if (err.plugin) args.push(`  Plugin: ${chalk.magenta(err.plugin)}`)\n  if (err.id) args.push(`  File: ${chalk.cyan(err.id)}`)\n  if (err.frame) args.push(chalk.yellow(pad(err.frame)))\n  if (includeStack && err.stack) args.push(pad(cleanStack(err.stack)))\n  return args.join('\\n')\n}\n\nfunction cleanStack(stack: string) {\n  return stack\n    .split(/\\n/g)\n    .filter((l) => /^\\s*at/.test(l))\n    .join('\\n')\n}\n\nexport function errorMiddleware(\n  server: ViteDevServer,\n  allowNext = false\n): Connect.ErrorHandleFunction {\n  // note the 4 args must be kept for connect to treat this as error middleware\n  // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n  return function viteErrorMiddleware(err: RollupError, _req, res, next) {\n    const msg = buildErrorMessage(err, [\n      chalk.red(`Internal server error: ${err.message}`)\n    ])\n\n    server.config.logger.error(msg, {\n      clear: true,\n      timestamp: true,\n      error: err\n    })\n\n    server.ws.send({\n      type: 'error',\n      err: prepareError(err)\n    })\n\n    if (allowNext) {\n      next()\n    } else {\n      if (err instanceof AccessRestrictedError) {\n        res.statusCode = 403\n        res.write(renderErrorHTML(err.message))\n        res.end()\n      }\n      res.statusCode = 500\n      res.end()\n    }\n  }\n}\n\nexport class AccessRestrictedError extends Error {\n  constructor(msg: string) {\n    super(msg)\n  }\n}\n\nexport function renderErrorHTML(msg: string): string {\n  // to have syntax highlighting and autocompletion in IDE\n  const html = String.raw\n  return html`\n    <body>\n      <h1>403 Restricted</h1>\n      <p>${msg.replace(/\\n/g, '<br/>')}</p>\n      <style>\n        body {\n          padding: 1em 2em;\n        }\n      </style>\n    </body>\n  `\n}\n","/**\n * This file is refactored into TypeScript based on\n * https://github.com/preactjs/wmr/blob/main/packages/wmr/src/lib/rollup-plugin-container.js\n */\n\n/**\nhttps://github.com/preactjs/wmr/blob/master/LICENSE\n\nMIT License\n\nCopyright (c) 2020 The Preact Authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\nimport fs from 'fs'\nimport { resolve, join } from 'path'\nimport { Plugin } from '../plugin'\nimport {\n  InputOptions,\n  MinimalPluginContext,\n  OutputOptions,\n  ModuleInfo,\n  NormalizedInputOptions,\n  PartialResolvedId,\n  ResolvedId,\n  PluginContext as RollupPluginContext,\n  LoadResult,\n  SourceDescription,\n  EmittedFile,\n  SourceMap,\n  RollupError,\n  TransformResult\n} from 'rollup'\nimport * as acorn from 'acorn'\nimport acornClassFields from 'acorn-class-fields'\nimport acornStaticClassFeatures from 'acorn-static-class-features'\nimport { RawSourceMap } from '@ampproject/remapping/dist/types/types'\nimport { combineSourcemaps } from '../utils'\nimport MagicString from 'magic-string'\nimport { FSWatcher } from 'chokidar'\nimport {\n  createDebugger,\n  ensureWatchedFile,\n  generateCodeFrame,\n  isObject,\n  isExternalUrl,\n  normalizePath,\n  numberToPos,\n  prettifyUrl,\n  timeFrom\n} from '../utils'\nimport { FS_PREFIX } from '../constants'\nimport chalk from 'chalk'\nimport { ResolvedConfig } from '../config'\nimport { buildErrorMessage } from './middlewares/error'\n\nexport interface PluginContainerOptions {\n  cwd?: string\n  output?: OutputOptions\n  modules?: Map<string, { info: ModuleInfo }>\n  writeFile?: (name: string, source: string | Uint8Array) => void\n}\n\nexport interface PluginContainer {\n  options: InputOptions\n  buildStart(options: InputOptions): Promise<void>\n  resolveId(\n    id: string,\n    importer?: string,\n    skip?: Set<Plugin>,\n    ssr?: boolean\n  ): Promise<PartialResolvedId | null>\n  transform(\n    code: string,\n    id: string,\n    inMap?: SourceDescription['map'],\n    ssr?: boolean\n  ): Promise<SourceDescription | null>\n  load(id: string, ssr?: boolean): Promise<LoadResult | null>\n  close(): Promise<void>\n}\n\ntype PluginContext = Omit<\n  RollupPluginContext,\n  // not documented\n  | 'cache'\n  // deprecated\n  | 'emitAsset'\n  | 'emitChunk'\n  | 'getAssetFileName'\n  | 'getChunkFileName'\n  | 'isExternal'\n  | 'moduleIds'\n  | 'resolveId'\n>\n\nexport let parser = acorn.Parser.extend(\n  acornClassFields,\n  acornStaticClassFeatures\n)\n\nexport async function createPluginContainer(\n  { plugins, logger, root, build: { rollupOptions } }: ResolvedConfig,\n  watcher?: FSWatcher\n): Promise<PluginContainer> {\n  const isDebug = process.env.DEBUG\n\n  const seenResolves: Record<string, true | undefined> = {}\n  const debugResolve = createDebugger('vite:resolve')\n  const debugPluginResolve = createDebugger('vite:plugin-resolve', {\n    onlyWhenFocused: 'vite:plugin'\n  })\n  const debugPluginTransform = createDebugger('vite:plugin-transform', {\n    onlyWhenFocused: 'vite:plugin'\n  })\n\n  // ---------------------------------------------------------------------------\n\n  const MODULES = new Map()\n  const watchFiles = new Set<string>()\n\n  // get rollup version\n  const rollupPkgPath = resolve(require.resolve('rollup'), '../../package.json')\n  const minimalContext: MinimalPluginContext = {\n    meta: {\n      rollupVersion: JSON.parse(fs.readFileSync(rollupPkgPath, 'utf-8'))\n        .version,\n      watchMode: true\n    }\n  }\n\n  function warnIncompatibleMethod(method: string, plugin: string) {\n    logger.warn(\n      chalk.cyan(`[plugin:${plugin}] `) +\n        chalk.yellow(\n          `context method ${chalk.bold(\n            `${method}()`\n          )} is not supported in serve mode. This plugin is likely not vite-compatible.`\n        )\n    )\n  }\n\n  // we should create a new context for each async hook pipeline so that the\n  // active plugin in that pipeline can be tracked in a concurrency-safe manner.\n  // using a class to make creating new contexts more efficient\n  class Context implements PluginContext {\n    meta = minimalContext.meta\n    ssr = false\n    _activePlugin: Plugin | null\n    _activeId: string | null = null\n    _activeCode: string | null = null\n    _resolveSkips?: Set<Plugin>\n    _addedImports: Set<string> | null = null\n\n    constructor(initialPlugin?: Plugin) {\n      this._activePlugin = initialPlugin || null\n    }\n\n    parse(code: string, opts: any = {}) {\n      return parser.parse(code, {\n        sourceType: 'module',\n        ecmaVersion: 2020,\n        locations: true,\n        ...opts\n      })\n    }\n\n    async resolve(\n      id: string,\n      importer?: string,\n      options?: { skipSelf?: boolean }\n    ) {\n      let skips: Set<Plugin> | undefined\n      if (options?.skipSelf && this._activePlugin) {\n        skips = new Set(this._resolveSkips)\n        skips.add(this._activePlugin)\n      }\n      let out = await container.resolveId(id, importer, skips, this.ssr)\n      if (typeof out === 'string') out = { id: out }\n      return out as ResolvedId | null\n    }\n\n    getModuleInfo(id: string) {\n      let mod = MODULES.get(id)\n      if (mod) return mod.info\n      mod = {\n        /** @type {import('rollup').ModuleInfo} */\n        // @ts-ignore-next\n        info: {}\n      }\n      MODULES.set(id, mod)\n      return mod.info\n    }\n\n    getModuleIds() {\n      return MODULES.keys()\n    }\n\n    addWatchFile(id: string) {\n      watchFiles.add(id)\n      ;(this._addedImports || (this._addedImports = new Set())).add(id)\n      if (watcher) ensureWatchedFile(watcher, id, root)\n    }\n\n    getWatchFiles() {\n      return [...watchFiles]\n    }\n\n    emitFile(assetOrFile: EmittedFile) {\n      warnIncompatibleMethod(`emitFile`, this._activePlugin!.name)\n      return ''\n    }\n\n    setAssetSource() {\n      warnIncompatibleMethod(`setAssetSource`, this._activePlugin!.name)\n    }\n\n    getFileName() {\n      warnIncompatibleMethod(`getFileName`, this._activePlugin!.name)\n      return ''\n    }\n\n    warn(\n      e: string | RollupError,\n      position?: number | { column: number; line: number }\n    ) {\n      const err = formatError(e, position, this)\n      const msg = buildErrorMessage(\n        err,\n        [chalk.yellow(`warning: ${err.message}`)],\n        false\n      )\n      logger.warn(msg, {\n        clear: true,\n        timestamp: true\n      })\n    }\n\n    error(\n      e: string | RollupError,\n      position?: number | { column: number; line: number }\n    ): never {\n      // error thrown here is caught by the transform middleware and passed on\n      // the the error middleware.\n      throw formatError(e, position, this)\n    }\n  }\n\n  function formatError(\n    e: string | RollupError,\n    position: number | { column: number; line: number } | undefined,\n    ctx: Context\n  ) {\n    const err = (typeof e === 'string' ? new Error(e) : e) as RollupError\n    if (ctx._activePlugin) err.plugin = ctx._activePlugin.name\n    if (ctx._activeId && !err.id) err.id = ctx._activeId\n    if (ctx._activeCode) {\n      err.pluginCode = ctx._activeCode\n      const pos =\n        position != null\n          ? position\n          : err.pos != null\n          ? err.pos\n          : // some rollup plugins, e.g. json, sets position instead of pos\n            (err as any).position\n      if (pos != null) {\n        let errLocation\n        try {\n          errLocation = numberToPos(ctx._activeCode, pos)\n        } catch (err2) {\n          logger.error(\n            chalk.red(\n              `Error in error handler:\\n${err2.stack || err2.message}\\n`\n            ),\n            // print extra newline to separate the two errors\n            { error: err2 }\n          )\n          throw err\n        }\n        err.loc = err.loc || {\n          file: err.id,\n          ...errLocation\n        }\n        err.frame = err.frame || generateCodeFrame(ctx._activeCode, pos)\n      } else if (err.loc) {\n        // css preprocessors may report errors in an included file\n        if (!err.frame) {\n          let code = ctx._activeCode\n          if (err.loc.file) {\n            err.id = normalizePath(err.loc.file)\n            try {\n              code = fs.readFileSync(err.loc.file, 'utf-8')\n            } catch {}\n          }\n          err.frame = generateCodeFrame(code, err.loc)\n        }\n      } else if ((err as any).line && (err as any).column) {\n        err.loc = {\n          file: err.id,\n          line: (err as any).line,\n          column: (err as any).column\n        }\n        err.frame = err.frame || generateCodeFrame(ctx._activeCode, err.loc)\n      }\n    }\n    return err\n  }\n\n  class TransformContext extends Context {\n    filename: string\n    originalCode: string\n    originalSourcemap: SourceMap | null = null\n    sourcemapChain: NonNullable<SourceDescription['map']>[] = []\n    combinedMap: SourceMap | null = null\n\n    constructor(filename: string, code: string, inMap?: SourceMap | string) {\n      super()\n      this.filename = filename\n      this.originalCode = code\n      if (inMap) {\n        this.sourcemapChain.push(inMap)\n      }\n    }\n\n    _getCombinedSourcemap(createIfNull = false) {\n      let combinedMap = this.combinedMap\n      for (let m of this.sourcemapChain) {\n        if (typeof m === 'string') m = JSON.parse(m)\n        if (!('version' in (m as SourceMap))) {\n          // empty, nullified source map\n          combinedMap = this.combinedMap = null\n          this.sourcemapChain.length = 0\n          break\n        }\n        if (!combinedMap) {\n          combinedMap = m as SourceMap\n        } else {\n          combinedMap = combineSourcemaps(this.filename, [\n            {\n              ...(m as RawSourceMap),\n              sourcesContent: combinedMap.sourcesContent\n            },\n            combinedMap as RawSourceMap\n          ]) as SourceMap\n        }\n      }\n      if (!combinedMap) {\n        return createIfNull\n          ? new MagicString(this.originalCode).generateMap({\n              includeContent: true,\n              hires: true,\n              source: this.filename\n            })\n          : null\n      }\n      if (combinedMap !== this.combinedMap) {\n        this.combinedMap = combinedMap\n        this.sourcemapChain.length = 0\n      }\n      return this.combinedMap\n    }\n\n    getCombinedSourcemap() {\n      return this._getCombinedSourcemap(true) as SourceMap\n    }\n  }\n\n  let closed = false\n\n  const container: PluginContainer = {\n    options: await (async () => {\n      let options = rollupOptions\n      for (const plugin of plugins) {\n        if (!plugin.options) continue\n        options =\n          (await plugin.options.call(minimalContext, options)) || options\n      }\n      if (options.acornInjectPlugins) {\n        parser = acorn.Parser.extend(\n          ...[acornClassFields, acornStaticClassFeatures].concat(\n            options.acornInjectPlugins\n          )\n        )\n      }\n      return {\n        acorn,\n        acornInjectPlugins: [],\n        ...options\n      }\n    })(),\n\n    async buildStart() {\n      await Promise.all(\n        plugins.map((plugin) => {\n          if (plugin.buildStart) {\n            return plugin.buildStart.call(\n              new Context(plugin) as any,\n              container.options as NormalizedInputOptions\n            )\n          }\n        })\n      )\n    },\n\n    async resolveId(rawId, importer = join(root, 'index.html'), skips, ssr) {\n      const ctx = new Context()\n      ctx.ssr = !!ssr\n      ctx._resolveSkips = skips\n      const resolveStart = isDebug ? Date.now() : 0\n\n      let id: string | null = null\n      const partial: Partial<PartialResolvedId> = {}\n      for (const plugin of plugins) {\n        if (!plugin.resolveId) continue\n        if (skips?.has(plugin)) continue\n\n        ctx._activePlugin = plugin\n\n        const pluginResolveStart = isDebug ? Date.now() : 0\n        const result = await plugin.resolveId.call(\n          ctx as any,\n          rawId,\n          importer,\n          {},\n          ssr\n        )\n        if (!result) continue\n\n        if (typeof result === 'string') {\n          id = result\n        } else {\n          id = result.id\n          Object.assign(partial, result)\n        }\n\n        isDebug &&\n          debugPluginResolve(\n            timeFrom(pluginResolveStart),\n            plugin.name,\n            prettifyUrl(id, root)\n          )\n\n        // resolveId() is hookFirst - first non-null result is returned.\n        break\n      }\n\n      if (isDebug && rawId !== id && !rawId.startsWith(FS_PREFIX)) {\n        const key = rawId + id\n        // avoid spamming\n        if (!seenResolves[key]) {\n          seenResolves[key] = true\n          debugResolve(\n            `${timeFrom(resolveStart)} ${chalk.cyan(rawId)} -> ${chalk.dim(id)}`\n          )\n        }\n      }\n\n      if (id) {\n        partial.id = isExternalUrl(id) ? id : normalizePath(id)\n        return partial as PartialResolvedId\n      } else {\n        return null\n      }\n    },\n\n    async load(id, ssr) {\n      const ctx = new Context()\n      ctx.ssr = !!ssr\n      for (const plugin of plugins) {\n        if (!plugin.load) continue\n        ctx._activePlugin = plugin\n        const result = await plugin.load.call(ctx as any, id, ssr)\n        if (result != null) {\n          return result\n        }\n      }\n      return null\n    },\n\n    async transform(code, id, inMap, ssr) {\n      const ctx = new TransformContext(id, code, inMap as SourceMap)\n      ctx.ssr = !!ssr\n      for (const plugin of plugins) {\n        if (!plugin.transform) continue\n        ctx._activePlugin = plugin\n        ctx._activeId = id\n        ctx._activeCode = code\n        const start = isDebug ? Date.now() : 0\n        let result: TransformResult | string | undefined\n        try {\n          result = await plugin.transform.call(ctx as any, code, id, ssr)\n        } catch (e) {\n          ctx.error(e)\n        }\n        if (!result) continue\n        isDebug &&\n          debugPluginTransform(\n            timeFrom(start),\n            plugin.name,\n            prettifyUrl(id, root)\n          )\n        if (isObject(result)) {\n          code = result.code || ''\n          if (result.map) ctx.sourcemapChain.push(result.map)\n        } else {\n          code = result\n        }\n      }\n      return {\n        code,\n        map: ctx._getCombinedSourcemap()\n      }\n    },\n\n    async close() {\n      if (closed) return\n      const ctx = new Context()\n      await Promise.all(\n        plugins.map((p) => p.buildEnd && p.buildEnd.call(ctx as any))\n      )\n      await Promise.all(\n        plugins.map((p) => p.closeBundle && p.closeBundle.call(ctx as any))\n      )\n      closed = true\n    }\n  }\n\n  return container\n}\n","import fs from 'fs'\nimport path from 'path'\nimport glob from 'fast-glob'\nimport { ResolvedConfig } from '..'\nimport { Loader, Plugin, build, transform } from 'esbuild'\nimport {\n  KNOWN_ASSET_TYPES,\n  JS_TYPES_RE,\n  SPECIAL_QUERY_RE,\n  OPTIMIZABLE_ENTRY_RE\n} from '../constants'\nimport {\n  createDebugger,\n  normalizePath,\n  isObject,\n  cleanUrl,\n  externalRE,\n  dataUrlRE,\n  multilineCommentsRE,\n  singlelineCommentsRE\n} from '../utils'\nimport {\n  createPluginContainer,\n  PluginContainer\n} from '../server/pluginContainer'\nimport { init, parse } from 'es-module-lexer'\nimport MagicString from 'magic-string'\nimport { transformImportGlob } from '../importGlob'\n\nconst debug = createDebugger('vite:deps')\n\nconst htmlTypesRE = /\\.(html|vue|svelte)$/\n\n// A simple regex to detect import sources. This is only used on\n// <script lang=\"ts\"> blocks in vue (setup only) or svelte files, since\n// seemingly unused imports are dropped by esbuild when transpiling TS which\n// prevents it from crawling further.\n// We can't use es-module-lexer because it can't handle TS, and don't want to\n// use Acorn because it's slow. Luckily this doesn't have to be bullet proof\n// since even missed imports can be caught at runtime, and false positives will\n// simply be ignored.\nexport const importsRE =\n  /(?<!\\/\\/.*)(?<=^|;|\\*\\/)\\s*import(?!\\s+type)(?:[\\w*{}\\n\\r\\t, ]+from\\s*)?\\s*(\"[^\"]+\"|'[^']+')\\s*(?=$|;|\\/\\/|\\/\\*)/gm\n\nexport async function scanImports(config: ResolvedConfig): Promise<{\n  deps: Record<string, string>\n  missing: Record<string, string>\n}> {\n  const s = Date.now()\n\n  let entries: string[] = []\n\n  const explicitEntryPatterns = config.optimizeDeps?.entries\n  const buildInput = config.build.rollupOptions?.input\n\n  if (explicitEntryPatterns) {\n    entries = await globEntries(explicitEntryPatterns, config)\n  } else if (buildInput) {\n    const resolvePath = (p: string) => path.resolve(config.root, p)\n    if (typeof buildInput === 'string') {\n      entries = [resolvePath(buildInput)]\n    } else if (Array.isArray(buildInput)) {\n      entries = buildInput.map(resolvePath)\n    } else if (isObject(buildInput)) {\n      entries = Object.values(buildInput).map(resolvePath)\n    } else {\n      throw new Error('invalid rollupOptions.input value.')\n    }\n  } else {\n    entries = await globEntries('**/*.html', config)\n  }\n\n  // Non-supported entry file types and virtual files should not be scanned for\n  // dependencies.\n  entries = entries.filter(\n    (entry) =>\n      (JS_TYPES_RE.test(entry) || htmlTypesRE.test(entry)) &&\n      fs.existsSync(entry)\n  )\n\n  if (!entries.length) {\n    config.logger.warn(\n      'Could not determine entry point from rollupOptions or html files. Skipping dependency pre-bundling.'\n    )\n    return { deps: {}, missing: {} }\n  } else {\n    debug(`Crawling dependencies using entries:\\n  ${entries.join('\\n  ')}`)\n  }\n\n  const deps: Record<string, string> = {}\n  const missing: Record<string, string> = {}\n  const container = await createPluginContainer(config)\n  const plugin = esbuildScanPlugin(config, container, deps, missing, entries)\n\n  const { plugins = [], ...esbuildOptions } =\n    config.optimizeDeps?.esbuildOptions ?? {}\n\n  await Promise.all(\n    entries.map((entry) =>\n      build({\n        absWorkingDir: process.cwd(),\n        write: false,\n        entryPoints: [entry],\n        bundle: true,\n        format: 'esm',\n        logLevel: 'error',\n        plugins: [...plugins, plugin],\n        ...esbuildOptions\n      })\n    )\n  )\n\n  debug(`Scan completed in ${Date.now() - s}ms:`, deps)\n\n  return {\n    deps,\n    missing\n  }\n}\n\nfunction globEntries(pattern: string | string[], config: ResolvedConfig) {\n  return glob(pattern, {\n    cwd: config.root,\n    ignore: [\n      '**/node_modules/**',\n      `**/${config.build.outDir}/**`,\n      `**/__tests__/**`\n    ],\n    absolute: true\n  })\n}\n\nconst scriptModuleRE =\n  /(<script\\b[^>]*type\\s*=\\s*(?:\"module\"|'module')[^>]*>)(.*?)<\\/script>/gims\nexport const scriptRE = /(<script\\b(?:\\s[^>]*>|>))(.*?)<\\/script>/gims\nexport const commentRE = /<!--(.|[\\r\\n])*?-->/\nconst srcRE = /\\bsrc\\s*=\\s*(?:\"([^\"]+)\"|'([^']+)'|([^\\s'\">]+))/im\nconst typeRE = /\\btype\\s*=\\s*(?:\"([^\"]+)\"|'([^']+)'|([^\\s'\">]+))/im\nconst langRE = /\\blang\\s*=\\s*(?:\"([^\"]+)\"|'([^']+)'|([^\\s'\">]+))/im\n\nfunction esbuildScanPlugin(\n  config: ResolvedConfig,\n  container: PluginContainer,\n  depImports: Record<string, string>,\n  missing: Record<string, string>,\n  entries: string[]\n): Plugin {\n  const seen = new Map<string, string | undefined>()\n\n  const resolve = async (id: string, importer?: string) => {\n    const key = id + (importer && path.dirname(importer))\n    if (seen.has(key)) {\n      return seen.get(key)\n    }\n    const resolved = await container.resolveId(\n      id,\n      importer && normalizePath(importer)\n    )\n    const res = resolved?.id\n    seen.set(key, res)\n    return res\n  }\n\n  const include = config.optimizeDeps?.include\n  const exclude = [\n    ...(config.optimizeDeps?.exclude || []),\n    '@vite/client',\n    '@vite/env'\n  ]\n\n  const externalUnlessEntry = ({ path }: { path: string }) => ({\n    path,\n    external: !entries.includes(path)\n  })\n\n  return {\n    name: 'vite:dep-scan',\n    setup(build) {\n      // external urls\n      build.onResolve({ filter: externalRE }, ({ path }) => ({\n        path,\n        external: true\n      }))\n\n      // data urls\n      build.onResolve({ filter: dataUrlRE }, ({ path }) => ({\n        path,\n        external: true\n      }))\n\n      // html types: extract script contents -----------------------------------\n      build.onResolve({ filter: htmlTypesRE }, async ({ path, importer }) => {\n        return {\n          path: await resolve(path, importer),\n          namespace: 'html'\n        }\n      })\n\n      // extract scripts inside HTML-like files and treat it as a js module\n      build.onLoad(\n        { filter: htmlTypesRE, namespace: 'html' },\n        async ({ path }) => {\n          let raw = fs.readFileSync(path, 'utf-8')\n          // Avoid matching the content of the comment\n          raw = raw.replace(commentRE, '<!---->')\n          const isHtml = path.endsWith('.html')\n          const regex = isHtml ? scriptModuleRE : scriptRE\n          regex.lastIndex = 0\n          let js = ''\n          let loader: Loader = 'js'\n          let match: RegExpExecArray | null\n          while ((match = regex.exec(raw))) {\n            const [, openTag, content] = match\n            const srcMatch = openTag.match(srcRE)\n            const typeMatch = openTag.match(typeRE)\n            const langMatch = openTag.match(langRE)\n            const type =\n              typeMatch && (typeMatch[1] || typeMatch[2] || typeMatch[3])\n            const lang =\n              langMatch && (langMatch[1] || langMatch[2] || langMatch[3])\n            // skip type=\"application/ld+json\" and other non-JS types\n            if (\n              type &&\n              !(\n                type.includes('javascript') ||\n                type.includes('ecmascript') ||\n                type === 'module'\n              )\n            ) {\n              continue\n            }\n            if (lang === 'ts' || lang === 'tsx' || lang === 'jsx') {\n              loader = lang\n            }\n            if (srcMatch) {\n              const src = srcMatch[1] || srcMatch[2] || srcMatch[3]\n              js += `import ${JSON.stringify(src)}\\n`\n            } else if (content.trim()) {\n              js += content + '\\n'\n            }\n          }\n          // empty singleline & multiline comments to avoid matching comments\n          const code = js\n            .replace(multilineCommentsRE, '/* */')\n            .replace(singlelineCommentsRE, '')\n\n          if (\n            loader.startsWith('ts') &&\n            (path.endsWith('.svelte') ||\n              (path.endsWith('.vue') && /<script\\s+setup/.test(raw)))\n          ) {\n            // when using TS + (Vue + <script setup>) or Svelte, imports may seem\n            // unused to esbuild and dropped in the build output, which prevents\n            // esbuild from crawling further.\n            // the solution is to add `import 'x'` for every source to force\n            // esbuild to keep crawling due to potential side effects.\n            let m\n            while ((m = importsRE.exec(code)) != null) {\n              // This is necessary to avoid infinite loops with zero-width matches\n              if (m.index === importsRE.lastIndex) {\n                importsRE.lastIndex++\n              }\n              js += `\\nimport ${m[1]}`\n            }\n          }\n\n          if (!code.includes(`export default`)) {\n            js += `\\nexport default {}`\n          }\n\n          if (code.includes('import.meta.glob')) {\n            return {\n              // transformGlob already transforms to js\n              loader: 'js',\n              contents: await transformGlob(js, path, config.root, loader)\n            }\n          }\n\n          return {\n            loader,\n            contents: js\n          }\n        }\n      )\n\n      // bare imports: record and externalize ----------------------------------\n      build.onResolve(\n        {\n          // avoid matching windows volume\n          filter: /^[\\w@][^:]/\n        },\n        async ({ path: id, importer }) => {\n          if (exclude?.some((e) => e === id || id.startsWith(e + '/'))) {\n            return externalUnlessEntry({ path: id })\n          }\n          if (depImports[id]) {\n            return externalUnlessEntry({ path: id })\n          }\n          const resolved = await resolve(id, importer)\n          if (resolved) {\n            if (shouldExternalizeDep(resolved, id)) {\n              return externalUnlessEntry({ path: id })\n            }\n            if (resolved.includes('node_modules') || include?.includes(id)) {\n              // dependency or forced included, externalize and stop crawling\n              if (OPTIMIZABLE_ENTRY_RE.test(resolved)) {\n                depImports[id] = resolved\n              }\n              return externalUnlessEntry({ path: id })\n            } else {\n              const namespace = htmlTypesRE.test(resolved) ? 'html' : undefined\n              // linked package, keep crawling\n              return {\n                path: path.resolve(resolved),\n                namespace\n              }\n            }\n          } else {\n            missing[id] = normalizePath(importer)\n          }\n        }\n      )\n\n      // Externalized file types -----------------------------------------------\n      // these are done on raw ids using esbuild's native regex filter so it\n      // should be faster than doing it in the catch-all via js\n      // they are done after the bare import resolve because a package name\n      // may end with these extensions\n\n      // css & json\n      build.onResolve(\n        {\n          filter: /\\.(css|less|sass|scss|styl|stylus|pcss|postcss|json)$/\n        },\n        externalUnlessEntry\n      )\n\n      // known asset types\n      build.onResolve(\n        {\n          filter: new RegExp(`\\\\.(${KNOWN_ASSET_TYPES.join('|')})$`)\n        },\n        externalUnlessEntry\n      )\n\n      // known vite query types: ?worker, ?raw\n      build.onResolve({ filter: SPECIAL_QUERY_RE }, ({ path }) => ({\n        path,\n        external: true\n      }))\n\n      // catch all -------------------------------------------------------------\n\n      build.onResolve(\n        {\n          filter: /.*/\n        },\n        async ({ path: id, importer }) => {\n          // use vite resolver to support urls and omitted extensions\n          const resolved = await resolve(id, importer)\n          if (resolved) {\n            if (shouldExternalizeDep(resolved, id)) {\n              return externalUnlessEntry({ path: id })\n            }\n\n            const namespace = htmlTypesRE.test(resolved) ? 'html' : undefined\n\n            return {\n              path: path.resolve(cleanUrl(resolved)),\n              namespace\n            }\n          } else {\n            // resolve failed... probably unsupported type\n            return externalUnlessEntry({ path: id })\n          }\n        }\n      )\n\n      // for jsx/tsx, we need to access the content and check for\n      // presence of import.meta.glob, since it results in import relationships\n      // but isn't crawled by esbuild.\n      build.onLoad({ filter: JS_TYPES_RE }, ({ path: id }) => {\n        let ext = path.extname(id).slice(1)\n        if (ext === 'mjs') ext = 'js'\n\n        let contents = fs.readFileSync(id, 'utf-8')\n        if (ext.endsWith('x') && config.esbuild && config.esbuild.jsxInject) {\n          contents = config.esbuild.jsxInject + `\\n` + contents\n        }\n\n        if (contents.includes('import.meta.glob')) {\n          return transformGlob(contents, id, config.root, ext as Loader).then(\n            (contents) => ({\n              loader: ext as Loader,\n              contents\n            })\n          )\n        }\n        return {\n          loader: ext as Loader,\n          contents\n        }\n      })\n    }\n  }\n}\n\nasync function transformGlob(\n  source: string,\n  importer: string,\n  root: string,\n  loader: Loader\n) {\n  // transform the content first since es-module-lexer can't handle non-js\n  if (loader !== 'js') {\n    source = (await transform(source, { loader })).code\n  }\n\n  await init\n  const imports = parse(source)[0]\n  const s = new MagicString(source)\n  for (let index = 0; index < imports.length; index++) {\n    const { s: start, e: end, ss: expStart } = imports[index]\n    const url = source.slice(start, end)\n    if (url !== 'import.meta') continue\n    if (source.slice(end, end + 5) !== '.glob') continue\n    const { importsString, exp, endIndex } = await transformImportGlob(\n      source,\n      start,\n      normalizePath(importer),\n      index,\n      root\n    )\n    s.prepend(importsString)\n    s.overwrite(expStart, endIndex, exp)\n  }\n  return s.toString()\n}\n\nexport function shouldExternalizeDep(\n  resolvedId: string,\n  rawId: string\n): boolean {\n  // not a valid file path\n  if (!path.isAbsolute(resolvedId)) {\n    return true\n  }\n  // virtual id\n  if (resolvedId === rawId || resolvedId.includes('\\0')) {\n    return true\n  }\n  // resolved is not a scannable type\n  if (!JS_TYPES_RE.test(resolvedId) && !htmlTypesRE.test(resolvedId)) {\n    return true\n  }\n  return false\n}\n","import { Plugin } from '../plugin'\nimport MagicString from 'magic-string'\nimport path from 'path'\nimport { fileToUrl } from './asset'\nimport { ResolvedConfig } from '../config'\nimport { multilineCommentsRE, singlelineCommentsRE } from '../utils'\n\n/**\n * Convert `new URL('./foo.png', import.meta.url)` to its resolved built URL\n *\n * Supports tempalte string with dynamic segments:\n * ```\n * new URL(`./dir/${name}.png`, import.meta.url)\n * // transformed to\n * import.meta.globEager('./dir/**.png')[`./dir/${name}.png`].default\n * ```\n */\nexport function assetImportMetaUrlPlugin(config: ResolvedConfig): Plugin {\n  return {\n    name: 'vite:asset-import-meta-url',\n    async transform(code, id, ssr) {\n      if (code.includes('new URL') && code.includes(`import.meta.url`)) {\n        const importMetaUrlRE =\n          /\\bnew\\s+URL\\s*\\(\\s*('[^']+'|\"[^\"]+\"|`[^`]+`)\\s*,\\s*import\\.meta\\.url\\s*\\)/g\n        const noCommentsCode = code\n          .replace(multilineCommentsRE, (m) => ' '.repeat(m.length))\n          .replace(singlelineCommentsRE, (m) => ' '.repeat(m.length))\n        let s: MagicString | null = null\n        let match: RegExpExecArray | null\n        while ((match = importMetaUrlRE.exec(noCommentsCode))) {\n          const { 0: exp, 1: rawUrl, index } = match\n\n          if (ssr) {\n            this.error(\n              `\\`new URL(url, import.meta.url)\\` is not supported in SSR.`,\n              index\n            )\n          }\n\n          if (!s) s = new MagicString(code)\n\n          // potential dynamic template string\n          if (rawUrl[0] === '`' && /\\$\\{/.test(rawUrl)) {\n            const ast = this.parse(rawUrl)\n            const templateLiteral = (ast as any).body[0].expression\n            if (templateLiteral.expressions.length) {\n              const pattern = buildGlobPattern(templateLiteral)\n              // Note: native import.meta.url is not supported in the baseline\n              // target so we use window.location here -\n              s.overwrite(\n                index,\n                index + exp.length,\n                `new URL(import.meta.globEagerDefault(${JSON.stringify(\n                  pattern\n                )})[${rawUrl}], window.location)`\n              )\n              continue\n            }\n          }\n\n          const url = rawUrl.slice(1, -1)\n          const file = path.resolve(path.dirname(id), url)\n          const builtUrl = await fileToUrl(file, config, this)\n          s.overwrite(\n            index,\n            index + exp.length,\n            `new URL(${JSON.stringify(builtUrl)}, window.location)`\n          )\n        }\n        if (s) {\n          return {\n            code: s.toString(),\n            map: config.build.sourcemap ? s.generateMap({ hires: true }) : null\n          }\n        }\n      }\n      return null\n    }\n  }\n}\n\nfunction buildGlobPattern(ast: any) {\n  let pattern = ''\n  let lastElementIndex = -1\n  for (const exp of ast.expressions) {\n    for (let i = lastElementIndex + 1; i < ast.quasis.length; i++) {\n      const el = ast.quasis[i]\n      if (el.end < exp.start) {\n        pattern += el.value.raw\n        lastElementIndex = i\n      }\n    }\n    pattern += '**'\n  }\n  for (let i = lastElementIndex + 1; i < ast.quasis.length; i++) {\n    pattern += ast.quasis[i].value.raw\n  }\n  return pattern\n}\n","import { promises as fs } from 'fs'\nimport { Plugin } from '..'\nimport { cleanUrl } from '../utils'\n\n/**\n * A plugin to provide build load fallback for arbitrary request with queries.\n */\nexport function loadFallbackPlugin(): Plugin {\n  return {\n    name: 'vite:load-fallback',\n    async load(id) {\n      try {\n        return fs.readFile(cleanUrl(id), 'utf-8')\n      } catch (e) {\n        return fs.readFile(id, 'utf-8')\n      }\n    }\n  }\n}\n","import fs from 'fs'\nimport path from 'path'\nimport chalk from 'chalk'\nimport { resolveConfig, InlineConfig, ResolvedConfig } from './config'\nimport Rollup, {\n  Plugin,\n  RollupBuild,\n  RollupOptions,\n  RollupWarning,\n  WarningHandler,\n  OutputOptions,\n  RollupOutput,\n  ExternalOption,\n  GetManualChunk,\n  GetModuleInfo,\n  WatcherOptions,\n  RollupWatcher,\n  RollupError,\n  ModuleFormat\n} from 'rollup'\nimport { buildReporterPlugin } from './plugins/reporter'\nimport { buildHtmlPlugin } from './plugins/html'\nimport { buildEsbuildPlugin } from './plugins/esbuild'\nimport { terserPlugin } from './plugins/terser'\nimport { Terser } from 'types/terser'\nimport { copyDir, emptyDir, lookupFile, normalizePath } from './utils'\nimport { manifestPlugin } from './plugins/manifest'\nimport commonjsPlugin from '@rollup/plugin-commonjs'\nimport { RollupCommonJSOptions } from 'types/commonjs'\nimport dynamicImportVars from '@rollup/plugin-dynamic-import-vars'\nimport { RollupDynamicImportVarsOptions } from 'types/dynamicImportVars'\nimport { Logger } from './logger'\nimport { TransformOptions } from 'esbuild'\nimport { dataURIPlugin } from './plugins/dataUri'\nimport { buildImportAnalysisPlugin } from './plugins/importAnalysisBuild'\nimport { resolveSSRExternal, shouldExternalizeForSSR } from './ssr/ssrExternal'\nimport { ssrManifestPlugin } from './ssr/ssrManifestPlugin'\nimport { isCSSRequest } from './plugins/css'\nimport { DepOptimizationMetadata } from './optimizer'\nimport { scanImports } from './optimizer/scan'\nimport { assetImportMetaUrlPlugin } from './plugins/assetImportMetaUrl'\nimport { loadFallbackPlugin } from './plugins/loadFallback'\n\nexport interface BuildOptions {\n  /**\n   * Base public path when served in production.\n   * @deprecated `base` is now a root-level config option.\n   */\n  base?: string\n  /**\n   * Compatibility transform target. The transform is performed with esbuild\n   * and the lowest supported target is es2015/es6. Note this only handles\n   * syntax transformation and does not cover polyfills (except for dynamic\n   * import)\n   *\n   * Default: 'modules' - Similar to `@babel/preset-env`'s targets.esmodules,\n   * transpile targeting browsers that natively support dynamic es module imports.\n   * https://caniuse.com/es6-module-dynamic-import\n   *\n   * Another special value is 'esnext' - which only performs minimal transpiling\n   * (for minification compat) and assumes native dynamic imports support.\n   *\n   * For custom targets, see https://esbuild.github.io/api/#target and\n   * https://esbuild.github.io/content-types/#javascript for more details.\n   */\n  target?: 'modules' | TransformOptions['target'] | false\n  /**\n   * whether to inject module preload polyfill.\n   * Note: does not apply to library mode.\n   * @default true\n   */\n  polyfillModulePreload?: boolean\n  /**\n   * whether to inject dynamic import polyfill.\n   * Note: does not apply to library mode.\n   * @default false\n   * @deprecated use plugin-legacy for browsers that don't support dynamic import\n   */\n  polyfillDynamicImport?: boolean\n  /**\n   * Directory relative from `root` where build output will be placed. If the\n   * directory exists, it will be removed before the build.\n   * @default 'dist'\n   */\n  outDir?: string\n  /**\n   * Directory relative from `outDir` where the built js/css/image assets will\n   * be placed.\n   * @default 'assets'\n   */\n  assetsDir?: string\n  /**\n   * Static asset files smaller than this number (in bytes) will be inlined as\n   * base64 strings. Default limit is `4096` (4kb). Set to `0` to disable.\n   * @default 4096\n   */\n  assetsInlineLimit?: number\n  /**\n   * Whether to code-split CSS. When enabled, CSS in async chunks will be\n   * inlined as strings in the chunk and inserted via dynamically created\n   * style tags when the chunk is loaded.\n   * @default true\n   */\n  cssCodeSplit?: boolean\n  /**\n   * If `true`, a separate sourcemap file will be created. If 'inline', the\n   * sourcemap will be appended to the resulting output file as data URI.\n   * 'hidden' works like `true` except that the corresponding sourcemap\n   * comments in the bundled files are suppressed.\n   * @default false\n   */\n  sourcemap?: boolean | 'inline' | 'hidden'\n  /**\n   * Set to `false` to disable minification, or specify the minifier to use.\n   * Available options are 'terser' or 'esbuild'.\n   * @default 'terser'\n   */\n  minify?: boolean | 'terser' | 'esbuild'\n  /**\n   * Options for terser\n   * https://terser.org/docs/api-reference#minify-options\n   */\n  terserOptions?: Terser.MinifyOptions\n  /**\n   * @deprecated Vite now uses esbuild for CSS minification.\n   */\n  cleanCssOptions?: any\n  /**\n   * Will be merged with internal rollup options.\n   * https://rollupjs.org/guide/en/#big-list-of-options\n   */\n  rollupOptions?: RollupOptions\n  /**\n   * Options to pass on to `@rollup/plugin-commonjs`\n   */\n  commonjsOptions?: RollupCommonJSOptions\n  /**\n   * Options to pass on to `@rollup/plugin-dynamic-import-vars`\n   */\n  dynamicImportVarsOptions?: RollupDynamicImportVarsOptions\n  /**\n   * Whether to write bundle to disk\n   * @default true\n   */\n  write?: boolean\n  /**\n   * Empty outDir on write.\n   * @default true when outDir is a sub directory of project root\n   */\n  emptyOutDir?: boolean | null\n  /**\n   * Whether to emit a manifest.json under assets dir to map hash-less filenames\n   * to their hashed versions. Useful when you want to generate your own HTML\n   * instead of using the one generated by Vite.\n   *\n   * Example:\n   *\n   * ```json\n   * {\n   *   \"main.js\": {\n   *     \"file\": \"main.68fe3fad.js\",\n   *     \"css\": \"main.e6b63442.css\",\n   *     \"imports\": [...],\n   *     \"dynamicImports\": [...]\n   *   }\n   * }\n   * ```\n   * @default false\n   */\n  manifest?: boolean\n  /**\n   * Build in library mode. The value should be the global name of the lib in\n   * UMD mode. This will produce esm + cjs + umd bundle formats with default\n   * configurations that are suitable for distributing libraries.\n   */\n  lib?: LibraryOptions | false\n  /**\n   * Produce SSR oriented build. Note this requires specifying SSR entry via\n   * `rollupOptions.input`.\n   */\n  ssr?: boolean | string\n  /**\n   * Generate SSR manifest for determining style links and asset preload\n   * directives in production.\n   */\n  ssrManifest?: boolean\n  /**\n   * Set to false to disable reporting compressed chunk sizes.\n   * Can slightly improve build speed.\n   */\n  reportCompressedSize?: boolean\n  /**\n   * Set to false to disable brotli compressed size reporting for build.\n   * Can slightly improve build speed.\n   * @deprecated use `build.reportCompressedSize` instead.\n   */\n  brotliSize?: boolean\n  /**\n   * Adjust chunk size warning limit (in kbs).\n   * @default 500\n   */\n  chunkSizeWarningLimit?: number\n  /**\n   * Rollup watch options\n   * https://rollupjs.org/guide/en/#watchoptions\n   */\n  watch?: WatcherOptions | null\n}\n\nexport interface LibraryOptions {\n  entry: string\n  name?: string\n  formats?: LibraryFormats[]\n  fileName?: string | ((format: ModuleFormat) => string)\n}\n\nexport type LibraryFormats = 'es' | 'cjs' | 'umd' | 'iife'\n\nexport type ResolvedBuildOptions = Required<\n  Omit<\n    BuildOptions,\n    // make deprecated options optional\n    'base' | 'cleanCssOptions' | 'polyfillDynamicImport' | 'brotliSize'\n  >\n>\n\nexport function resolveBuildOptions(raw?: BuildOptions): ResolvedBuildOptions {\n  const resolved: ResolvedBuildOptions = {\n    target: 'modules',\n    polyfillModulePreload: true,\n    outDir: 'dist',\n    assetsDir: 'assets',\n    assetsInlineLimit: 4096,\n    cssCodeSplit: !raw?.lib,\n    sourcemap: false,\n    rollupOptions: {},\n    commonjsOptions: {\n      include: [/node_modules/],\n      extensions: ['.js', '.cjs'],\n      ...raw?.commonjsOptions\n    },\n    dynamicImportVarsOptions: {\n      warnOnError: true,\n      exclude: [/node_modules/],\n      ...raw?.dynamicImportVarsOptions\n    },\n    minify: raw?.ssr ? false : 'terser',\n    terserOptions: {},\n    write: true,\n    emptyOutDir: null,\n    manifest: false,\n    lib: false,\n    ssr: false,\n    ssrManifest: false,\n    reportCompressedSize: true,\n    // brotliSize: true,\n    chunkSizeWarningLimit: 500,\n    watch: null,\n    ...raw\n  }\n\n  // handle special build targets\n  if (resolved.target === 'modules') {\n    // Support browserslist\n    // \"defaults and supports es6-module and supports es6-module-dynamic-import\",\n    resolved.target = [\n      'es2019',\n      'edge88',\n      'firefox78',\n      'chrome87',\n      'safari13.1'\n    ]\n  } else if (resolved.target === 'esnext' && resolved.minify === 'terser') {\n    // esnext + terser: limit to es2019 so it can be minified by terser\n    resolved.target = 'es2019'\n  }\n\n  // normalize false string into actual false\n  if ((resolved.minify as any) === 'false') {\n    resolved.minify = false\n  }\n\n  return resolved\n}\n\nexport function resolveBuildPlugins(config: ResolvedConfig): {\n  pre: Plugin[]\n  post: Plugin[]\n} {\n  const options = config.build\n  return {\n    pre: [\n      buildHtmlPlugin(config),\n      commonjsPlugin(options.commonjsOptions),\n      dataURIPlugin(),\n      dynamicImportVars(options.dynamicImportVarsOptions),\n      assetImportMetaUrlPlugin(config),\n      ...(options.rollupOptions.plugins\n        ? (options.rollupOptions.plugins.filter((p) => !!p) as Plugin[])\n        : [])\n    ],\n    post: [\n      buildImportAnalysisPlugin(config),\n      buildEsbuildPlugin(config),\n      ...(options.minify && options.minify !== 'esbuild'\n        ? [terserPlugin(options.terserOptions)]\n        : []),\n      ...(options.manifest ? [manifestPlugin(config)] : []),\n      ...(options.ssrManifest ? [ssrManifestPlugin(config)] : []),\n      buildReporterPlugin(config),\n      loadFallbackPlugin()\n    ]\n  }\n}\n\n/**\n * Track parallel build calls and only stop the esbuild service when all\n * builds are done. (#1098)\n */\nlet parallelCallCounts = 0\n// we use a separate counter to track since the call may error before the\n// bundle is even pushed.\nconst parallelBuilds: RollupBuild[] = []\n\n/**\n * Bundles the app for production.\n * Returns a Promise containing the build result.\n */\nexport async function build(\n  inlineConfig: InlineConfig = {}\n): Promise<RollupOutput | RollupOutput[] | RollupWatcher> {\n  parallelCallCounts++\n  try {\n    return await doBuild(inlineConfig)\n  } finally {\n    parallelCallCounts--\n    if (parallelCallCounts <= 0) {\n      await Promise.all(parallelBuilds.map((bundle) => bundle.close()))\n      parallelBuilds.length = 0\n    }\n  }\n}\n\nasync function doBuild(\n  inlineConfig: InlineConfig = {}\n): Promise<RollupOutput | RollupOutput[] | RollupWatcher> {\n  const config = await resolveConfig(inlineConfig, 'build', 'production')\n  const options = config.build\n  const ssr = !!options.ssr\n  const libOptions = options.lib\n\n  config.logger.info(\n    chalk.cyan(\n      `vite v${require('vite/package.json').version} ${chalk.green(\n        `building ${ssr ? `SSR bundle ` : ``}for ${config.mode}...`\n      )}`\n    )\n  )\n\n  const resolve = (p: string) => path.resolve(config.root, p)\n  const input = libOptions\n    ? resolve(libOptions.entry)\n    : typeof options.ssr === 'string'\n    ? resolve(options.ssr)\n    : options.rollupOptions?.input || resolve('index.html')\n\n  if (ssr && typeof input === 'string' && input.endsWith('.html')) {\n    throw new Error(\n      `rollupOptions.input should not be an html file when building for SSR. ` +\n        `Please specify a dedicated SSR entry.`\n    )\n  }\n\n  const outDir = resolve(options.outDir)\n\n  // inject ssr arg to plugin load/transform hooks\n  const plugins = (\n    ssr ? config.plugins.map((p) => injectSsrFlagToHooks(p)) : config.plugins\n  ) as Plugin[]\n\n  // inject ssrExternal if present\n  const userExternal = options.rollupOptions?.external\n  let external = userExternal\n  if (ssr) {\n    // see if we have cached deps data available\n    let knownImports: string[] | undefined\n    if (config.cacheDir) {\n      const dataPath = path.join(config.cacheDir, '_metadata.json')\n      try {\n        const data = JSON.parse(\n          fs.readFileSync(dataPath, 'utf-8')\n        ) as DepOptimizationMetadata\n        knownImports = Object.keys(data.optimized)\n      } catch (e) {}\n    }\n    if (!knownImports) {\n      // no dev deps optimization data, do a fresh scan\n      knownImports = Object.keys((await scanImports(config)).deps)\n    }\n    external = resolveExternal(\n      resolveSSRExternal(config, knownImports),\n      userExternal\n    )\n  }\n\n  const rollup = require('rollup') as typeof Rollup\n  const rollupOptions: RollupOptions = {\n    input,\n    preserveEntrySignatures: ssr\n      ? 'allow-extension'\n      : libOptions\n      ? 'strict'\n      : false,\n    ...options.rollupOptions,\n    plugins,\n    external,\n    onwarn(warning, warn) {\n      onRollupWarning(warning, warn, config)\n    }\n  }\n\n  const outputBuildError = (e: RollupError) => {\n    let msg = chalk.red((e.plugin ? `[${e.plugin}] ` : '') + e.message)\n    if (e.id) {\n      msg += `\\nfile: ${chalk.cyan(\n        e.id + (e.loc ? `:${e.loc.line}:${e.loc.column}` : '')\n      )}`\n    }\n    if (e.frame) {\n      msg += `\\n` + chalk.yellow(e.frame)\n    }\n    config.logger.error(msg, { error: e })\n  }\n\n  try {\n    const buildOutputOptions = (output: OutputOptions = {}): OutputOptions => {\n      return {\n        dir: outDir,\n        format: ssr ? 'cjs' : 'es',\n        exports: ssr ? 'named' : 'auto',\n        sourcemap: options.sourcemap,\n        name: libOptions ? libOptions.name : undefined,\n        generatedCode: 'es2015',\n        entryFileNames: ssr\n          ? `[name].js`\n          : libOptions\n          ? resolveLibFilename(libOptions, output.format || 'es', config.root)\n          : path.posix.join(options.assetsDir, `[name].[hash].js`),\n        chunkFileNames: libOptions\n          ? `[name].js`\n          : path.posix.join(options.assetsDir, `[name].[hash].js`),\n        assetFileNames: libOptions\n          ? `[name].[ext]`\n          : path.posix.join(options.assetsDir, `[name].[hash].[ext]`),\n        // #764 add `Symbol.toStringTag` when build es module into cjs chunk\n        // #1048 add `Symbol.toStringTag` for module default export\n        namespaceToStringTag: true,\n        inlineDynamicImports: ssr && typeof input === 'string',\n        manualChunks:\n          !ssr &&\n          !libOptions &&\n          output?.format !== 'umd' &&\n          output?.format !== 'iife'\n            ? createMoveToVendorChunkFn(config)\n            : undefined,\n        ...output\n      }\n    }\n\n    // resolve lib mode outputs\n    const outputs = resolveBuildOutputs(\n      options.rollupOptions?.output,\n      libOptions,\n      config.logger\n    )\n\n    // watch file changes with rollup\n    if (config.build.watch) {\n      config.logger.info(chalk.cyanBright(`\\nwatching for file changes...`))\n\n      const output: OutputOptions[] = []\n      if (Array.isArray(outputs)) {\n        for (const resolvedOutput of outputs) {\n          output.push(buildOutputOptions(resolvedOutput))\n        }\n      } else {\n        output.push(buildOutputOptions(outputs))\n      }\n\n      const watcherOptions = config.build.watch\n      const watcher = rollup.watch({\n        ...rollupOptions,\n        output,\n        watch: {\n          ...watcherOptions,\n          chokidar: {\n            ignored: [\n              '**/node_modules/**',\n              '**/.git/**',\n              ...(watcherOptions?.chokidar?.ignored || [])\n            ],\n            ignoreInitial: true,\n            ignorePermissionErrors: true,\n            ...watcherOptions.chokidar\n          }\n        }\n      })\n\n      watcher.on('event', (event) => {\n        if (event.code === 'BUNDLE_START') {\n          config.logger.info(chalk.cyanBright(`\\nbuild started...`))\n          if (options.write) {\n            prepareOutDir(outDir, options.emptyOutDir, config)\n          }\n        } else if (event.code === 'BUNDLE_END') {\n          event.result.close()\n          config.logger.info(chalk.cyanBright(`built in ${event.duration}ms.`))\n        } else if (event.code === 'ERROR') {\n          outputBuildError(event.error)\n        }\n      })\n\n      // stop watching\n      watcher.close()\n\n      return watcher\n    }\n\n    // write or generate files with rollup\n    const bundle = await rollup.rollup(rollupOptions)\n    parallelBuilds.push(bundle)\n\n    const generate = (output: OutputOptions = {}) => {\n      return bundle[options.write ? 'write' : 'generate'](\n        buildOutputOptions(output)\n      )\n    }\n\n    if (options.write) {\n      prepareOutDir(outDir, options.emptyOutDir, config)\n    }\n\n    if (Array.isArray(outputs)) {\n      const res = []\n      for (const output of outputs) {\n        res.push(await generate(output))\n      }\n      return res\n    } else {\n      return await generate(outputs)\n    }\n  } catch (e) {\n    outputBuildError(e)\n    throw e\n  }\n}\n\nfunction prepareOutDir(\n  outDir: string,\n  emptyOutDir: boolean | null,\n  config: ResolvedConfig\n) {\n  if (fs.existsSync(outDir)) {\n    if (\n      emptyOutDir == null &&\n      !normalizePath(outDir).startsWith(config.root + '/')\n    ) {\n      // warn if outDir is outside of root\n      config.logger.warn(\n        chalk.yellow(\n          `\\n${chalk.bold(`(!)`)} outDir ${chalk.white.dim(\n            outDir\n          )} is not inside project root and will not be emptied.\\n` +\n            `Use --emptyOutDir to override.\\n`\n        )\n      )\n    } else if (emptyOutDir !== false) {\n      emptyDir(outDir, ['.git'])\n    }\n  }\n  if (config.publicDir && fs.existsSync(config.publicDir)) {\n    copyDir(config.publicDir, outDir)\n  }\n}\n\nfunction getPkgName(root: string) {\n  const { name } = JSON.parse(lookupFile(root, ['package.json']) || `{}`)\n\n  return name?.startsWith('@') ? name.split('/')[1] : name\n}\n\nfunction createMoveToVendorChunkFn(config: ResolvedConfig): GetManualChunk {\n  const cache = new Map<string, boolean>()\n  return (id, { getModuleInfo }) => {\n    if (\n      id.includes('node_modules') &&\n      !isCSSRequest(id) &&\n      staticImportedByEntry(id, getModuleInfo, cache)\n    ) {\n      return 'vendor'\n    }\n  }\n}\n\nfunction staticImportedByEntry(\n  id: string,\n  getModuleInfo: GetModuleInfo,\n  cache: Map<string, boolean>,\n  importStack: string[] = []\n): boolean {\n  if (cache.has(id)) {\n    return cache.get(id) as boolean\n  }\n  if (importStack.includes(id)) {\n    // circular deps!\n    cache.set(id, false)\n    return false\n  }\n  const mod = getModuleInfo(id)\n  if (!mod) {\n    cache.set(id, false)\n    return false\n  }\n\n  if (mod.isEntry) {\n    cache.set(id, true)\n    return true\n  }\n  const someImporterIs = mod.importers.some((importer) =>\n    staticImportedByEntry(\n      importer,\n      getModuleInfo,\n      cache,\n      importStack.concat(id)\n    )\n  )\n  cache.set(id, someImporterIs)\n  return someImporterIs\n}\n\nexport function resolveLibFilename(\n  libOptions: LibraryOptions,\n  format: ModuleFormat,\n  root: string\n): string {\n  if (typeof libOptions.fileName === 'function') {\n    return libOptions.fileName(format)\n  }\n\n  const name = libOptions.fileName || getPkgName(root)\n\n  if (!name)\n    throw new Error(\n      'Name in package.json is required if option \"build.lib.fileName\" is not provided.'\n    )\n\n  return `${name}.${format}.js`\n}\n\nfunction resolveBuildOutputs(\n  outputs: OutputOptions | OutputOptions[] | undefined,\n  libOptions: LibraryOptions | false,\n  logger: Logger\n): OutputOptions | OutputOptions[] | undefined {\n  if (libOptions) {\n    const formats = libOptions.formats || ['es', 'umd']\n    if (\n      (formats.includes('umd') || formats.includes('iife')) &&\n      !libOptions.name\n    ) {\n      throw new Error(\n        `Option \"build.lib.name\" is required when output formats ` +\n          `include \"umd\" or \"iife\".`\n      )\n    }\n    if (!outputs) {\n      return formats.map((format) => ({ format }))\n    } else if (!Array.isArray(outputs)) {\n      return formats.map((format) => ({ ...outputs, format }))\n    } else if (libOptions.formats) {\n      // user explicitly specifying own output array\n      logger.warn(\n        chalk.yellow(\n          `\"build.lib.formats\" will be ignored because ` +\n            `\"build.rollupOptions.output\" is already an array format`\n        )\n      )\n    }\n  }\n  return outputs\n}\n\nconst warningIgnoreList = [`CIRCULAR_DEPENDENCY`, `THIS_IS_UNDEFINED`]\nconst dynamicImportWarningIgnoreList = [\n  `Unsupported expression`,\n  `statically analyzed`\n]\n\nexport function onRollupWarning(\n  warning: RollupWarning,\n  warn: WarningHandler,\n  config: ResolvedConfig\n): void {\n  if (warning.code === 'UNRESOLVED_IMPORT') {\n    const id = warning.source\n    const importer = warning.importer\n    // throw unless it's commonjs external...\n    if (!importer || !/\\?commonjs-external$/.test(importer)) {\n      throw new Error(\n        `[vite]: Rollup failed to resolve import \"${id}\" from \"${importer}\".\\n` +\n          `This is most likely unintended because it can break your application at runtime.\\n` +\n          `If you do want to externalize this module explicitly add it to\\n` +\n          `\\`build.rollupOptions.external\\``\n      )\n    }\n  }\n\n  if (\n    warning.plugin === 'rollup-plugin-dynamic-import-variables' &&\n    dynamicImportWarningIgnoreList.some((msg) => warning.message.includes(msg))\n  ) {\n    return\n  }\n\n  if (!warningIgnoreList.includes(warning.code!)) {\n    const userOnWarn = config.build.rollupOptions?.onwarn\n    if (userOnWarn) {\n      userOnWarn(warning, warn)\n    } else if (warning.code === 'PLUGIN_WARNING') {\n      config.logger.warn(\n        `${chalk.bold.yellow(`[plugin:${warning.plugin}]`)} ${chalk.yellow(\n          warning.message\n        )}`\n      )\n    } else {\n      warn(warning)\n    }\n  }\n}\n\nfunction resolveExternal(\n  ssrExternals: string[],\n  user: ExternalOption | undefined\n): ExternalOption {\n  return ((id, parentId, isResolved) => {\n    if (shouldExternalizeForSSR(id, ssrExternals)) {\n      return true\n    }\n    if (user) {\n      if (typeof user === 'function') {\n        return user(id, parentId, isResolved)\n      } else if (Array.isArray(user)) {\n        return user.some((test) => isExternal(id, test))\n      } else {\n        return isExternal(id, user)\n      }\n    }\n  }) as ExternalOption\n}\n\nfunction isExternal(id: string, test: string | RegExp) {\n  if (typeof test === 'string') {\n    return id === test\n  } else {\n    return test.test(id)\n  }\n}\n\nfunction injectSsrFlagToHooks(p: Plugin): Plugin {\n  const { resolveId, load, transform } = p\n  return {\n    ...p,\n    resolveId: wrapSsrHook(resolveId),\n    load: wrapSsrHook(load),\n    transform: wrapSsrHook(transform)\n  }\n}\n\nfunction wrapSsrHook(fn: Function | undefined) {\n  if (!fn) return\n  return function (this: any, ...args: any[]) {\n    return fn.call(this, ...args, true)\n  }\n}\n","import fs, { promises as fsp } from 'fs'\nimport path from 'path'\nimport { Server as HttpServer } from 'http'\nimport { ServerOptions as HttpsServerOptions } from 'https'\nimport { ResolvedConfig, ServerOptions } from '..'\nimport { isObject } from '../utils'\nimport { Connect } from 'types/connect'\nimport { Logger } from '../logger'\n\nexport async function resolveHttpServer(\n  { proxy }: ServerOptions,\n  app: Connect.Server,\n  httpsOptions?: HttpsServerOptions\n): Promise<HttpServer> {\n  if (!httpsOptions) {\n    return require('http').createServer(app)\n  }\n\n  if (proxy) {\n    // #484 fallback to http1 when proxy is needed.\n    return require('https').createServer(httpsOptions, app)\n  } else {\n    return require('http2').createSecureServer(\n      {\n        ...httpsOptions,\n        allowHTTP1: true\n      },\n      app\n    )\n  }\n}\n\nexport async function resolveHttpsConfig(\n  config: ResolvedConfig\n): Promise<HttpsServerOptions | undefined> {\n  if (!config.server.https) return undefined\n\n  const httpsOption = isObject(config.server.https) ? config.server.https : {}\n\n  const { ca, cert, key, pfx } = httpsOption\n  Object.assign(httpsOption, {\n    ca: readFileIfExists(ca),\n    cert: readFileIfExists(cert),\n    key: readFileIfExists(key),\n    pfx: readFileIfExists(pfx)\n  })\n  if (!httpsOption.key || !httpsOption.cert) {\n    httpsOption.cert = httpsOption.key = await getCertificate(config)\n  }\n  return httpsOption\n}\n\nfunction readFileIfExists(value?: string | Buffer | any[]) {\n  if (typeof value === 'string') {\n    try {\n      return fs.readFileSync(path.resolve(value as string))\n    } catch (e) {\n      return value\n    }\n  }\n  return value\n}\n\n/**\n * https://github.com/webpack/webpack-dev-server/blob/master/lib/utils/createCertificate.js\n *\n * Copyright JS Foundation and other contributors\n * This source code is licensed under the MIT license found in the\n * LICENSE file at\n * https://github.com/webpack/webpack-dev-server/blob/master/LICENSE\n */\nasync function createCertificate() {\n  const { generate } = await import('selfsigned')\n  const pems = generate(null, {\n    algorithm: 'sha256',\n    days: 30,\n    keySize: 2048,\n    extensions: [\n      // {\n      //   name: 'basicConstraints',\n      //   cA: true,\n      // },\n      {\n        name: 'keyUsage',\n        keyCertSign: true,\n        digitalSignature: true,\n        nonRepudiation: true,\n        keyEncipherment: true,\n        dataEncipherment: true\n      },\n      {\n        name: 'extKeyUsage',\n        serverAuth: true,\n        clientAuth: true,\n        codeSigning: true,\n        timeStamping: true\n      },\n      {\n        name: 'subjectAltName',\n        altNames: [\n          {\n            // type 2 is DNS\n            type: 2,\n            value: 'localhost'\n          },\n          {\n            type: 2,\n            value: 'localhost.localdomain'\n          },\n          {\n            type: 2,\n            value: 'lvh.me'\n          },\n          {\n            type: 2,\n            value: '*.lvh.me'\n          },\n          {\n            type: 2,\n            value: '[::1]'\n          },\n          {\n            // type 7 is IP\n            type: 7,\n            ip: '127.0.0.1'\n          },\n          {\n            type: 7,\n            ip: 'fe80::1'\n          }\n        ]\n      }\n    ]\n  })\n  return pems.private + pems.cert\n}\n\nasync function getCertificate(config: ResolvedConfig) {\n  if (!config.cacheDir) return await createCertificate()\n\n  const cachePath = path.join(config.cacheDir, '_cert.pem')\n\n  try {\n    const [stat, content] = await Promise.all([\n      fsp.stat(cachePath),\n      fsp.readFile(cachePath, 'utf8')\n    ])\n\n    if (Date.now() - stat.ctime.valueOf() > 30 * 24 * 60 * 60 * 1000) {\n      throw new Error('cache is outdated.')\n    }\n\n    return content\n  } catch {\n    const content = await createCertificate()\n    fsp\n      .mkdir(config.cacheDir, { recursive: true })\n      .then(() => fsp.writeFile(cachePath, content))\n      .catch(() => {})\n    return content\n  }\n}\n\nexport async function httpServerStart(\n  httpServer: HttpServer,\n  serverOptions: {\n    port: number\n    strictPort: boolean | undefined\n    host: string | undefined\n    logger: Logger\n  }\n): Promise<number> {\n  return new Promise((resolve, reject) => {\n    let { port, strictPort, host, logger } = serverOptions\n\n    const onError = (e: Error & { code?: string }) => {\n      if (e.code === 'EADDRINUSE') {\n        if (strictPort) {\n          httpServer.removeListener('error', onError)\n          reject(new Error(`Port ${port} is already in use`))\n        } else {\n          logger.info(`Port ${port} is in use, trying another one...`)\n          httpServer.listen(++port, host)\n        }\n      } else {\n        httpServer.removeListener('error', onError)\n        reject(e)\n      }\n    }\n\n    httpServer.on('error', onError)\n\n    httpServer.listen(port, host, () => {\n      httpServer.removeListener('error', onError)\n      resolve(port)\n    })\n  })\n}\n","import chalk from 'chalk'\nimport { Server, STATUS_CODES } from 'http'\nimport {\n  createServer as createHttpsServer,\n  ServerOptions as HttpsServerOptions\n} from 'https'\nimport WebSocket from 'ws'\nimport { ErrorPayload, HMRPayload } from 'types/hmrPayload'\nimport { ResolvedConfig } from '..'\nimport { isObject } from '../utils'\nimport { Socket } from 'net'\nexport const HMR_HEADER = 'vite-hmr'\n\nexport interface WebSocketServer {\n  send(payload: HMRPayload): void\n  close(): Promise<void>\n}\n\nexport function createWebSocketServer(\n  server: Server | null,\n  config: ResolvedConfig,\n  httpsOptions?: HttpsServerOptions\n): WebSocketServer {\n  let wss: WebSocket.Server\n  let httpsServer: Server | undefined = undefined\n\n  const hmr = isObject(config.server.hmr) && config.server.hmr\n  const wsServer = (hmr && hmr.server) || server\n\n  if (wsServer) {\n    wss = new WebSocket.Server({ noServer: true })\n    wsServer.on('upgrade', (req, socket, head) => {\n      if (req.headers['sec-websocket-protocol'] === HMR_HEADER) {\n        wss.handleUpgrade(req, socket as Socket, head, (ws) => {\n          wss.emit('connection', ws, req)\n        })\n      }\n    })\n  } else {\n    const websocketServerOptions: WebSocket.ServerOptions = {}\n    const port = (hmr && hmr.port) || 24678\n    if (httpsOptions) {\n      // if we're serving the middlewares over https, the ws library doesn't support automatically creating an https server, so we need to do it ourselves\n      // create an inline https server and mount the websocket server to it\n      httpsServer = createHttpsServer(httpsOptions, (req, res) => {\n        const statusCode = 426\n        const body = STATUS_CODES[statusCode]\n        if (!body)\n          throw new Error(\n            `No body text found for the ${statusCode} status code`\n          )\n\n        res.writeHead(statusCode, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        })\n        res.end(body)\n      })\n\n      httpsServer.listen(port)\n      websocketServerOptions.server = httpsServer\n    } else {\n      // we don't need to serve over https, just let ws handle its own server\n      websocketServerOptions.port = port\n    }\n\n    // vite dev server in middleware mode\n    wss = new WebSocket.Server(websocketServerOptions)\n  }\n\n  wss.on('connection', (socket) => {\n    socket.send(JSON.stringify({ type: 'connected' }))\n    if (bufferedError) {\n      socket.send(JSON.stringify(bufferedError))\n      bufferedError = null\n    }\n  })\n\n  wss.on('error', (e: Error & { code: string }) => {\n    if (e.code !== 'EADDRINUSE') {\n      config.logger.error(\n        chalk.red(`WebSocket server error:\\n${e.stack || e.message}`),\n        { error: e }\n      )\n    }\n  })\n\n  // On page reloads, if a file fails to compile and returns 500, the server\n  // sends the error payload before the client connection is established.\n  // If we have no open clients, buffer the error and send it to the next\n  // connected client.\n  let bufferedError: ErrorPayload | null = null\n\n  return {\n    send(payload: HMRPayload) {\n      if (payload.type === 'error' && !wss.clients.size) {\n        bufferedError = payload\n        return\n      }\n\n      const stringified = JSON.stringify(payload)\n      wss.clients.forEach((client) => {\n        if (client.readyState === WebSocket.OPEN) {\n          client.send(stringified)\n        }\n      })\n    },\n\n    close() {\n      return new Promise((resolve, reject) => {\n        wss.close((err) => {\n          if (err) {\n            reject(err)\n          } else {\n            if (httpsServer) {\n              httpsServer.close((err) => {\n                if (err) {\n                  reject(err)\n                } else {\n                  resolve()\n                }\n              })\n            } else {\n              resolve()\n            }\n          }\n        })\n      })\n    }\n  }\n}\n","import { parse as parseUrl } from 'url'\nimport { ViteDevServer } from '..'\nimport { Connect } from 'types/connect'\n\n// this middleware is only active when (config.base !== '/')\n\nexport function baseMiddleware({\n  config\n}: ViteDevServer): Connect.NextHandleFunction {\n  const base = config.base\n\n  // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n  return function viteBaseMiddleware(req, res, next) {\n    const url = req.url!\n    const parsed = parseUrl(url)\n    const path = parsed.pathname || '/'\n\n    if (path.startsWith(base)) {\n      // rewrite url to remove base.. this ensures that other middleware does\n      // not need to consider base being prepended or not\n      req.url = url.replace(base, '/')\n      return next()\n    }\n\n    // skip redirect and error fallback on middleware mode, #4057\n    if (config.server.middlewareMode) {\n      return next()\n    }\n\n    if (path === '/' || path === '/index.html') {\n      // redirect root visit to based url\n      res.writeHead(302, {\n        Location: base\n      })\n      res.end()\n      return\n    } else if (req.headers.accept?.includes('text/html')) {\n      // non-based page visit\n      const redirectPath = base + url.slice(1)\n      res.writeHead(404, {\n        'Content-Type': 'text/html'\n      })\n      res.end(\n        `The server is configured with a public base URL of ${base} - ` +\n          `did you mean to visit <a href=\"${redirectPath}\">${redirectPath}</a> instead?`\n      )\n      return\n    }\n\n    next()\n  }\n}\n","import * as http from 'http'\nimport { createDebugger, isObject } from '../../utils'\nimport httpProxy from 'http-proxy'\nimport { HMR_HEADER } from '../ws'\nimport { Connect } from 'types/connect'\nimport { HttpProxy } from 'types/http-proxy'\nimport chalk from 'chalk'\nimport { ResolvedConfig } from '../..'\n\nconst debug = createDebugger('vite:proxy')\n\nexport interface ProxyOptions extends HttpProxy.ServerOptions {\n  /**\n   * rewrite path\n   */\n  rewrite?: (path: string) => string\n  /**\n   * configure the proxy server (e.g. listen to events)\n   */\n  configure?: (proxy: HttpProxy.Server, options: ProxyOptions) => void\n  /**\n   * webpack-dev-server style bypass function\n   */\n  bypass?: (\n    req: http.IncomingMessage,\n    res: http.ServerResponse,\n    options: ProxyOptions\n  ) => void | null | undefined | false | string\n}\n\nexport function proxyMiddleware(\n  httpServer: http.Server | null,\n  config: ResolvedConfig\n): Connect.NextHandleFunction {\n  const options = config.server.proxy!\n\n  // lazy require only when proxy is used\n  const proxies: Record<string, [HttpProxy.Server, ProxyOptions]> = {}\n\n  Object.keys(options).forEach((context) => {\n    let opts = options[context]\n    if (typeof opts === 'string') {\n      opts = { target: opts, changeOrigin: true } as ProxyOptions\n    }\n    const proxy = httpProxy.createProxyServer(opts) as HttpProxy.Server\n\n    proxy.on('error', (err) => {\n      config.logger.error(`${chalk.red(`http proxy error:`)}\\n${err.stack}`, {\n        timestamp: true,\n        error: err\n      })\n    })\n\n    if (opts.configure) {\n      opts.configure(proxy, opts)\n    }\n    // clone before saving because http-proxy mutates the options\n    proxies[context] = [proxy, { ...opts }]\n  })\n\n  if (httpServer) {\n    httpServer.on('upgrade', (req, socket, head) => {\n      const url = req.url!\n      for (const context in proxies) {\n        if (doesProxyContextMatchUrl(context, url)) {\n          const [proxy, opts] = proxies[context]\n          if (\n            (opts.ws || opts.target?.toString().startsWith('ws:')) &&\n            req.headers['sec-websocket-protocol'] !== HMR_HEADER\n          ) {\n            if (opts.rewrite) {\n              req.url = opts.rewrite(url)\n            }\n            debug(`${req.url} -> ws ${opts.target}`)\n            proxy.ws(req, socket, head)\n            return\n          }\n        }\n      }\n    })\n  }\n\n  // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n  return function viteProxyMiddleware(req, res, next) {\n    const url = req.url!\n    for (const context in proxies) {\n      if (doesProxyContextMatchUrl(context, url)) {\n        const [proxy, opts] = proxies[context]\n        const options: HttpProxy.ServerOptions = {}\n\n        if (opts.bypass) {\n          const bypassResult = opts.bypass(req, res, opts)\n          if (typeof bypassResult === 'string') {\n            req.url = bypassResult\n            debug(`bypass: ${req.url} -> ${bypassResult}`)\n            return next()\n          } else if (isObject(bypassResult)) {\n            Object.assign(options, bypassResult)\n            debug(`bypass: ${req.url} use modified options: %O`, options)\n            return next()\n          } else if (bypassResult === false) {\n            debug(`bypass: ${req.url} -> 404`)\n            return res.end(404)\n          }\n        }\n\n        debug(`${req.url} -> ${opts.target || opts.forward}`)\n        if (opts.rewrite) {\n          req.url = opts.rewrite(req.url!)\n        }\n        proxy.web(req, res, options)\n        return\n      }\n    }\n    next()\n  }\n}\n\nfunction doesProxyContextMatchUrl(context: string, url: string): boolean {\n  return (\n    (context.startsWith('^') && new RegExp(context).test(url)) ||\n    url.startsWith(context)\n  )\n}\n","import fs from 'fs'\nimport history from 'connect-history-api-fallback'\nimport path from 'path'\nimport { Connect } from 'types/connect'\nimport { createDebugger } from '../../utils'\n\nexport function spaFallbackMiddleware(\n  root: string\n): Connect.NextHandleFunction {\n  const historySpaFallbackMiddleware = history({\n    logger: createDebugger('vite:spa-fallback'),\n    // support /dir/ without explicit index.html\n    rewrites: [\n      {\n        from: /\\/$/,\n        to({ parsedUrl }: any) {\n          const rewritten = parsedUrl.pathname + 'index.html'\n          if (fs.existsSync(path.join(root, rewritten))) {\n            return rewritten\n          } else {\n            return `/index.html`\n          }\n        }\n      }\n    ]\n  })\n\n  // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n  return function viteSpaFallbackMiddleware(req, res, next) {\n    return historySpaFallbackMiddleware(req, res, next)\n  }\n}\n","import { IncomingMessage, ServerResponse } from 'http'\nimport getEtag from 'etag'\nimport { SourceMap } from 'rollup'\n\nconst isDebug = process.env.DEBUG\n\nconst alias: Record<string, string | undefined> = {\n  js: 'application/javascript',\n  css: 'text/css',\n  html: 'text/html',\n  json: 'application/json'\n}\n\nexport function send(\n  req: IncomingMessage,\n  res: ServerResponse,\n  content: string | Buffer,\n  type: string,\n  etag = getEtag(content, { weak: true }),\n  cacheControl = 'no-cache',\n  map?: SourceMap | null\n): void {\n  if (req.headers['if-none-match'] === etag) {\n    res.statusCode = 304\n    return res.end()\n  }\n\n  res.setHeader('Content-Type', alias[type] || type)\n  res.setHeader('Cache-Control', cacheControl)\n  res.setHeader('Etag', etag)\n\n  // inject source map reference\n  if (map && map.mappings) {\n    if (isDebug) {\n      content += `\\n/*${JSON.stringify(map, null, 2).replace(\n        /\\*\\//g,\n        '*\\\\/'\n      )}*/\\n`\n    }\n    content += genSourceMapString(map)\n  }\n\n  res.statusCode = 200\n  return res.end(content)\n}\n\nfunction genSourceMapString(map: SourceMap | string | undefined) {\n  if (typeof map !== 'string') {\n    map = JSON.stringify(map)\n  }\n  return `\\n//# sourceMappingURL=data:application/json;base64,${Buffer.from(\n    map\n  ).toString('base64')}`\n}\n","import MagicString from 'magic-string'\nimport { SourceMap } from 'rollup'\nimport { TransformResult } from '../server/transformRequest'\nimport { parser } from '../server/pluginContainer'\nimport {\n  Identifier,\n  Node as _Node,\n  Property,\n  Function as FunctionNode\n} from 'estree'\nimport { extract_names as extractNames } from 'periscopic'\nimport { walk as eswalk } from 'estree-walker'\nimport { combineSourcemaps } from '../utils'\nimport { RawSourceMap } from '@ampproject/remapping/dist/types/types'\n\ntype Node = _Node & {\n  start: number\n  end: number\n}\n\nexport const ssrModuleExportsKey = `__vite_ssr_exports__`\nexport const ssrImportKey = `__vite_ssr_import__`\nexport const ssrDynamicImportKey = `__vite_ssr_dynamic_import__`\nexport const ssrExportAllKey = `__vite_ssr_exportAll__`\nexport const ssrImportMetaKey = `__vite_ssr_import_meta__`\n\nexport async function ssrTransform(\n  code: string,\n  inMap: SourceMap | null,\n  url: string\n): Promise<TransformResult | null> {\n  const s = new MagicString(code)\n\n  const ast = parser.parse(code, {\n    sourceType: 'module',\n    ecmaVersion: 2021,\n    locations: true\n  }) as any\n\n  let uid = 0\n  const deps = new Set<string>()\n  const dynamicDeps = new Set<string>()\n  const idToImportMap = new Map<string, string>()\n  const declaredConst = new Set<string>()\n\n  function defineImport(node: Node, source: string) {\n    deps.add(source)\n    const importId = `__vite_ssr_import_${uid++}__`\n    s.appendLeft(\n      node.start,\n      `const ${importId} = await ${ssrImportKey}(${JSON.stringify(source)});\\n`\n    )\n    return importId\n  }\n\n  function defineExport(position: number, name: string, local = name) {\n    s.appendRight(\n      position,\n      `\\nObject.defineProperty(${ssrModuleExportsKey}, \"${name}\", ` +\n        `{ enumerable: true, configurable: true, get(){ return ${local} }});`\n    )\n  }\n\n  // 1. check all import statements and record id -> importName map\n  for (const node of ast.body as Node[]) {\n    // import foo from 'foo' --> foo -> __import_foo__.default\n    // import { baz } from 'foo' --> baz -> __import_foo__.baz\n    // import * as ok from 'foo' --> ok -> __import_foo__\n    if (node.type === 'ImportDeclaration') {\n      const importId = defineImport(node, node.source.value as string)\n      for (const spec of node.specifiers) {\n        if (spec.type === 'ImportSpecifier') {\n          idToImportMap.set(\n            spec.local.name,\n            `${importId}.${spec.imported.name}`\n          )\n        } else if (spec.type === 'ImportDefaultSpecifier') {\n          idToImportMap.set(spec.local.name, `${importId}.default`)\n        } else {\n          // namespace specifier\n          idToImportMap.set(spec.local.name, importId)\n        }\n      }\n      s.remove(node.start, node.end)\n    }\n  }\n\n  // 2. check all export statements and define exports\n  for (const node of ast.body as Node[]) {\n    // named exports\n    if (node.type === 'ExportNamedDeclaration') {\n      if (node.declaration) {\n        if (\n          node.declaration.type === 'FunctionDeclaration' ||\n          node.declaration.type === 'ClassDeclaration'\n        ) {\n          // export function foo() {}\n          defineExport(node.end, node.declaration.id!.name)\n        } else {\n          // export const foo = 1, bar = 2\n          for (const declaration of node.declaration.declarations) {\n            const names = extractNames(declaration.id as any)\n            for (const name of names) {\n              defineExport(node.end, name)\n            }\n          }\n        }\n        s.remove(node.start, (node.declaration as Node).start)\n      } else {\n        s.remove(node.start, node.end)\n        if (node.source) {\n          // export { foo, bar } from './foo'\n          const importId = defineImport(node, node.source.value as string)\n          for (const spec of node.specifiers) {\n            defineExport(\n              node.end,\n              spec.exported.name,\n              `${importId}.${spec.local.name}`\n            )\n          }\n        } else {\n          // export { foo, bar }\n          for (const spec of node.specifiers) {\n            const local = spec.local.name\n            const binding = idToImportMap.get(local)\n            defineExport(node.end, spec.exported.name, binding || local)\n          }\n        }\n      }\n    }\n\n    // default export\n    if (node.type === 'ExportDefaultDeclaration') {\n      if ('id' in node.declaration && node.declaration.id) {\n        // named hoistable/class exports\n        // export default function foo() {}\n        // export default class A {}\n        const { name } = node.declaration.id\n        s.remove(node.start, node.start + 15 /* 'export default '.length */)\n        s.append(\n          `\\nObject.defineProperty(${ssrModuleExportsKey}, \"default\", ` +\n            `{ enumerable: true, value: ${name} });`\n        )\n      } else {\n        // anonymous default exports\n        s.overwrite(\n          node.start,\n          node.start + 14 /* 'export default'.length */,\n          `${ssrModuleExportsKey}.default =`\n        )\n      }\n    }\n\n    // export * from './foo'\n    if (node.type === 'ExportAllDeclaration') {\n      if (node.exported) {\n        const importId = defineImport(node, node.source.value as string)\n        s.remove(node.start, node.end)\n        defineExport(node.end, node.exported.name, `${importId}`)\n      } else {\n        const importId = defineImport(node, node.source.value as string)\n        s.remove(node.start, node.end)\n        s.appendLeft(node.end, `${ssrExportAllKey}(${importId});`)\n      }\n    }\n  }\n\n  // 3. convert references to import bindings & import.meta references\n  walk(ast, {\n    onIdentifier(id, parent, parentStack) {\n      const binding = idToImportMap.get(id.name)\n      if (!binding) {\n        return\n      }\n      if (isStaticProperty(parent) && parent.shorthand) {\n        // let binding used in a property shorthand\n        // { foo } -> { foo: __import_x__.foo }\n        // skip for destructuring patterns\n        if (\n          !(parent as any).inPattern ||\n          isInDestructuringAssignment(parent, parentStack)\n        ) {\n          s.appendLeft(id.end, `: ${binding}`)\n        }\n      } else if (\n        parent.type === 'ClassDeclaration' &&\n        id === parent.superClass\n      ) {\n        if (!declaredConst.has(id.name)) {\n          declaredConst.add(id.name)\n          // locate the top-most node containing the class declaration\n          const topNode = parentStack[1]\n          s.prependRight(topNode.start, `const ${id.name} = ${binding};\\n`)\n        }\n      } else {\n        s.overwrite(id.start, id.end, binding)\n      }\n    },\n    onImportMeta(node) {\n      s.overwrite(node.start, node.end, ssrImportMetaKey)\n    },\n    onDynamicImport(node) {\n      s.overwrite(node.start, node.start + 6, ssrDynamicImportKey)\n      if (node.type === 'ImportExpression' && node.source.type === 'Literal') {\n        dynamicDeps.add(node.source.value as string)\n      }\n    }\n  })\n\n  let map = s.generateMap({ hires: true })\n  if (inMap && inMap.mappings && inMap.sources.length > 0) {\n    map = combineSourcemaps(url, [\n      {\n        ...map,\n        sources: inMap.sources,\n        sourcesContent: inMap.sourcesContent\n      } as RawSourceMap,\n      inMap as RawSourceMap\n    ]) as SourceMap\n  } else {\n    map.sources = [url]\n    map.sourcesContent = [code]\n  }\n\n  return {\n    code: s.toString(),\n    map,\n    deps: [...deps],\n    dynamicDeps: [...dynamicDeps]\n  }\n}\n\ninterface Visitors {\n  onIdentifier: (\n    node: Identifier & {\n      start: number\n      end: number\n    },\n    parent: Node,\n    parentStack: Node[]\n  ) => void\n  onImportMeta: (node: Node) => void\n  onDynamicImport: (node: Node) => void\n}\n\n/**\n * Same logic from \\@vue/compiler-core & \\@vue/compiler-sfc\n * Except this is using acorn AST\n */\nfunction walk(\n  root: Node,\n  { onIdentifier, onImportMeta, onDynamicImport }: Visitors\n) {\n  const parentStack: Node[] = []\n  const scope: Record<string, number> = Object.create(null)\n  const scopeMap = new WeakMap<_Node, Set<string>>()\n\n  const setScope = (node: FunctionNode, name: string) => {\n    let scopeIds = scopeMap.get(node)\n    if (scopeIds && scopeIds.has(name)) {\n      return\n    }\n    if (name in scope) {\n      scope[name]++\n    } else {\n      scope[name] = 1\n    }\n    if (!scopeIds) {\n      scopeIds = new Set()\n      scopeMap.set(node, scopeIds)\n    }\n    scopeIds.add(name)\n  }\n\n  ;(eswalk as any)(root, {\n    enter(node: Node, parent: Node | null) {\n      if (node.type === 'ImportDeclaration') {\n        return this.skip()\n      }\n\n      parent && parentStack.push(parent)\n\n      if (node.type === 'MetaProperty' && node.meta.name === 'import') {\n        onImportMeta(node)\n      } else if (node.type === 'ImportExpression') {\n        onDynamicImport(node)\n      }\n\n      if (node.type === 'Identifier') {\n        if (!scope[node.name] && isRefIdentifier(node, parent!, parentStack)) {\n          onIdentifier(node, parent!, parentStack)\n        }\n      } else if (isFunction(node)) {\n        // walk function expressions and add its arguments to known identifiers\n        // so that we don't prefix them\n        node.params.forEach((p) =>\n          (eswalk as any)(p, {\n            enter(child: Node, parent: Node) {\n              if (\n                child.type === 'Identifier' &&\n                // do not record as scope variable if is a destructuring key\n                !isStaticPropertyKey(child, parent) &&\n                // do not record if this is a default value\n                // assignment of a destructuring variable\n                !(\n                  parent &&\n                  parent.type === 'AssignmentPattern' &&\n                  parent.right === child\n                )\n              ) {\n                setScope(node, child.name)\n              }\n            }\n          })\n        )\n      } else if (node.type === 'Property' && parent!.type === 'ObjectPattern') {\n        // mark property in destructuring pattern\n        ;(node as any).inPattern = true\n      } else if (node.type === 'VariableDeclarator') {\n        const parentFunction = findParentFunction(parentStack)\n        if (parentFunction) {\n          if (node.id.type === 'ObjectPattern') {\n            node.id.properties.forEach((property) => {\n              if (property.type === 'RestElement') {\n                setScope(parentFunction, (property.argument as Identifier).name)\n              } else {\n                setScope(parentFunction, (property.value as Identifier).name)\n              }\n            })\n          } else {\n            setScope(parentFunction, (node.id as Identifier).name)\n          }\n        }\n      }\n    },\n\n    leave(node: Node, parent: Node | null) {\n      parent && parentStack.pop()\n      const scopeIds = scopeMap.get(node)\n      if (scopeIds) {\n        scopeIds.forEach((id: string) => {\n          scope[id]--\n          if (scope[id] === 0) {\n            delete scope[id]\n          }\n        })\n      }\n    }\n  })\n}\n\nfunction isRefIdentifier(id: Identifier, parent: _Node, parentStack: _Node[]) {\n  // declaration id\n  if (\n    parent.type === 'CatchClause' ||\n    ((parent.type === 'VariableDeclarator' ||\n      parent.type === 'ClassDeclaration') &&\n      parent.id === id)\n  ) {\n    return false\n  }\n\n  if (isFunction(parent)) {\n    // function declaration/expression id\n    if ((parent as any).id === id) {\n      return false\n    }\n    // params list\n    if (parent.params.includes(id)) {\n      return false\n    }\n  }\n\n  // class method name\n  if (parent.type === 'MethodDefinition') {\n    return false\n  }\n\n  // property key\n  // this also covers object destructuring pattern\n  if (isStaticPropertyKey(id, parent) || (parent as any).inPattern) {\n    return false\n  }\n\n  // non-assignment array destructuring pattern\n  if (\n    parent.type === 'ArrayPattern' &&\n    !isInDestructuringAssignment(parent, parentStack)\n  ) {\n    return false\n  }\n\n  // member expression property\n  if (\n    parent.type === 'MemberExpression' &&\n    parent.property === id &&\n    !parent.computed\n  ) {\n    return false\n  }\n\n  if (parent.type === 'ExportSpecifier') {\n    return false\n  }\n\n  // is a special keyword but parsed as identifier\n  if (id.name === 'arguments') {\n    return false\n  }\n\n  return true\n}\n\nconst isStaticProperty = (node: _Node): node is Property =>\n  node && node.type === 'Property' && !node.computed\n\nconst isStaticPropertyKey = (node: _Node, parent: _Node) =>\n  isStaticProperty(parent) && parent.key === node\n\nfunction isFunction(node: _Node): node is FunctionNode {\n  return /Function(?:Expression|Declaration)$|Method$/.test(node.type)\n}\n\nfunction findParentFunction(parentStack: _Node[]): FunctionNode | undefined {\n  for (let i = parentStack.length - 1; i >= 0; i--) {\n    const node = parentStack[i]\n    if (isFunction(node)) {\n      return node\n    }\n  }\n}\n\nfunction isInDestructuringAssignment(\n  parent: _Node,\n  parentStack: _Node[]\n): boolean {\n  if (\n    parent &&\n    (parent.type === 'Property' || parent.type === 'ArrayPattern')\n  ) {\n    let i = parentStack.length\n    while (i--) {\n      const p = parentStack[i]\n      if (p.type === 'AssignmentExpression') {\n        return true\n      } else if (p.type !== 'Property' && !p.type.endsWith('Pattern')) {\n        break\n      }\n    }\n  }\n  return false\n}\n","import path from 'path'\nimport { promises as fs } from 'fs'\nimport { Logger } from '../logger'\nimport { createDebugger } from '../utils'\n\nconst isDebug = !!process.env.DEBUG\nconst debug = createDebugger('vite:sourcemap', {\n  onlyWhenFocused: true\n})\n\ninterface SourceMapLike {\n  sources: string[]\n  sourcesContent?: (string | null)[]\n  sourceRoot?: string\n}\n\nexport async function injectSourcesContent(\n  map: SourceMapLike,\n  file: string,\n  logger: Logger\n): Promise<void> {\n  let sourceRoot: string | undefined\n  try {\n    // The source root is undefined for virtual modules and permission errors.\n    sourceRoot = await fs.realpath(\n      path.resolve(path.dirname(file), map.sourceRoot || '')\n    )\n  } catch {}\n\n  const missingSources: string[] = []\n  map.sourcesContent = await Promise.all(\n    map.sources.map((sourcePath) => {\n      if (sourcePath) {\n        sourcePath = decodeURI(sourcePath)\n        if (sourceRoot) {\n          sourcePath = path.resolve(sourceRoot, sourcePath)\n        }\n        return fs.readFile(sourcePath, 'utf-8').catch(() => {\n          missingSources.push(sourcePath)\n          return null\n        })\n      }\n      return null\n    })\n  )\n\n  // Use this command…\n  //    DEBUG=\"vite:sourcemap\" vite build\n  // …to log the missing sources.\n  if (missingSources.length) {\n    logger.warnOnce(`Sourcemap for \"${file}\" points to missing source files`)\n    isDebug && debug(`Missing sources:\\n  ` + missingSources.join(`\\n  `))\n  }\n}\n","import path from 'path'\nimport sirv, { Options } from 'sirv'\nimport { Connect } from 'types/connect'\nimport { normalizePath, ResolvedConfig, ViteDevServer } from '../..'\nimport { FS_PREFIX } from '../../constants'\nimport {\n  cleanUrl,\n  ensureLeadingSlash,\n  fsPathFromId,\n  isImportRequest,\n  isInternalRequest,\n  isWindows,\n  slash\n} from '../../utils'\nimport { AccessRestrictedError } from './error'\n\nconst sirvOptions: Options = {\n  dev: true,\n  etag: true,\n  extensions: [],\n  setHeaders(res, pathname) {\n    // Matches js, jsx, ts, tsx.\n    // The reason this is done, is that the .ts file extension is reserved\n    // for the MIME type video/mp2t. In almost all cases, we can expect\n    // these files to be TypeScript files, and for Vite to serve them with\n    // this Content-Type.\n    if (/\\.[tj]sx?$/.test(pathname)) {\n      res.setHeader('Content-Type', 'application/javascript')\n    }\n  }\n}\n\nexport function servePublicMiddleware(dir: string): Connect.NextHandleFunction {\n  const serve = sirv(dir, sirvOptions)\n\n  // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n  return function viteServePublicMiddleware(req, res, next) {\n    // skip import request and internal requests `/@fs/ /@vite-client` etc...\n    if (isImportRequest(req.url!) || isInternalRequest(req.url!)) {\n      return next()\n    }\n    serve(req, res, next)\n  }\n}\n\nexport function serveStaticMiddleware(\n  dir: string,\n  config: ResolvedConfig\n): Connect.NextHandleFunction {\n  const serve = sirv(dir, sirvOptions)\n\n  // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n  return function viteServeStaticMiddleware(req, res, next) {\n    // only serve the file if it's not an html request\n    // so that html requests can fallthrough to our html middleware for\n    // special processing\n    // also skip internal requests `/@fs/ /@vite-client` etc...\n    if (\n      path.extname(cleanUrl(req.url!)) === '.html' ||\n      isInternalRequest(req.url!)\n    ) {\n      return next()\n    }\n\n    const url = decodeURI(req.url!)\n\n    // apply aliases to static requests as well\n    let redirected: string | undefined\n    for (const { find, replacement } of config.resolve.alias) {\n      const matches =\n        typeof find === 'string' ? url.startsWith(find) : find.test(url)\n      if (matches) {\n        redirected = url.replace(find, replacement)\n        break\n      }\n    }\n    if (redirected) {\n      // dir is pre-normalized to posix style\n      if (redirected.startsWith(dir)) {\n        redirected = redirected.slice(dir.length)\n      }\n      req.url = redirected\n    }\n\n    serve(req, res, next)\n  }\n}\n\nexport function serveRawFsMiddleware(\n  server: ViteDevServer\n): Connect.NextHandleFunction {\n  const serveFromRoot = sirv('/', sirvOptions)\n\n  // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n  return function viteServeRawFsMiddleware(req, res, next) {\n    let url = req.url!\n    // In some cases (e.g. linked monorepos) files outside of root will\n    // reference assets that are also out of served root. In such cases\n    // the paths are rewritten to `/@fs/` prefixed paths and must be served by\n    // searching based from fs root.\n    if (url.startsWith(FS_PREFIX)) {\n      // restrict files outside of `fs.allow`\n      ensureServingAccess(slash(path.resolve(fsPathFromId(url))), server)\n      url = url.slice(FS_PREFIX.length)\n      if (isWindows) url = url.replace(/^[A-Z]:/i, '')\n\n      req.url = url\n      serveFromRoot(req, res, next)\n    } else {\n      next()\n    }\n  }\n}\n\nexport function isFileServingAllowed(\n  url: string,\n  server: ViteDevServer\n): boolean {\n  // explicitly disabled\n  if (server.config.server.fs.strict === false) return true\n\n  const file = ensureLeadingSlash(normalizePath(cleanUrl(url)))\n\n  if (server.moduleGraph.safeModulesPath.has(file)) return true\n\n  if (server.config.server.fs.allow.some((i) => file.startsWith(i + '/')))\n    return true\n\n  if (!server.config.server.fs.strict) {\n    server.config.logger.warnOnce(`Unrestricted file system access to \"${url}\"`)\n    server.config.logger.warnOnce(\n      `For security concerns, accessing files outside of serving allow list will ` +\n        `be restricted by default in the future version of Vite. ` +\n        `Refer to https://vitejs.dev/config/#server-fs-allow for more details.`\n    )\n    return true\n  }\n\n  return false\n}\n\nexport function ensureServingAccess(url: string, server: ViteDevServer): void {\n  if (!isFileServingAllowed(url, server)) {\n    const allow = server.config.server.fs.allow\n    throw new AccessRestrictedError(\n      `The request url \"${url}\" is outside of Vite serving allow list:\n\n${allow.map((i) => `- ${i}`).join('\\n')}\n\nRefer to docs https://vitejs.dev/config/#server-fs-allow for configurations and more details.`\n    )\n  }\n}\n","import { promises as fs } from 'fs'\nimport path from 'path'\nimport getEtag from 'etag'\nimport * as convertSourceMap from 'convert-source-map'\nimport { SourceDescription, SourceMap } from 'rollup'\nimport { ViteDevServer } from '..'\nimport chalk from 'chalk'\nimport {\n  createDebugger,\n  cleanUrl,\n  prettifyUrl,\n  removeTimestampQuery,\n  timeFrom,\n  ensureWatchedFile,\n  isObject\n} from '../utils'\nimport { checkPublicFile } from '../plugins/asset'\nimport { ssrTransform } from '../ssr/ssrTransform'\nimport { injectSourcesContent } from './sourcemap'\nimport { isFileServingAllowed } from './middlewares/static'\n\nconst debugLoad = createDebugger('vite:load')\nconst debugTransform = createDebugger('vite:transform')\nconst debugCache = createDebugger('vite:cache')\nconst isDebug = !!process.env.DEBUG\n\nexport interface TransformResult {\n  code: string\n  map: SourceMap | null\n  etag?: string\n  deps?: string[]\n  dynamicDeps?: string[]\n}\n\nexport interface TransformOptions {\n  ssr?: boolean\n  html?: boolean\n}\n\nexport async function transformRequest(\n  url: string,\n  server: ViteDevServer,\n  options: TransformOptions = {}\n): Promise<TransformResult | null> {\n  const { config, pluginContainer, moduleGraph, watcher } = server\n\n  url = removeTimestampQuery(url)\n  const { root, logger } = config\n  const prettyUrl = isDebug ? prettifyUrl(url, root) : ''\n  const ssr = !!options.ssr\n\n  // check if we have a fresh cache\n  const module = await moduleGraph.getModuleByUrl(url)\n  const cached =\n    module && (ssr ? module.ssrTransformResult : module.transformResult)\n  if (cached) {\n    isDebug && debugCache(`[memory] ${prettyUrl}`)\n    return cached\n  }\n\n  // resolve\n  const id = (await pluginContainer.resolveId(url))?.id || url\n  const file = cleanUrl(id)\n\n  let code: string | null = null\n  let map: SourceDescription['map'] = null\n\n  // load\n  const loadStart = isDebug ? Date.now() : 0\n  const loadResult = await pluginContainer.load(id, ssr)\n  if (loadResult == null) {\n    // if this is an html request and there is no load result, skip ahead to\n    // SPA fallback.\n    if (options.html && !id.endsWith('.html')) {\n      return null\n    }\n    // try fallback loading it from fs as string\n    // if the file is a binary, there should be a plugin that already loaded it\n    // as string\n    // only try the fallback if access is allowed, skip for out of root url\n    // like /service-worker.js or /api/users\n    if (options.ssr || isFileServingAllowed(file, server)) {\n      try {\n        code = await fs.readFile(file, 'utf-8')\n        isDebug && debugLoad(`${timeFrom(loadStart)} [fs] ${prettyUrl}`)\n      } catch (e) {\n        if (e.code !== 'ENOENT') {\n          throw e\n        }\n      }\n    }\n    if (code) {\n      try {\n        map = (\n          convertSourceMap.fromSource(code) ||\n          convertSourceMap.fromMapFileSource(code, path.dirname(file))\n        )?.toObject()\n      } catch (e) {\n        logger.warn(`Failed to load source map for ${url}.`, {\n          timestamp: true\n        })\n      }\n    }\n  } else {\n    isDebug && debugLoad(`${timeFrom(loadStart)} [plugin] ${prettyUrl}`)\n    if (isObject(loadResult)) {\n      code = loadResult.code\n      map = loadResult.map\n    } else {\n      code = loadResult\n    }\n  }\n  if (code == null) {\n    if (checkPublicFile(url, config)) {\n      throw new Error(\n        `Failed to load url ${url} (resolved id: ${id}). ` +\n          `This file is in /public and will be copied as-is during build without ` +\n          `going through the plugin transforms, and therefore should not be ` +\n          `imported from source code. It can only be referenced via HTML tags.`\n      )\n    } else {\n      return null\n    }\n  }\n\n  // ensure module in graph after successful load\n  const mod = await moduleGraph.ensureEntryFromUrl(url)\n  ensureWatchedFile(watcher, mod.file, root)\n\n  // transform\n  const transformStart = isDebug ? Date.now() : 0\n  const transformResult = await pluginContainer.transform(code, id, map, ssr)\n  if (\n    transformResult == null ||\n    (isObject(transformResult) && transformResult.code == null)\n  ) {\n    // no transform applied, keep code as-is\n    isDebug &&\n      debugTransform(\n        timeFrom(transformStart) + chalk.dim(` [skipped] ${prettyUrl}`)\n      )\n  } else {\n    isDebug && debugTransform(`${timeFrom(transformStart)} ${prettyUrl}`)\n    code = transformResult.code!\n    map = transformResult.map\n  }\n\n  if (map && mod.file) {\n    map = (typeof map === 'string' ? JSON.parse(map) : map) as SourceMap\n    if (map.mappings && !map.sourcesContent) {\n      await injectSourcesContent(map, mod.file, logger)\n    }\n  }\n\n  if (ssr) {\n    return (mod.ssrTransformResult = await ssrTransform(\n      code,\n      map as SourceMap,\n      url\n    ))\n  } else {\n    return (mod.transformResult = {\n      code,\n      map,\n      etag: getEtag(code, { weak: true })\n    } as TransformResult)\n  }\n}\n","import path from 'path'\nimport { ViteDevServer } from '..'\nimport { Connect } from 'types/connect'\nimport {\n  cleanUrl,\n  createDebugger,\n  injectQuery,\n  isImportRequest,\n  isJSRequest,\n  normalizePath,\n  prettifyUrl,\n  removeImportQuery,\n  removeTimestampQuery,\n  unwrapId\n} from '../../utils'\nimport { send } from '../send'\nimport { transformRequest } from '../transformRequest'\nimport { isHTMLProxy } from '../../plugins/html'\nimport chalk from 'chalk'\nimport {\n  CLIENT_PUBLIC_PATH,\n  DEP_VERSION_RE,\n  NULL_BYTE_PLACEHOLDER\n} from '../../constants'\nimport {\n  isCSSRequest,\n  isDirectCSSRequest,\n  isDirectRequest\n} from '../../plugins/css'\n\n/**\n * Time (ms) Vite has to full-reload the page before returning\n * an empty response.\n */\nconst NEW_DEPENDENCY_BUILD_TIMEOUT = 1000\n\nconst debugCache = createDebugger('vite:cache')\nconst isDebug = !!process.env.DEBUG\n\nconst knownIgnoreList = new Set(['/', '/favicon.ico'])\n\nexport function transformMiddleware(\n  server: ViteDevServer\n): Connect.NextHandleFunction {\n  const {\n    config: { root, logger, cacheDir },\n    moduleGraph\n  } = server\n\n  // determine the url prefix of files inside cache directory\n  let cacheDirPrefix: string | undefined\n  if (cacheDir) {\n    const cacheDirRelative = normalizePath(path.relative(root, cacheDir))\n    if (cacheDirRelative.startsWith('../')) {\n      // if the cache directory is outside root, the url prefix would be something\n      // like '/@fs/absolute/path/to/node_modules/.vite'\n      cacheDirPrefix = `/@fs/${normalizePath(cacheDir).replace(/^\\//, '')}`\n    } else {\n      // if the cache directory is inside root, the url prefix would be something\n      // like '/node_modules/.vite'\n      cacheDirPrefix = `/${cacheDirRelative}`\n    }\n  }\n\n  // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n  return async function viteTransformMiddleware(req, res, next) {\n    if (req.method !== 'GET' || knownIgnoreList.has(req.url!)) {\n      return next()\n    }\n\n    if (\n      server._pendingReload &&\n      // always allow vite client requests so that it can trigger page reload\n      !req.url?.startsWith(CLIENT_PUBLIC_PATH) &&\n      !req.url?.includes('vite/dist/client')\n    ) {\n      // missing dep pending reload, hold request until reload happens\n      server._pendingReload.then(() =>\n        // If the refresh has not happened after timeout, Vite considers\n        // something unexpected has happened. In this case, Vite\n        // returns an empty response that will error.\n        setTimeout(() => {\n          // Don't do anything if response has already been sent\n          if (res.writableEnded) return\n          // status code request timeout\n          res.statusCode = 408\n          res.end(\n            `<h1>[vite] Something unexpected happened while optimizing \"${req.url}\"<h1>` +\n              `<p>The current page should have reloaded by now</p>`\n          )\n        }, NEW_DEPENDENCY_BUILD_TIMEOUT)\n      )\n      return\n    }\n\n    let url = decodeURI(removeTimestampQuery(req.url!)).replace(\n      NULL_BYTE_PLACEHOLDER,\n      '\\0'\n    )\n\n    const withoutQuery = cleanUrl(url)\n\n    try {\n      const isSourceMap = withoutQuery.endsWith('.map')\n      // since we generate source map references, handle those requests here\n      if (isSourceMap) {\n        const originalUrl = url.replace(/\\.map($|\\?)/, '$1')\n        const map = (await moduleGraph.getModuleByUrl(originalUrl))\n          ?.transformResult?.map\n        if (map) {\n          return send(req, res, JSON.stringify(map), 'json')\n        } else {\n          return next()\n        }\n      }\n\n      // check if public dir is inside root dir\n      const publicDir = normalizePath(server.config.publicDir)\n      const rootDir = normalizePath(server.config.root)\n      if (publicDir.startsWith(rootDir)) {\n        const publicPath = `${publicDir.slice(rootDir.length)}/`\n        // warn explicit public paths\n        if (url.startsWith(publicPath)) {\n          logger.warn(\n            chalk.yellow(\n              `files in the public directory are served at the root path.\\n` +\n                `Instead of ${chalk.cyan(url)}, use ${chalk.cyan(\n                  url.replace(publicPath, '/')\n                )}.`\n            )\n          )\n        }\n      }\n\n      if (\n        isJSRequest(url) ||\n        isImportRequest(url) ||\n        isCSSRequest(url) ||\n        isHTMLProxy(url)\n      ) {\n        // strip ?import\n        url = removeImportQuery(url)\n        // Strip valid id prefix. This is prepended to resolved Ids that are\n        // not valid browser import specifiers by the importAnalysis plugin.\n        url = unwrapId(url)\n\n        // for CSS, we need to differentiate between normal CSS requests and\n        // imports\n        if (\n          isCSSRequest(url) &&\n          !isDirectRequest(url) &&\n          req.headers.accept?.includes('text/css')\n        ) {\n          url = injectQuery(url, 'direct')\n        }\n\n        // check if we can return 304 early\n        const ifNoneMatch = req.headers['if-none-match']\n        if (\n          ifNoneMatch &&\n          (await moduleGraph.getModuleByUrl(url))?.transformResult?.etag ===\n            ifNoneMatch\n        ) {\n          isDebug && debugCache(`[304] ${prettifyUrl(url, root)}`)\n          res.statusCode = 304\n          return res.end()\n        }\n\n        // resolve, load and transform using the plugin container\n        const result = await transformRequest(url, server, {\n          html: req.headers.accept?.includes('text/html')\n        })\n        if (result) {\n          const type = isDirectCSSRequest(url) ? 'css' : 'js'\n          const isDep =\n            DEP_VERSION_RE.test(url) ||\n            (cacheDirPrefix && url.startsWith(cacheDirPrefix))\n          return send(\n            req,\n            res,\n            result.code,\n            type,\n            result.etag,\n            // allow browser to cache npm deps!\n            isDep ? 'max-age=31536000,immutable' : 'no-cache',\n            result.map\n          )\n        }\n      }\n    } catch (e) {\n      return next(e)\n    }\n\n    next()\n  }\n}\n","import fs from 'fs'\nimport path from 'path'\nimport MagicString from 'magic-string'\nimport { AttributeNode, NodeTypes } from '@vue/compiler-dom'\nimport { Connect } from 'types/connect'\nimport {\n  applyHtmlTransforms,\n  getScriptInfo,\n  IndexHtmlTransformHook,\n  resolveHtmlTransforms,\n  traverseHtml\n} from '../../plugins/html'\nimport { ResolvedConfig, ViteDevServer } from '../..'\nimport { send } from '../send'\nimport { CLIENT_PUBLIC_PATH, FS_PREFIX } from '../../constants'\nimport { cleanUrl, fsPathFromId } from '../../utils'\nimport { assetAttrsConfig } from '../../plugins/html'\n\nexport function createDevHtmlTransformFn(\n  server: ViteDevServer\n): (url: string, html: string, originalUrl: string) => Promise<string> {\n  const [preHooks, postHooks] = resolveHtmlTransforms(server.config.plugins)\n\n  return (url: string, html: string, originalUrl: string): Promise<string> => {\n    return applyHtmlTransforms(html, [...preHooks, devHtmlHook, ...postHooks], {\n      path: url,\n      filename: getHtmlFilename(url, server),\n      server,\n      originalUrl\n    })\n  }\n}\n\nfunction getHtmlFilename(url: string, server: ViteDevServer) {\n  if (url.startsWith(FS_PREFIX)) {\n    return fsPathFromId(url)\n  } else {\n    return path.join(server.config.root, url.slice(1))\n  }\n}\n\nconst startsWithSingleSlashRE = /^\\/(?!\\/)/\nconst processNodeUrl = (\n  node: AttributeNode,\n  s: MagicString,\n  config: ResolvedConfig,\n  htmlPath: string,\n  originalUrl?: string\n) => {\n  const url = node.value?.content || ''\n  if (startsWithSingleSlashRE.test(url)) {\n    // prefix with base\n    s.overwrite(\n      node.value!.loc.start.offset,\n      node.value!.loc.end.offset,\n      `\"${config.base + url.slice(1)}\"`\n    )\n  } else if (\n    url.startsWith('.') &&\n    originalUrl &&\n    originalUrl !== '/' &&\n    htmlPath === '/index.html'\n  ) {\n    // #3230 if some request url (localhost:3000/a/b) return to fallback html, the relative assets\n    // path will add `/a/` prefix, it will caused 404.\n    // rewrite before `./index.js` -> `localhost:3000/a/index.js`.\n    // rewrite after `../index.js` -> `localhost:3000/index.js`.\n    s.overwrite(\n      node.value!.loc.start.offset,\n      node.value!.loc.end.offset,\n      `\"${path.posix.join(\n        path.posix.relative(originalUrl, '/'),\n        url.slice(1)\n      )}\"`\n    )\n  }\n}\nconst devHtmlHook: IndexHtmlTransformHook = async (\n  html,\n  { path: htmlPath, server, originalUrl }\n) => {\n  // TODO: solve this design issue\n  // Optional chain expressions can return undefined by design\n  // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\n  const config = server?.config!\n  const base = config.base || '/'\n\n  const s = new MagicString(html)\n  let scriptModuleIndex = -1\n\n  await traverseHtml(html, htmlPath, (node) => {\n    if (node.type !== NodeTypes.ELEMENT) {\n      return\n    }\n\n    // script tags\n    if (node.tag === 'script') {\n      const { src, isModule } = getScriptInfo(node)\n      if (isModule) {\n        scriptModuleIndex++\n      }\n\n      if (src) {\n        processNodeUrl(src, s, config, htmlPath, originalUrl)\n      } else if (isModule) {\n        // inline js module. convert to src=\"proxy\"\n        s.overwrite(\n          node.loc.start.offset,\n          node.loc.end.offset,\n          `<script type=\"module\" src=\"${\n            config.base + htmlPath.slice(1)\n          }?html-proxy&index=${scriptModuleIndex}.js\"></script>`\n        )\n      }\n    }\n\n    // elements with [href/src] attrs\n    const assetAttrs = assetAttrsConfig[node.tag]\n    if (assetAttrs) {\n      for (const p of node.props) {\n        if (\n          p.type === NodeTypes.ATTRIBUTE &&\n          p.value &&\n          assetAttrs.includes(p.name)\n        ) {\n          processNodeUrl(p, s, config, htmlPath, originalUrl)\n        }\n      }\n    }\n  })\n\n  html = s.toString()\n\n  return {\n    html,\n    tags: [\n      {\n        tag: 'script',\n        attrs: {\n          type: 'module',\n          src: path.posix.join(base, CLIENT_PUBLIC_PATH)\n        },\n        injectTo: 'head-prepend'\n      }\n    ]\n  }\n}\n\nexport function indexHtmlMiddleware(\n  server: ViteDevServer\n): Connect.NextHandleFunction {\n  // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n  return async function viteIndexHtmlMiddleware(req, res, next) {\n    const url = req.url && cleanUrl(req.url)\n    // spa-fallback always redirects to /index.html\n    if (url?.endsWith('.html') && req.headers['sec-fetch-dest'] !== 'script') {\n      const filename = getHtmlFilename(url, server)\n      if (fs.existsSync(filename)) {\n        try {\n          let html = fs.readFileSync(filename, 'utf-8')\n          html = await server.transformIndexHtml(url, html, req.originalUrl)\n          return send(req, res, html, 'html')\n        } catch (e) {\n          return next(e)\n        }\n      }\n    }\n    next()\n  }\n}\n","import { Connect } from 'types/connect'\nimport { createDebugger, prettifyUrl, timeFrom } from '../../utils'\n\nconst logTime = createDebugger('vite:time')\n\nexport function timeMiddleware(root: string): Connect.NextHandleFunction {\n  // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n  return function viteTimeMiddleware(req, res, next) {\n    const start = Date.now()\n    const end = res.end\n    res.end = (...args: any[]) => {\n      logTime(`${timeFrom(start)} ${prettifyUrl(req.url!, root)}`)\n      // @ts-ignore\n      return end.call(res, ...args)\n    }\n    next()\n  }\n}\n","import { extname } from 'path'\nimport { isDirectCSSRequest } from '../plugins/css'\nimport {\n  cleanUrl,\n  normalizePath,\n  removeImportQuery,\n  removeTimestampQuery\n} from '../utils'\nimport { FS_PREFIX } from '../constants'\nimport { TransformResult } from './transformRequest'\nimport { PluginContainer } from './pluginContainer'\nimport { parse as parseUrl } from 'url'\n\nexport class ModuleNode {\n  /**\n   * Public served url path, starts with /\n   */\n  url: string\n  /**\n   * Resolved file system path + query\n   */\n  id: string | null = null\n  file: string | null = null\n  type: 'js' | 'css'\n  importers = new Set<ModuleNode>()\n  importedModules = new Set<ModuleNode>()\n  acceptedHmrDeps = new Set<ModuleNode>()\n  isSelfAccepting = false\n  transformResult: TransformResult | null = null\n  ssrTransformResult: TransformResult | null = null\n  ssrModule: Record<string, any> | null = null\n  lastHMRTimestamp = 0\n\n  constructor(url: string) {\n    this.url = url\n    this.type = isDirectCSSRequest(url) ? 'css' : 'js'\n  }\n}\n\nfunction invalidateSSRModule(mod: ModuleNode, seen: Set<ModuleNode>) {\n  if (seen.has(mod)) {\n    return\n  }\n  seen.add(mod)\n  mod.ssrModule = null\n  mod.importers.forEach((importer) => invalidateSSRModule(importer, seen))\n}\nexport class ModuleGraph {\n  urlToModuleMap = new Map<string, ModuleNode>()\n  idToModuleMap = new Map<string, ModuleNode>()\n  // a single file may corresponds to multiple modules with different queries\n  fileToModulesMap = new Map<string, Set<ModuleNode>>()\n  safeModulesPath = new Set<string>()\n  container: PluginContainer\n\n  constructor(container: PluginContainer) {\n    this.container = container\n  }\n\n  async getModuleByUrl(rawUrl: string): Promise<ModuleNode | undefined> {\n    const [url] = await this.resolveUrl(rawUrl)\n    return this.urlToModuleMap.get(url)\n  }\n\n  getModuleById(id: string): ModuleNode | undefined {\n    return this.idToModuleMap.get(removeTimestampQuery(id))\n  }\n\n  getModulesByFile(file: string): Set<ModuleNode> | undefined {\n    return this.fileToModulesMap.get(file)\n  }\n\n  onFileChange(file: string): void {\n    const mods = this.getModulesByFile(file)\n    if (mods) {\n      const seen = new Set<ModuleNode>()\n      mods.forEach((mod) => {\n        this.invalidateModule(mod, seen)\n      })\n    }\n  }\n\n  invalidateModule(mod: ModuleNode, seen: Set<ModuleNode> = new Set()): void {\n    mod.transformResult = null\n    mod.ssrTransformResult = null\n    invalidateSSRModule(mod, seen)\n  }\n\n  invalidateAll(): void {\n    const seen = new Set<ModuleNode>()\n    this.idToModuleMap.forEach((mod) => {\n      this.invalidateModule(mod, seen)\n    })\n  }\n\n  /**\n   * Update the module graph based on a module's updated imports information\n   * If there are dependencies that no longer have any importers, they are\n   * returned as a Set.\n   */\n  async updateModuleInfo(\n    mod: ModuleNode,\n    importedModules: Set<string | ModuleNode>,\n    acceptedModules: Set<string | ModuleNode>,\n    isSelfAccepting: boolean\n  ): Promise<Set<ModuleNode> | undefined> {\n    mod.isSelfAccepting = isSelfAccepting\n    const prevImports = mod.importedModules\n    const nextImports = (mod.importedModules = new Set())\n    let noLongerImported: Set<ModuleNode> | undefined\n    // update import graph\n    for (const imported of importedModules) {\n      const dep =\n        typeof imported === 'string'\n          ? await this.ensureEntryFromUrl(imported)\n          : imported\n      dep.importers.add(mod)\n      nextImports.add(dep)\n    }\n    // remove the importer from deps that were imported but no longer are.\n    prevImports.forEach((dep) => {\n      if (!nextImports.has(dep)) {\n        dep.importers.delete(mod)\n        if (!dep.importers.size) {\n          // dependency no longer imported\n          ;(noLongerImported || (noLongerImported = new Set())).add(dep)\n        }\n      }\n    })\n    // update accepted hmr deps\n    const deps = (mod.acceptedHmrDeps = new Set())\n    for (const accepted of acceptedModules) {\n      const dep =\n        typeof accepted === 'string'\n          ? await this.ensureEntryFromUrl(accepted)\n          : accepted\n      deps.add(dep)\n    }\n    return noLongerImported\n  }\n\n  async ensureEntryFromUrl(rawUrl: string): Promise<ModuleNode> {\n    const [url, resolvedId] = await this.resolveUrl(rawUrl)\n    let mod = this.urlToModuleMap.get(url)\n    if (!mod) {\n      mod = new ModuleNode(url)\n      this.urlToModuleMap.set(url, mod)\n      mod.id = resolvedId\n      this.idToModuleMap.set(resolvedId, mod)\n      const file = (mod.file = cleanUrl(resolvedId))\n      let fileMappedModules = this.fileToModulesMap.get(file)\n      if (!fileMappedModules) {\n        fileMappedModules = new Set()\n        this.fileToModulesMap.set(file, fileMappedModules)\n      }\n      fileMappedModules.add(mod)\n    }\n    return mod\n  }\n\n  // some deps, like a css file referenced via @import, don't have its own\n  // url because they are inlined into the main css import. But they still\n  // need to be represented in the module graph so that they can trigger\n  // hmr in the importing css file.\n  createFileOnlyEntry(file: string): ModuleNode {\n    file = normalizePath(file)\n    let fileMappedModules = this.fileToModulesMap.get(file)\n    if (!fileMappedModules) {\n      fileMappedModules = new Set()\n      this.fileToModulesMap.set(file, fileMappedModules)\n    }\n\n    const url = `${FS_PREFIX}${file}`\n    for (const m of fileMappedModules) {\n      if (m.url === url || m.id === file) {\n        return m\n      }\n    }\n\n    const mod = new ModuleNode(url)\n    mod.file = file\n    fileMappedModules.add(mod)\n    return mod\n  }\n\n  // for incoming urls, it is important to:\n  // 1. remove the HMR timestamp query (?t=xxxx)\n  // 2. resolve its extension so that urls with or without extension all map to\n  // the same module\n  async resolveUrl(url: string): Promise<[string, string]> {\n    url = removeImportQuery(removeTimestampQuery(url))\n    const resolvedId = (await this.container.resolveId(url))?.id || url\n    const ext = extname(cleanUrl(resolvedId))\n    const { pathname, search, hash } = parseUrl(url)\n    if (ext && !pathname!.endsWith(ext)) {\n      url = pathname + ext + (search || '') + (hash || '')\n    }\n    return [url, resolvedId]\n  }\n}\n","import fs from 'fs'\nimport path from 'path'\nimport chalk from 'chalk'\nimport { createServer, ViteDevServer } from '..'\nimport { createDebugger, normalizePath } from '../utils'\nimport { ModuleNode } from './moduleGraph'\nimport { Update } from 'types/hmrPayload'\nimport { CLIENT_DIR } from '../constants'\nimport { RollupError } from 'rollup'\nimport match from 'minimatch'\nimport { Server } from 'http'\nimport { isCSSRequest } from '../plugins/css'\n\nexport const debugHmr = createDebugger('vite:hmr')\n\nconst normalizedClientDir = normalizePath(CLIENT_DIR)\n\nexport interface HmrOptions {\n  protocol?: string\n  host?: string\n  port?: number\n  clientPort?: number\n  path?: string\n  timeout?: number\n  overlay?: boolean\n  server?: Server\n}\n\nexport interface HmrContext {\n  file: string\n  timestamp: number\n  modules: Array<ModuleNode>\n  read: () => string | Promise<string>\n  server: ViteDevServer\n}\n\nfunction getShortName(file: string, root: string) {\n  return file.startsWith(root + '/') ? path.posix.relative(root, file) : file\n}\n\nexport async function handleHMRUpdate(\n  file: string,\n  server: ViteDevServer\n): Promise<any> {\n  const { ws, config, moduleGraph } = server\n  const shortFile = getShortName(file, config.root)\n\n  const isConfig = file === config.configFile\n  const isConfigDependency = config.configFileDependencies.some(\n    (name) => file === path.resolve(name)\n  )\n  const isEnv = config.inlineConfig.envFile !== false && file.endsWith('.env')\n  if (isConfig || isConfigDependency || isEnv) {\n    // auto restart server\n    debugHmr(`[config change] ${chalk.dim(shortFile)}`)\n    config.logger.info(\n      chalk.green(\n        `${path.relative(process.cwd(), file)} changed, restarting server...`\n      ),\n      { clear: true, timestamp: true }\n    )\n    await restartServer(server)\n    return\n  }\n\n  debugHmr(`[file change] ${chalk.dim(shortFile)}`)\n\n  // (dev only) the client itself cannot be hot updated.\n  if (file.startsWith(normalizedClientDir)) {\n    ws.send({\n      type: 'full-reload',\n      path: '*'\n    })\n    return\n  }\n\n  const mods = moduleGraph.getModulesByFile(file)\n\n  // check if any plugin wants to perform custom HMR handling\n  const timestamp = Date.now()\n  const hmrContext: HmrContext = {\n    file,\n    timestamp,\n    modules: mods ? [...mods] : [],\n    read: () => readModifiedFile(file),\n    server\n  }\n\n  for (const plugin of config.plugins) {\n    if (plugin.handleHotUpdate) {\n      const filteredModules = await plugin.handleHotUpdate(hmrContext)\n      if (filteredModules) {\n        hmrContext.modules = filteredModules\n        break\n      }\n    }\n  }\n\n  if (!hmrContext.modules.length) {\n    // html file cannot be hot updated\n    if (file.endsWith('.html')) {\n      config.logger.info(chalk.green(`page reload `) + chalk.dim(shortFile), {\n        clear: true,\n        timestamp: true\n      })\n      ws.send({\n        type: 'full-reload',\n        path: config.server.middlewareMode\n          ? '*'\n          : '/' + normalizePath(path.relative(config.root, file))\n      })\n    } else {\n      // loaded but not in the module graph, probably not js\n      debugHmr(`[no modules matched] ${chalk.dim(shortFile)}`)\n    }\n    return\n  }\n\n  updateModules(shortFile, hmrContext.modules, timestamp, server)\n}\n\nfunction updateModules(\n  file: string,\n  modules: ModuleNode[],\n  timestamp: number,\n  { config, ws }: ViteDevServer\n) {\n  const updates: Update[] = []\n  const invalidatedModules = new Set<ModuleNode>()\n  let needFullReload = false\n\n  for (const mod of modules) {\n    invalidate(mod, timestamp, invalidatedModules)\n    if (needFullReload) {\n      continue\n    }\n\n    const boundaries = new Set<{\n      boundary: ModuleNode\n      acceptedVia: ModuleNode\n    }>()\n    const hasDeadEnd = propagateUpdate(mod, boundaries)\n    if (hasDeadEnd) {\n      needFullReload = true\n      continue\n    }\n\n    updates.push(\n      ...[...boundaries].map(({ boundary, acceptedVia }) => ({\n        type: `${boundary.type}-update` as Update['type'],\n        timestamp,\n        path: boundary.url,\n        acceptedPath: acceptedVia.url\n      }))\n    )\n  }\n\n  if (needFullReload) {\n    config.logger.info(chalk.green(`page reload `) + chalk.dim(file), {\n      clear: true,\n      timestamp: true\n    })\n    ws.send({\n      type: 'full-reload'\n    })\n  } else {\n    config.logger.info(\n      updates\n        .map(({ path }) => chalk.green(`hmr update `) + chalk.dim(path))\n        .join('\\n'),\n      { clear: true, timestamp: true }\n    )\n    ws.send({\n      type: 'update',\n      updates\n    })\n  }\n}\n\nexport async function handleFileAddUnlink(\n  file: string,\n  server: ViteDevServer,\n  isUnlink = false\n): Promise<void> {\n  const modules = [...(server.moduleGraph.getModulesByFile(file) ?? [])]\n  if (isUnlink && file in server._globImporters) {\n    delete server._globImporters[file]\n  } else {\n    for (const i in server._globImporters) {\n      const { module, importGlobs } = server._globImporters[i]\n      for (const { base, pattern } of importGlobs) {\n        if (match(file, pattern) || match(path.relative(base, file), pattern)) {\n          modules.push(module)\n          // We use `onFileChange` to invalidate `module.file` so that subsequent `ssrLoadModule()`\n          // calls get fresh glob import results with(out) the newly added(/removed) `file`.\n          server.moduleGraph.onFileChange(module.file!)\n          break\n        }\n      }\n    }\n  }\n  if (modules.length > 0) {\n    updateModules(\n      getShortName(file, server.config.root),\n      modules,\n      Date.now(),\n      server\n    )\n  }\n}\n\nfunction propagateUpdate(\n  node: ModuleNode,\n  boundaries: Set<{\n    boundary: ModuleNode\n    acceptedVia: ModuleNode\n  }>,\n  currentChain: ModuleNode[] = [node]\n): boolean /* hasDeadEnd */ {\n  if (node.isSelfAccepting) {\n    boundaries.add({\n      boundary: node,\n      acceptedVia: node\n    })\n\n    // additionally check for CSS importers, since a PostCSS plugin like\n    // Tailwind JIT may register any file as a dependency to a CSS file.\n    for (const importer of node.importers) {\n      if (isCSSRequest(importer.url) && !currentChain.includes(importer)) {\n        propagateUpdate(importer, boundaries, currentChain.concat(importer))\n      }\n    }\n\n    return false\n  }\n\n  if (!node.importers.size) {\n    return true\n  }\n\n  // #3716, #3913\n  // For a non-CSS file, if all of its importers are CSS files (registered via\n  // PostCSS plugins) it should be considered a dead end and force full reload.\n  if (\n    !isCSSRequest(node.url) &&\n    [...node.importers].every((i) => isCSSRequest(i.url))\n  ) {\n    return true\n  }\n\n  for (const importer of node.importers) {\n    const subChain = currentChain.concat(importer)\n    if (importer.acceptedHmrDeps.has(node)) {\n      boundaries.add({\n        boundary: importer,\n        acceptedVia: node\n      })\n      continue\n    }\n\n    if (currentChain.includes(importer)) {\n      // circular deps is considered dead end\n      return true\n    }\n\n    if (propagateUpdate(importer, boundaries, subChain)) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction invalidate(mod: ModuleNode, timestamp: number, seen: Set<ModuleNode>) {\n  if (seen.has(mod)) {\n    return\n  }\n  seen.add(mod)\n  mod.lastHMRTimestamp = timestamp\n  mod.transformResult = null\n  mod.ssrModule = null\n  mod.ssrTransformResult = null\n  mod.importers.forEach((importer) => {\n    if (!importer.acceptedHmrDeps.has(mod)) {\n      invalidate(importer, timestamp, seen)\n    }\n  })\n}\n\nexport function handlePrunedModules(\n  mods: Set<ModuleNode>,\n  { ws }: ViteDevServer\n): void {\n  // update the disposed modules' hmr timestamp\n  // since if it's re-imported, it should re-apply side effects\n  // and without the timestamp the browser will not re-import it!\n  const t = Date.now()\n  mods.forEach((mod) => {\n    mod.lastHMRTimestamp = t\n    debugHmr(`[dispose] ${chalk.dim(mod.file)}`)\n  })\n  ws.send({\n    type: 'prune',\n    paths: [...mods].map((m) => m.url)\n  })\n}\n\nconst enum LexerState {\n  inCall,\n  inSingleQuoteString,\n  inDoubleQuoteString,\n  inTemplateString,\n  inArray\n}\n\n/**\n * Lex import.meta.hot.accept() for accepted deps.\n * Since hot.accept() can only accept string literals or array of string\n * literals, we don't really need a heavy @babel/parse call on the entire source.\n *\n * @returns selfAccepts\n */\nexport function lexAcceptedHmrDeps(\n  code: string,\n  start: number,\n  urls: Set<{ url: string; start: number; end: number }>\n): boolean {\n  let state: LexerState = LexerState.inCall\n  // the state can only be 2 levels deep so no need for a stack\n  let prevState: LexerState = LexerState.inCall\n  let currentDep: string = ''\n\n  function addDep(index: number) {\n    urls.add({\n      url: currentDep,\n      start: index - currentDep.length - 1,\n      end: index + 1\n    })\n    currentDep = ''\n  }\n\n  for (let i = start; i < code.length; i++) {\n    const char = code.charAt(i)\n    switch (state) {\n      case LexerState.inCall:\n      case LexerState.inArray:\n        if (char === `'`) {\n          prevState = state\n          state = LexerState.inSingleQuoteString\n        } else if (char === `\"`) {\n          prevState = state\n          state = LexerState.inDoubleQuoteString\n        } else if (char === '`') {\n          prevState = state\n          state = LexerState.inTemplateString\n        } else if (/\\s/.test(char)) {\n          continue\n        } else {\n          if (state === LexerState.inCall) {\n            if (char === `[`) {\n              state = LexerState.inArray\n            } else {\n              // reaching here means the first arg is neither a string literal\n              // nor an Array literal (direct callback) or there is no arg\n              // in both case this indicates a self-accepting module\n              return true // done\n            }\n          } else if (state === LexerState.inArray) {\n            if (char === `]`) {\n              return false // done\n            } else if (char === ',') {\n              continue\n            } else {\n              error(i)\n            }\n          }\n        }\n        break\n      case LexerState.inSingleQuoteString:\n        if (char === `'`) {\n          addDep(i)\n          if (prevState === LexerState.inCall) {\n            // accept('foo', ...)\n            return false\n          } else {\n            state = prevState\n          }\n        } else {\n          currentDep += char\n        }\n        break\n      case LexerState.inDoubleQuoteString:\n        if (char === `\"`) {\n          addDep(i)\n          if (prevState === LexerState.inCall) {\n            // accept('foo', ...)\n            return false\n          } else {\n            state = prevState\n          }\n        } else {\n          currentDep += char\n        }\n        break\n      case LexerState.inTemplateString:\n        if (char === '`') {\n          addDep(i)\n          if (prevState === LexerState.inCall) {\n            // accept('foo', ...)\n            return false\n          } else {\n            state = prevState\n          }\n        } else if (char === '$' && code.charAt(i + 1) === '{') {\n          error(i)\n        } else {\n          currentDep += char\n        }\n        break\n      default:\n        throw new Error('unknown import.meta.hot lexer state')\n    }\n  }\n  return false\n}\n\nfunction error(pos: number) {\n  const err = new Error(\n    `import.meta.accept() can only accept string literals or an ` +\n      `Array of string literals.`\n  ) as RollupError\n  err.pos = pos\n  throw err\n}\n\n// vitejs/vite#610 when hot-reloading Vue files, we read immediately on file\n// change event and sometimes this can be too early and get an empty buffer.\n// Poll until the file's modified time has changed before reading again.\nasync function readModifiedFile(file: string): Promise<string> {\n  const content = fs.readFileSync(file, 'utf-8')\n  if (!content) {\n    const mtime = fs.statSync(file).mtimeMs\n    await new Promise((r) => {\n      let n = 0\n      const poll = async () => {\n        n++\n        const newMtime = fs.statSync(file).mtimeMs\n        if (newMtime !== mtime || n > 10) {\n          r(0)\n        } else {\n          setTimeout(poll, 10)\n        }\n      }\n      setTimeout(poll, 10)\n    })\n    return fs.readFileSync(file, 'utf-8')\n  } else {\n    return content\n  }\n}\n\nasync function restartServer(server: ViteDevServer) {\n  // @ts-ignore\n  global.__vite_start_time = Date.now()\n  const { port } = server.config.server\n\n  await server.close()\n\n  let newServer = null\n  try {\n    newServer = await createServer(server.config.inlineConfig)\n  } catch (err: any) {\n    server.config.logger.error(err.message, {\n      timestamp: true\n    })\n    return\n  }\n\n  for (const key in newServer) {\n    if (key !== 'app') {\n      // @ts-ignore\n      server[key] = newServer[key]\n    }\n  }\n  if (!server.config.server.middlewareMode) {\n    await server.listen(port, true)\n  } else {\n    server.config.logger.info('server restarted.', { timestamp: true })\n  }\n}\n","/**\n * The following is modified based on source found in\n * https://github.com/facebook/create-react-app\n *\n * MIT Licensed\n * Copyright (c) 2015-present, Facebook, Inc.\n * https://github.com/facebook/create-react-app/blob/master/LICENSE\n *\n */\n\nimport path from 'path'\nimport open from 'open'\nimport execa from 'execa'\nimport chalk from 'chalk'\nimport { execSync } from 'child_process'\nimport { Logger } from '../logger'\n\n// https://github.com/sindresorhus/open#app\nconst OSX_CHROME = 'google chrome'\n\n/**\n * Reads the BROWSER environment variable and decides what to do with it.\n * Returns true if it opened a browser or ran a node.js script, otherwise false.\n */\nexport function openBrowser(\n  url: string,\n  opt: string | true,\n  logger: Logger\n): boolean {\n  // The browser executable to open.\n  // See https://github.com/sindresorhus/open#app for documentation.\n  const browser = typeof opt === 'string' ? opt : process.env.BROWSER || ''\n  if (browser.toLowerCase().endsWith('.js')) {\n    return executeNodeScript(browser, url, logger)\n  } else if (browser.toLowerCase() !== 'none') {\n    return startBrowserProcess(browser, url)\n  }\n  return false\n}\n\nfunction executeNodeScript(scriptPath: string, url: string, logger: Logger) {\n  const extraArgs = process.argv.slice(2)\n  const child = execa('node', [scriptPath, ...extraArgs, url], {\n    stdio: 'inherit'\n  })\n  child.on('close', (code) => {\n    if (code !== 0) {\n      logger.error(\n        chalk.red(\n          `\\nThe script specified as BROWSER environment variable failed.\\n\\n${chalk.cyan(\n            scriptPath\n          )} exited with code ${code}.`\n        ),\n        { error: null }\n      )\n    }\n  })\n  return true\n}\n\nfunction startBrowserProcess(browser: string | undefined, url: string) {\n  // If we're on OS X, the user hasn't specifically\n  // requested a different browser, we can try opening\n  // Chrome with AppleScript. This lets us reuse an\n  // existing tab when possible instead of creating a new one.\n  const shouldTryOpenChromeWithAppleScript =\n    process.platform === 'darwin' && (browser === '' || browser === OSX_CHROME)\n\n  if (shouldTryOpenChromeWithAppleScript) {\n    try {\n      // Try our best to reuse existing tab\n      // on OS X Google Chrome with AppleScript\n      execSync('ps cax | grep \"Google Chrome\"')\n      execSync('osascript openChrome.applescript \"' + encodeURI(url) + '\"', {\n        cwd: path.dirname(require.resolve('vite/bin/openChrome.applescript')),\n        stdio: 'ignore'\n      })\n      return true\n    } catch (err) {\n      // Ignore errors\n    }\n  }\n\n  // Another special case: on OS X, check if BROWSER has been set to \"open\".\n  // In this case, instead of passing the string `open` to `open` function (which won't work),\n  // just ignore it (thus ensuring the intended behavior, i.e. opening the system browser):\n  // https://github.com/facebook/create-react-app/pull/1690#issuecomment-283518768\n  if (process.platform === 'darwin' && browser === 'open') {\n    browser = undefined\n  }\n\n  // Fallback to open\n  // (It will always open new tab)\n  try {\n    const options: open.Options = browser ? { app: { name: browser } } : {}\n    open(url, options).catch(() => {}) // Prevent `unhandledRejection` error.\n    return true\n  } catch (err) {\n    return false\n  }\n}\n","import path from 'path'\nimport { Loader, Plugin, ImportKind } from 'esbuild'\nimport { KNOWN_ASSET_TYPES } from '../constants'\nimport { ResolvedConfig } from '..'\nimport {\n  isRunningWithYarnPnp,\n  flattenId,\n  normalizePath,\n  isExternalUrl,\n  isBuiltin\n} from '../utils'\nimport { browserExternalId } from '../plugins/resolve'\nimport { ExportsData } from '.'\n\nconst externalTypes = [\n  'css',\n  // supported pre-processor types\n  'less',\n  'sass',\n  'scss',\n  'styl',\n  'stylus',\n  'pcss',\n  'postcss',\n  // known SFC types\n  'vue',\n  'svelte',\n  'marko',\n  // JSX/TSX may be configured to be compiled differently from how esbuild\n  // handles it by default, so exclude them as well\n  'jsx',\n  'tsx',\n  ...KNOWN_ASSET_TYPES\n]\n\nexport function esbuildDepPlugin(\n  qualified: Record<string, string>,\n  exportsData: Record<string, ExportsData>,\n  config: ResolvedConfig,\n  ssr?: boolean\n): Plugin {\n  // default resolver which prefers ESM\n  const _resolve = config.createResolver({ asSrc: false })\n\n  // cjs resolver that prefers Node\n  const _resolveRequire = config.createResolver({\n    asSrc: false,\n    isRequire: true\n  })\n\n  const resolve = (\n    id: string,\n    importer: string,\n    kind: ImportKind,\n    resolveDir?: string\n  ): Promise<string | undefined> => {\n    let _importer: string\n    // explicit resolveDir - this is passed only during yarn pnp resolve for\n    // entries\n    if (resolveDir) {\n      _importer = normalizePath(path.join(resolveDir, '*'))\n    } else {\n      // map importer ids to file paths for correct resolution\n      _importer = importer in qualified ? qualified[importer] : importer\n    }\n    const resolver = kind.startsWith('require') ? _resolveRequire : _resolve\n    return resolver(id, _importer, undefined, ssr)\n  }\n\n  return {\n    name: 'vite:dep-pre-bundle',\n    setup(build) {\n      // externalize assets and commonly known non-js file types\n      build.onResolve(\n        {\n          filter: new RegExp(`\\\\.(` + externalTypes.join('|') + `)(\\\\?.*)?$`)\n        },\n        async ({ path: id, importer, kind }) => {\n          const resolved = await resolve(id, importer, kind)\n          if (resolved) {\n            return {\n              path: resolved,\n              external: true\n            }\n          }\n        }\n      )\n\n      function resolveEntry(id: string) {\n        const flatId = flattenId(id)\n        if (flatId in qualified) {\n          return {\n            path: flatId,\n            namespace: 'dep'\n          }\n        }\n      }\n\n      build.onResolve(\n        { filter: /^[\\w@][^:]/ },\n        async ({ path: id, importer, kind }) => {\n          // ensure esbuild uses our resolved entries\n          let entry: { path: string; namespace: string } | undefined\n          // if this is an entry, return entry namespace resolve result\n          if (!importer) {\n            if ((entry = resolveEntry(id))) return entry\n            // check if this is aliased to an entry - also return entry namespace\n            const aliased = await _resolve(id, undefined, true)\n            if (aliased && (entry = resolveEntry(aliased))) {\n              return entry\n            }\n          }\n\n          // use vite's own resolver\n          const resolved = await resolve(id, importer, kind)\n          if (resolved) {\n            if (resolved.startsWith(browserExternalId)) {\n              return {\n                path: id,\n                namespace: 'browser-external'\n              }\n            }\n            if (isExternalUrl(resolved) || (ssr && isBuiltin(id))) {\n              return {\n                path: resolved,\n                external: true\n              }\n            }\n            return {\n              path: path.resolve(resolved)\n            }\n          }\n        }\n      )\n\n      // For entry files, we'll read it ourselves and construct a proxy module\n      // to retain the entry's raw id instead of file path so that esbuild\n      // outputs desired output file structure.\n      // It is necessary to do the re-exporting to separate the virtual proxy\n      // module from the actual module since the actual module may get\n      // referenced via relative imports - if we don't separate the proxy and\n      // the actual module, esbuild will create duplicated copies of the same\n      // module!\n      const root = path.resolve(config.root)\n      build.onLoad({ filter: /.*/, namespace: 'dep' }, ({ path: id }) => {\n        const entryFile = qualified[id]\n\n        let relativePath = normalizePath(path.relative(root, entryFile))\n        if (\n          !relativePath.startsWith('./') &&\n          !relativePath.startsWith('../') &&\n          relativePath !== '.'\n        ) {\n          relativePath = `./${relativePath}`\n        }\n\n        let contents = ''\n        const data = exportsData[id]\n        const [imports, exports] = data\n        if (!imports.length && !exports.length) {\n          // cjs\n          contents += `export default require(\"${relativePath}\");`\n        } else {\n          if (exports.includes('default')) {\n            contents += `import d from \"${relativePath}\";export default d;`\n          }\n          if (\n            data.hasReExports ||\n            exports.length > 1 ||\n            exports[0] !== 'default'\n          ) {\n            contents += `\\nexport * from \"${relativePath}\"`\n          }\n        }\n\n        let ext = path.extname(entryFile).slice(1)\n        if (ext === 'mjs') ext = 'js'\n        return {\n          loader: ext as Loader,\n          contents,\n          resolveDir: root\n        }\n      })\n\n      build.onLoad(\n        { filter: /.*/, namespace: 'browser-external' },\n        ({ path: id }) => {\n          return {\n            contents:\n              `export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"${id}\" has been externalized for ` +\n              `browser compatibility and cannot be accessed in client code.')\n  }\n})`\n          }\n        }\n      )\n\n      // yarn 2 pnp compat\n      if (isRunningWithYarnPnp) {\n        build.onResolve(\n          { filter: /.*/ },\n          async ({ path, importer, kind, resolveDir }) => ({\n            // pass along resolveDir for entries\n            path: await resolve(path, importer, kind, resolveDir)\n          })\n        )\n        build.onLoad({ filter: /.*/ }, async (args) => ({\n          contents: await require('fs').promises.readFile(args.path),\n          loader: 'default'\n        }))\n      }\n    }\n  }\n}\n","import fs from 'fs'\nimport path from 'path'\nimport chalk from 'chalk'\nimport { createHash } from 'crypto'\nimport { build, BuildOptions as EsbuildBuildOptions } from 'esbuild'\nimport { ResolvedConfig } from '../config'\nimport {\n  createDebugger,\n  emptyDir,\n  lookupFile,\n  normalizePath,\n  writeFile,\n  flattenId,\n  normalizeId\n} from '../utils'\nimport { esbuildDepPlugin } from './esbuildDepPlugin'\nimport { ImportSpecifier, init, parse } from 'es-module-lexer'\nimport { scanImports } from './scan'\nimport { transformWithEsbuild } from '../plugins/esbuild'\n\nconst debug = createDebugger('vite:deps')\n\nexport type ExportsData = [ImportSpecifier[], string[]] & {\n  // es-module-lexer has a facade detection but isn't always accurate for our\n  // use case when the module has default export\n  hasReExports?: true\n}\n\nexport interface DepOptimizationOptions {\n  /**\n   * By default, Vite will crawl your index.html to detect dependencies that\n   * need to be pre-bundled. If build.rollupOptions.input is specified, Vite\n   * will crawl those entry points instead.\n   *\n   * If neither of these fit your needs, you can specify custom entries using\n   * this option - the value should be a fast-glob pattern or array of patterns\n   * (https://github.com/mrmlnc/fast-glob#basic-syntax) that are relative from\n   * vite project root. This will overwrite default entries inference.\n   */\n  entries?: string | string[]\n  /**\n   * Force optimize listed dependencies (must be resolvable import paths,\n   * cannot be globs).\n   */\n  include?: string[]\n  /**\n   * Do not optimize these dependencies (must be resolvable import paths,\n   * cannot be globs).\n   */\n  exclude?: string[]\n  /**\n   * Options to pass to esbuild during the dep scanning and optimization\n   *\n   * Certain options are omitted since changing them would not be compatible\n   * with Vite's dep optimization.\n   *\n   * - `external` is also omitted, use Vite's `optimizeDeps.exclude` option\n   * - `plugins` are merged with Vite's dep plugin\n   * - `keepNames` takes precedence over the deprecated `optimizeDeps.keepNames`\n   *\n   * https://esbuild.github.io/api\n   */\n  esbuildOptions?: Omit<\n    EsbuildBuildOptions,\n    | 'bundle'\n    | 'entryPoints'\n    | 'external'\n    | 'write'\n    | 'watch'\n    | 'outdir'\n    | 'outfile'\n    | 'outbase'\n    | 'outExtension'\n    | 'metafile'\n  >\n  /**\n   * @deprecated use `esbuildOptions.keepNames`\n   */\n  keepNames?: boolean\n}\n\nexport interface DepOptimizationMetadata {\n  /**\n   * The main hash is determined by user config and dependency lockfiles.\n   * This is checked on server startup to avoid unnecessary re-bundles.\n   */\n  hash: string\n  /**\n   * The browser hash is determined by the main hash plus additional dependencies\n   * discovered at runtime. This is used to invalidate browser requests to\n   * optimized deps.\n   */\n  browserHash: string\n  optimized: Record<\n    string,\n    {\n      file: string\n      src: string\n      needsInterop: boolean\n    }\n  >\n}\n\nexport async function optimizeDeps(\n  config: ResolvedConfig,\n  force = config.server.force,\n  asCommand = false,\n  newDeps?: Record<string, string>, // missing imports encountered after server has started\n  ssr?: boolean\n): Promise<DepOptimizationMetadata | null> {\n  config = {\n    ...config,\n    command: 'build'\n  }\n\n  const { root, logger, cacheDir } = config\n  const log = asCommand ? logger.info : debug\n\n  if (!cacheDir) {\n    log(`No cache directory. Skipping.`)\n    return null\n  }\n\n  const dataPath = path.join(cacheDir, '_metadata.json')\n  const mainHash = getDepHash(root, config)\n  const data: DepOptimizationMetadata = {\n    hash: mainHash,\n    browserHash: mainHash,\n    optimized: {}\n  }\n\n  if (!force) {\n    let prevData: DepOptimizationMetadata | undefined\n    try {\n      prevData = JSON.parse(fs.readFileSync(dataPath, 'utf-8'))\n    } catch (e) {}\n    // hash is consistent, no need to re-bundle\n    if (prevData && prevData.hash === data.hash) {\n      log('Hash is consistent. Skipping. Use --force to override.')\n      return prevData\n    }\n  }\n\n  if (fs.existsSync(cacheDir)) {\n    emptyDir(cacheDir)\n  } else {\n    fs.mkdirSync(cacheDir, { recursive: true })\n  }\n  // a hint for Node.js\n  // all files in the cache directory should be recognized as ES modules\n  writeFile(\n    path.resolve(cacheDir, 'package.json'),\n    JSON.stringify({ type: 'module' })\n  )\n\n  let deps: Record<string, string>, missing: Record<string, string>\n  if (!newDeps) {\n    ;({ deps, missing } = await scanImports(config))\n  } else {\n    deps = newDeps\n    missing = {}\n  }\n\n  // update browser hash\n  data.browserHash = createHash('sha256')\n    .update(data.hash + JSON.stringify(deps))\n    .digest('hex')\n    .substr(0, 8)\n\n  const missingIds = Object.keys(missing)\n  if (missingIds.length) {\n    throw new Error(\n      `The following dependencies are imported but could not be resolved:\\n\\n  ${missingIds\n        .map(\n          (id) =>\n            `${chalk.cyan(id)} ${chalk.white.dim(\n              `(imported by ${missing[id]})`\n            )}`\n        )\n        .join(`\\n  `)}\\n\\nAre they installed?`\n    )\n  }\n\n  const include = config.optimizeDeps?.include\n  if (include) {\n    const resolve = config.createResolver({ asSrc: false })\n    for (const id of include) {\n      // normalize 'foo   >bar` as 'foo > bar' to prevent same id being added\n      // and for pretty printing\n      const normalizedId = normalizeId(id)\n      if (!deps[normalizedId]) {\n        const entry = await resolve(id)\n        if (entry) {\n          deps[normalizedId] = entry\n        } else {\n          throw new Error(\n            `Failed to resolve force included dependency: ${chalk.cyan(id)}`\n          )\n        }\n      }\n    }\n  }\n\n  const qualifiedIds = Object.keys(deps)\n\n  if (!qualifiedIds.length) {\n    writeFile(dataPath, JSON.stringify(data, null, 2))\n    log(`No dependencies to bundle. Skipping.\\n\\n\\n`)\n    return data\n  }\n\n  const total = qualifiedIds.length\n  const maxListed = 5\n  const listed = Math.min(total, maxListed)\n  const extra = Math.max(0, total - maxListed)\n  const depsString = chalk.yellow(\n    qualifiedIds.slice(0, listed).join(`\\n  `) +\n      (extra > 0 ? `\\n  (...and ${extra} more)` : ``)\n  )\n  if (!asCommand) {\n    if (!newDeps) {\n      // This is auto run on server start - let the user know that we are\n      // pre-optimizing deps\n      logger.info(\n        chalk.greenBright(`Pre-bundling dependencies:\\n  ${depsString}`)\n      )\n      logger.info(\n        `(this will be run only when your dependencies or config have changed)`\n      )\n    }\n  } else {\n    logger.info(chalk.greenBright(`Optimizing dependencies:\\n  ${depsString}`))\n  }\n\n  // esbuild generates nested directory output with lowest common ancestor base\n  // this is unpredictable and makes it difficult to analyze entry / output\n  // mapping. So what we do here is:\n  // 1. flatten all ids to eliminate slash\n  // 2. in the plugin, read the entry ourselves as virtual files to retain the\n  //    path.\n  const flatIdDeps: Record<string, string> = {}\n  const idToExports: Record<string, ExportsData> = {}\n  const flatIdToExports: Record<string, ExportsData> = {}\n\n  const { plugins = [], ...esbuildOptions } =\n    config.optimizeDeps?.esbuildOptions ?? {}\n\n  await init\n  for (const id in deps) {\n    const flatId = flattenId(id)\n    const filePath = (flatIdDeps[flatId] = deps[id])\n    const entryContent = fs.readFileSync(filePath, 'utf-8')\n    let exportsData: ExportsData\n    try {\n      exportsData = parse(entryContent) as ExportsData\n    } catch {\n      debug(\n        `Unable to parse dependency: ${id}. Trying again with a JSX transform.`\n      )\n      const transformed = await transformWithEsbuild(entryContent, filePath, {\n        loader: 'jsx'\n      })\n      // Ensure that optimization won't fail by defaulting '.js' to the JSX parser.\n      // This is useful for packages such as Gatsby.\n      esbuildOptions.loader = {\n        '.js': 'jsx',\n        ...esbuildOptions.loader\n      }\n      exportsData = parse(transformed.code) as ExportsData\n    }\n    for (const { ss, se } of exportsData[0]) {\n      const exp = entryContent.slice(ss, se)\n      if (/export\\s+\\*\\s+from/.test(exp)) {\n        exportsData.hasReExports = true\n      }\n    }\n    idToExports[id] = exportsData\n    flatIdToExports[flatId] = exportsData\n  }\n\n  const define: Record<string, string> = {\n    'process.env.NODE_ENV': JSON.stringify(config.mode)\n  }\n  for (const key in config.define) {\n    const value = config.define[key]\n    define[key] = typeof value === 'string' ? value : JSON.stringify(value)\n  }\n\n  const start = Date.now()\n\n  const result = await build({\n    absWorkingDir: process.cwd(),\n    entryPoints: Object.keys(flatIdDeps),\n    bundle: true,\n    format: 'esm',\n    external: config.optimizeDeps?.exclude,\n    logLevel: 'error',\n    splitting: true,\n    sourcemap: true,\n    outdir: cacheDir,\n    treeShaking: 'ignore-annotations',\n    metafile: true,\n    define,\n    plugins: [\n      ...plugins,\n      esbuildDepPlugin(flatIdDeps, flatIdToExports, config, ssr)\n    ],\n    ...esbuildOptions\n  })\n\n  const meta = result.metafile!\n\n  // the paths in `meta.outputs` are relative to `process.cwd()`\n  const cacheDirOutputPath = path.relative(process.cwd(), cacheDir)\n\n  for (const id in deps) {\n    const entry = deps[id]\n    data.optimized[id] = {\n      file: normalizePath(path.resolve(cacheDir, flattenId(id) + '.js')),\n      src: entry,\n      needsInterop: needsInterop(\n        id,\n        idToExports[id],\n        meta.outputs,\n        cacheDirOutputPath\n      )\n    }\n  }\n\n  writeFile(dataPath, JSON.stringify(data, null, 2))\n\n  debug(`deps bundled in ${Date.now() - start}ms`)\n  return data\n}\n\n// https://github.com/vitejs/vite/issues/1724#issuecomment-767619642\n// a list of modules that pretends to be ESM but still uses `require`.\n// this causes esbuild to wrap them as CJS even when its entry appears to be ESM.\nconst KNOWN_INTEROP_IDS = new Set(['moment'])\n\nfunction needsInterop(\n  id: string,\n  exportsData: ExportsData,\n  outputs: Record<string, any>,\n  cacheDirOutputPath: string\n): boolean {\n  if (KNOWN_INTEROP_IDS.has(id)) {\n    return true\n  }\n  const [imports, exports] = exportsData\n  // entry has no ESM syntax - likely CJS or UMD\n  if (!exports.length && !imports.length) {\n    return true\n  }\n\n  // if a peer dependency used require() on a ESM dependency, esbuild turns the\n  // ESM dependency's entry chunk into a single default export... detect\n  // such cases by checking exports mismatch, and force interop.\n  const flatId = flattenId(id) + '.js'\n  let generatedExports: string[] | undefined\n  for (const output in outputs) {\n    if (\n      normalizePath(output) ===\n      normalizePath(path.join(cacheDirOutputPath, flatId))\n    ) {\n      generatedExports = outputs[output].exports\n      break\n    }\n  }\n\n  if (\n    !generatedExports ||\n    (isSingleDefaultExport(generatedExports) && !isSingleDefaultExport(exports))\n  ) {\n    return true\n  }\n  return false\n}\n\nfunction isSingleDefaultExport(exports: string[]) {\n  return exports.length === 1 && exports[0] === 'default'\n}\n\nconst lockfileFormats = ['package-lock.json', 'yarn.lock', 'pnpm-lock.yaml']\n\nfunction getDepHash(root: string, config: ResolvedConfig): string {\n  let content = lookupFile(root, lockfileFormats) || ''\n  // also take config into account\n  // only a subset of config options that can affect dep optimization\n  content += JSON.stringify(\n    {\n      mode: config.mode,\n      root: config.root,\n      resolve: config.resolve,\n      assetsInclude: config.assetsInclude,\n      plugins: config.plugins.map((p) => p.name),\n      optimizeDeps: {\n        include: config.optimizeDeps?.include,\n        exclude: config.optimizeDeps?.exclude\n      }\n    },\n    (_, value) => {\n      if (typeof value === 'function' || value instanceof RegExp) {\n        return value.toString()\n      }\n      return value\n    }\n  )\n  return createHash('sha256').update(content).digest('hex').substr(0, 8)\n}\n","import { SourceMapConsumer, RawSourceMap } from 'source-map'\nimport { ModuleGraph } from '../server/moduleGraph'\n\nlet offset: number\ntry {\n  new Function('throw new Error(1)')()\n} catch (e) {\n  // in Node 12, stack traces account for the function wrapper.\n  // in Node 13 and later, the function wrapper adds two lines,\n  // which must be subtracted to generate a valid mapping\n  const match = /:(\\d+):\\d+\\)$/.exec(e.stack.split('\\n')[1])\n  offset = match ? +match[1] - 1 : 0\n}\n\nexport function ssrRewriteStacktrace(\n  stack: string,\n  moduleGraph: ModuleGraph\n): string {\n  return stack\n    .split('\\n')\n    .map((line) => {\n      return line.replace(\n        /^ {4}at (?:(.+?)\\s+\\()?(?:(.+?):(\\d+)(?::(\\d+))?)\\)?/,\n        (input, varName, url, line, column) => {\n          if (!url) return input\n\n          const mod = moduleGraph.urlToModuleMap.get(url)\n          const rawSourceMap = mod?.ssrTransformResult?.map\n\n          if (!rawSourceMap) {\n            return input\n          }\n\n          const consumer = new SourceMapConsumer(\n            rawSourceMap as unknown as RawSourceMap\n          )\n\n          const pos = consumer.originalPositionFor({\n            line: Number(line) - offset,\n            column: Number(column),\n            bias: SourceMapConsumer.LEAST_UPPER_BOUND\n          })\n\n          if (!pos.source) {\n            return input\n          }\n\n          const source = `${pos.source}:${pos.line || 0}:${pos.column || 0}`\n          if (!varName || varName === 'eval') {\n            return `    at ${source}`\n          } else {\n            return `    at ${varName} (${source})`\n          }\n        }\n      )\n    })\n    .join('\\n')\n}\n\nexport function rebindErrorStacktrace(e: Error, stacktrace: string): void {\n  const { configurable, writable } = Object.getOwnPropertyDescriptor(\n    e,\n    'stack'\n  )!\n  if (configurable) {\n    Object.defineProperty(e, 'stack', {\n      value: stacktrace,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    })\n  } else if (writable) {\n    e.stack = stacktrace\n  }\n}\n","import fs from 'fs'\nimport path from 'path'\nimport { ViteDevServer } from '..'\nimport { cleanUrl, resolveFrom, unwrapId } from '../utils'\nimport { rebindErrorStacktrace, ssrRewriteStacktrace } from './ssrStacktrace'\nimport {\n  ssrExportAllKey,\n  ssrModuleExportsKey,\n  ssrImportKey,\n  ssrImportMetaKey,\n  ssrDynamicImportKey\n} from './ssrTransform'\nimport { transformRequest } from '../server/transformRequest'\n\ninterface SSRContext {\n  global: NodeJS.Global\n}\n\ntype SSRModule = Record<string, any>\n\nconst pendingModules = new Map<string, Promise<SSRModule>>()\nconst pendingImports = new Map<string, string[]>()\n\nexport async function ssrLoadModule(\n  url: string,\n  server: ViteDevServer,\n  context: SSRContext = { global },\n  urlStack: string[] = []\n): Promise<SSRModule> {\n  url = unwrapId(url)\n\n  // when we instantiate multiple dependency modules in parallel, they may\n  // point to shared modules. We need to avoid duplicate instantiation attempts\n  // by register every module as pending synchronously so that all subsequent\n  // request to that module are simply waiting on the same promise.\n  const pending = pendingModules.get(url)\n  if (pending) {\n    return pending\n  }\n\n  const modulePromise = instantiateModule(url, server, context, urlStack)\n  pendingModules.set(url, modulePromise)\n  modulePromise\n    .catch(() => {\n      pendingImports.delete(url)\n    })\n    .finally(() => {\n      pendingModules.delete(url)\n    })\n  return modulePromise\n}\n\nasync function instantiateModule(\n  url: string,\n  server: ViteDevServer,\n  context: SSRContext = { global },\n  urlStack: string[] = []\n): Promise<SSRModule> {\n  const { moduleGraph } = server\n  const mod = await moduleGraph.ensureEntryFromUrl(url)\n\n  if (mod.ssrModule) {\n    return mod.ssrModule\n  }\n\n  const result =\n    mod.ssrTransformResult ||\n    (await transformRequest(url, server, { ssr: true }))\n  if (!result) {\n    // TODO more info? is this even necessary?\n    throw new Error(`failed to load module for ssr: ${url}`)\n  }\n\n  const ssrModule = {\n    [Symbol.toStringTag]: 'Module'\n  }\n  Object.defineProperty(ssrModule, '__esModule', { value: true })\n\n  // Tolerate circular imports by ensuring the module can be\n  // referenced before it's been instantiated.\n  mod.ssrModule = ssrModule\n\n  const ssrImportMeta = { url }\n\n  urlStack = urlStack.concat(url)\n  const isCircular = (url: string) => urlStack.includes(url)\n\n  // Since dynamic imports can happen in parallel, we need to\n  // account for multiple pending deps and duplicate imports.\n  const pendingDeps: string[] = []\n\n  const ssrImport = async (dep: string) => {\n    if (dep[0] !== '.' && dep[0] !== '/') {\n      return nodeRequire(\n        dep,\n        mod.file,\n        server.config.root,\n        !!server.config.resolve.preserveSymlinks\n      )\n    }\n    dep = unwrapId(dep)\n    if (!isCircular(dep) && !pendingImports.get(dep)?.some(isCircular)) {\n      pendingDeps.push(dep)\n      if (pendingDeps.length === 1) {\n        pendingImports.set(url, pendingDeps)\n      }\n      await ssrLoadModule(dep, server, context, urlStack)\n      if (pendingDeps.length === 1) {\n        pendingImports.delete(url)\n      } else {\n        pendingDeps.splice(pendingDeps.indexOf(dep), 1)\n      }\n    }\n    return moduleGraph.urlToModuleMap.get(dep)?.ssrModule\n  }\n\n  const ssrDynamicImport = (dep: string) => {\n    // #3087 dynamic import vars is ignored at rewrite import path,\n    // so here need process relative path\n    if (dep[0] === '.') {\n      dep = path.posix.resolve(path.dirname(url), dep)\n    }\n    return ssrImport(dep)\n  }\n\n  function ssrExportAll(sourceModule: any) {\n    for (const key in sourceModule) {\n      if (key !== 'default') {\n        Object.defineProperty(ssrModule, key, {\n          enumerable: true,\n          configurable: true,\n          get() {\n            return sourceModule[key]\n          }\n        })\n      }\n    }\n  }\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    const AsyncFunction = async function () {}.constructor as typeof Function\n    const initModule = new AsyncFunction(\n      `global`,\n      ssrModuleExportsKey,\n      ssrImportMetaKey,\n      ssrImportKey,\n      ssrDynamicImportKey,\n      ssrExportAllKey,\n      result.code + `\\n//# sourceURL=${mod.url}`\n    )\n    await initModule(\n      context.global,\n      ssrModule,\n      ssrImportMeta,\n      ssrImport,\n      ssrDynamicImport,\n      ssrExportAll\n    )\n  } catch (e) {\n    const stacktrace = ssrRewriteStacktrace(e.stack, moduleGraph)\n    rebindErrorStacktrace(e, stacktrace)\n    server.config.logger.error(\n      `Error when evaluating SSR module ${url}:\\n${stacktrace}`,\n      {\n        timestamp: true,\n        clear: server.config.clearScreen,\n        error: e\n      }\n    )\n    throw e\n  }\n\n  return Object.freeze(ssrModule)\n}\n\nfunction nodeRequire(\n  id: string,\n  importer: string | null,\n  root: string,\n  preserveSymlinks: boolean\n) {\n  const mod = require(resolve(id, importer, root, preserveSymlinks))\n  const defaultExport = mod.__esModule ? mod.default : mod\n  // rollup-style default import interop for cjs\n  return new Proxy(mod, {\n    get(mod, prop) {\n      if (prop === 'default') return defaultExport\n      return mod[prop]\n    }\n  })\n}\n\nconst resolveCache = new Map<string, string>()\n\nfunction resolve(\n  id: string,\n  importer: string | null,\n  root: string,\n  preserveSymlinks: boolean\n) {\n  const key = id + importer + root\n  const cached = resolveCache.get(key)\n  if (cached) {\n    return cached\n  }\n  const resolveDir =\n    importer && fs.existsSync(cleanUrl(importer))\n      ? path.dirname(importer)\n      : root\n  const resolved = resolveFrom(id, resolveDir, preserveSymlinks, true)\n  resolveCache.set(key, resolved)\n  return resolved\n}\n","import chalk from 'chalk'\nimport { optimizeDeps } from '.'\nimport { ViteDevServer } from '..'\nimport { resolveSSRExternal } from '../ssr/ssrExternal'\n\n/**\n * The amount to wait for requests to register newly found dependencies before triggering\n * a re-bundle + page reload\n */\nconst debounceMs = 100\n\nexport function createMissingImporterRegisterFn(\n  server: ViteDevServer\n): (id: string, resolved: string, ssr?: boolean) => void {\n  const { logger } = server.config\n  let knownOptimized = server._optimizeDepsMetadata!.optimized\n  let currentMissing: Record<string, string> = {}\n  let handle: NodeJS.Timeout\n\n  let pendingResolve: (() => void) | null = null\n\n  async function rerun(ssr: boolean | undefined) {\n    const newDeps = currentMissing\n    currentMissing = {}\n\n    logger.info(\n      chalk.yellow(\n        `new dependencies found: ${Object.keys(newDeps).join(\n          ', '\n        )}, updating...`\n      ),\n      {\n        timestamp: true\n      }\n    )\n\n    for (const id in knownOptimized) {\n      newDeps[id] = knownOptimized[id].src\n    }\n\n    try {\n      // Nullify previous metadata so that the resolver won't\n      // resolve to optimized files during the optimizer re-run\n      server._isRunningOptimizer = true\n      server._optimizeDepsMetadata = null\n\n      const newData = (server._optimizeDepsMetadata = await optimizeDeps(\n        server.config,\n        true,\n        false,\n        newDeps,\n        ssr\n      ))\n      knownOptimized = newData!.optimized\n\n      // update ssr externals\n      server._ssrExternals = resolveSSRExternal(\n        server.config,\n        Object.keys(knownOptimized)\n      )\n\n      logger.info(\n        chalk.greenBright(`✨ dependencies updated, reloading page...`),\n        { timestamp: true }\n      )\n    } catch (e) {\n      logger.error(\n        chalk.red(`error while updating dependencies:\\n${e.stack}`),\n        { timestamp: true, error: e }\n      )\n    } finally {\n      server._isRunningOptimizer = false\n      pendingResolve && pendingResolve()\n      server._pendingReload = pendingResolve = null\n    }\n\n    // Cached transform results have stale imports (resolved to\n    // old locations) so they need to be invalidated before the page is\n    // reloaded.\n    server.moduleGraph.invalidateAll()\n\n    server.ws.send({\n      type: 'full-reload',\n      path: '*'\n    })\n  }\n\n  return function registerMissingImport(\n    id: string,\n    resolved: string,\n    ssr?: boolean\n  ) {\n    if (!knownOptimized[id]) {\n      currentMissing[id] = resolved\n      if (handle) clearTimeout(handle)\n      handle = setTimeout(() => rerun(ssr), debounceMs)\n      server._pendingReload = new Promise((r) => {\n        pendingResolve = r\n      })\n    }\n  }\n}\n","import fs from 'fs'\nimport { dirname } from 'path'\nimport { join } from 'path'\n\n// https://github.com/vitejs/vite/issues/2820#issuecomment-812495079\nconst ROOT_FILES = [\n  // '.git',\n\n  // https://pnpm.js.org/workspaces/\n  'pnpm-workspace.yaml'\n\n  // https://rushjs.io/pages/advanced/config_files/\n  // 'rush.json',\n\n  // https://nx.dev/latest/react/getting-started/nx-setup\n  // 'workspace.json',\n  // 'nx.json'\n]\n\n// npm: https://docs.npmjs.com/cli/v7/using-npm/workspaces#installing-workspaces\n// yarn: https://classic.yarnpkg.com/en/docs/workspaces/#toc-how-to-use-it\nfunction hasWorkspacePackageJSON(root: string): boolean {\n  const path = join(root, 'package.json')\n  try {\n    fs.accessSync(path, fs.constants.R_OK)\n  } catch {\n    return false\n  }\n  const content = JSON.parse(fs.readFileSync(path, 'utf-8')) || {}\n  return !!content.workspaces\n}\n\nfunction hasRootFile(root: string): boolean {\n  return ROOT_FILES.some((file) => fs.existsSync(join(root, file)))\n}\n\nfunction hasPackageJSON(root: string) {\n  const path = join(root, 'package.json')\n  return fs.existsSync(path)\n}\n\n/**\n * Search up for the nearest `package.json`\n */\nexport function searchForPackageRoot(current: string, root = current): string {\n  if (hasPackageJSON(current)) return current\n\n  const dir = dirname(current)\n  // reach the fs root\n  if (!dir || dir === current) return root\n\n  return searchForPackageRoot(dir, root)\n}\n\n/**\n * Search up for the nearest workspace root\n */\nexport function searchForWorkspaceRoot(\n  current: string,\n  root = searchForPackageRoot(current)\n): string {\n  if (hasRootFile(current)) return current\n  if (hasWorkspacePackageJSON(current)) return current\n\n  const dir = dirname(current)\n  // reach the fs root\n  if (!dir || dir === current) return root\n\n  return searchForWorkspaceRoot(dir, root)\n}\n","import fs from 'fs'\nimport path from 'path'\nimport * as net from 'net'\nimport * as http from 'http'\nimport * as https from 'https'\nimport connect from 'connect'\nimport corsMiddleware from 'cors'\nimport chalk from 'chalk'\nimport { AddressInfo } from 'net'\nimport chokidar from 'chokidar'\nimport { resolveHttpsConfig, resolveHttpServer, httpServerStart } from './http'\nimport { resolveConfig, InlineConfig, ResolvedConfig } from '../config'\nimport { createPluginContainer, PluginContainer } from './pluginContainer'\nimport { FSWatcher, WatchOptions } from 'types/chokidar'\nimport { createWebSocketServer, WebSocketServer } from './ws'\nimport { baseMiddleware } from './middlewares/base'\nimport { proxyMiddleware, ProxyOptions } from './middlewares/proxy'\nimport { spaFallbackMiddleware } from './middlewares/spaFallback'\nimport { transformMiddleware } from './middlewares/transform'\nimport {\n  createDevHtmlTransformFn,\n  indexHtmlMiddleware\n} from './middlewares/indexHtml'\nimport {\n  serveRawFsMiddleware,\n  servePublicMiddleware,\n  serveStaticMiddleware\n} from './middlewares/static'\nimport { timeMiddleware } from './middlewares/time'\nimport { ModuleGraph, ModuleNode } from './moduleGraph'\nimport { Connect } from 'types/connect'\nimport { ensureLeadingSlash, normalizePath } from '../utils'\nimport { errorMiddleware, prepareError } from './middlewares/error'\nimport { handleHMRUpdate, HmrOptions, handleFileAddUnlink } from './hmr'\nimport { openBrowser } from './openBrowser'\nimport launchEditorMiddleware from 'launch-editor-middleware'\nimport { TransformResult } from 'rollup'\nimport { TransformOptions, transformRequest } from './transformRequest'\nimport {\n  transformWithEsbuild,\n  ESBuildTransformResult\n} from '../plugins/esbuild'\nimport { TransformOptions as EsbuildTransformOptions } from 'esbuild'\nimport { DepOptimizationMetadata, optimizeDeps } from '../optimizer'\nimport { ssrLoadModule } from '../ssr/ssrModuleLoader'\nimport { resolveSSRExternal } from '../ssr/ssrExternal'\nimport {\n  rebindErrorStacktrace,\n  ssrRewriteStacktrace\n} from '../ssr/ssrStacktrace'\nimport { createMissingImporterRegisterFn } from '../optimizer/registerMissing'\nimport { printServerUrls } from '../logger'\nimport { resolveHostname } from '../utils'\nimport { searchForWorkspaceRoot } from './searchRoot'\nimport { CLIENT_DIR } from '../constants'\n\nexport interface ServerOptions {\n  host?: string | boolean\n  port?: number\n  /**\n   * Enable TLS + HTTP/2.\n   * Note: this downgrades to TLS only when the proxy option is also used.\n   */\n  https?: boolean | https.ServerOptions\n  /**\n   * Open browser window on startup\n   */\n  open?: boolean | string\n  /**\n   * Force dep pre-optimization regardless of whether deps have changed.\n   */\n  force?: boolean\n  /**\n   * Configure HMR-specific options (port, host, path & protocol)\n   */\n  hmr?: HmrOptions | boolean\n  /**\n   * chokidar watch options\n   * https://github.com/paulmillr/chokidar#api\n   */\n  watch?: WatchOptions\n  /**\n   * Configure custom proxy rules for the dev server. Expects an object\n   * of `{ key: options }` pairs.\n   * Uses [`http-proxy`](https://github.com/http-party/node-http-proxy).\n   * Full options [here](https://github.com/http-party/node-http-proxy#options).\n   *\n   * Example `vite.config.js`:\n   * ``` js\n   * module.exports = {\n   *   proxy: {\n   *     // string shorthand\n   *     '/foo': 'http://localhost:4567/foo',\n   *     // with options\n   *     '/api': {\n   *       target: 'http://jsonplaceholder.typicode.com',\n   *       changeOrigin: true,\n   *       rewrite: path => path.replace(/^\\/api/, '')\n   *     }\n   *   }\n   * }\n   * ```\n   */\n  proxy?: Record<string, string | ProxyOptions>\n  /**\n   * Configure CORS for the dev server.\n   * Uses https://github.com/expressjs/cors.\n   * Set to `true` to allow all methods from any origin, or configure separately\n   * using an object.\n   */\n  cors?: CorsOptions | boolean\n  /**\n   * If enabled, vite will exit if specified port is already in use\n   */\n  strictPort?: boolean\n  /**\n   * Create Vite dev server to be used as a middleware in an existing server\n   */\n  middlewareMode?: boolean | 'html' | 'ssr'\n  /**\n   * Prepend this folder to http requests, for use when proxying vite as a subfolder\n   * Should start and end with the `/` character\n   */\n  base?: string\n  /**\n   * Options for files served via '/\\@fs/'.\n   */\n  fs?: FileSystemServeOptions\n}\n\nexport interface ResolvedServerOptions extends ServerOptions {\n  fs: Required<FileSystemServeOptions>\n}\n\nexport interface FileSystemServeOptions {\n  /**\n   * Strictly restrict file accessing outside of allowing paths.\n   *\n   * Set to `false` to disable the warning\n   * Default to false at this moment, will enabled by default in the future versions.\n   *\n   * @expiremental\n   * @default undefined\n   */\n  strict?: boolean | undefined\n\n  /**\n   * Restrict accessing files outside the allowed directories.\n   *\n   * Accepts absolute path or a path relative to project root.\n   * Will try to search up for workspace root by default.\n   *\n   * @expiremental\n   */\n  allow?: string[]\n}\n\n/**\n * https://github.com/expressjs/cors#configuration-options\n */\nexport interface CorsOptions {\n  origin?:\n    | CorsOrigin\n    | ((origin: string, cb: (err: Error, origins: CorsOrigin) => void) => void)\n  methods?: string | string[]\n  allowedHeaders?: string | string[]\n  exposedHeaders?: string | string[]\n  credentials?: boolean\n  maxAge?: number\n  preflightContinue?: boolean\n  optionsSuccessStatus?: number\n}\n\nexport type CorsOrigin = boolean | string | RegExp | (string | RegExp)[]\n\nexport type ServerHook = (\n  server: ViteDevServer\n) => (() => void) | void | Promise<(() => void) | void>\n\nexport interface ViteDevServer {\n  /**\n   * The resolved vite config object\n   */\n  config: ResolvedConfig\n  /**\n   * A connect app instance.\n   * - Can be used to attach custom middlewares to the dev server.\n   * - Can also be used as the handler function of a custom http server\n   *   or as a middleware in any connect-style Node.js frameworks\n   *\n   * https://github.com/senchalabs/connect#use-middleware\n   */\n  middlewares: Connect.Server\n  /**\n   * @deprecated use `server.middlewares` instead\n   */\n  app: Connect.Server\n  /**\n   * native Node http server instance\n   * will be null in middleware mode\n   */\n  httpServer: http.Server | null\n  /**\n   * chokidar watcher instance\n   * https://github.com/paulmillr/chokidar#api\n   */\n  watcher: FSWatcher\n  /**\n   * web socket server with `send(payload)` method\n   */\n  ws: WebSocketServer\n  /**\n   * Rollup plugin container that can run plugin hooks on a given file\n   */\n  pluginContainer: PluginContainer\n  /**\n   * Module graph that tracks the import relationships, url to file mapping\n   * and hmr state.\n   */\n  moduleGraph: ModuleGraph\n  /**\n   * Programmatically resolve, load and transform a URL and get the result\n   * without going through the http request pipeline.\n   */\n  transformRequest(\n    url: string,\n    options?: TransformOptions\n  ): Promise<TransformResult | null>\n  /**\n   * Apply vite built-in HTML transforms and any plugin HTML transforms.\n   */\n  transformIndexHtml(\n    url: string,\n    html: string,\n    originalUrl?: string\n  ): Promise<string>\n  /**\n   * Util for transforming a file with esbuild.\n   * Can be useful for certain plugins.\n   *\n   * @deprecated import `transformWithEsbuild` from `vite` instead\n   */\n  transformWithEsbuild(\n    code: string,\n    filename: string,\n    options?: EsbuildTransformOptions,\n    inMap?: object\n  ): Promise<ESBuildTransformResult>\n  /**\n   * Load a given URL as an instantiated module for SSR.\n   */\n  ssrLoadModule(url: string): Promise<Record<string, any>>\n  /**\n   * Fix ssr error stacktrace\n   */\n  ssrFixStacktrace(e: Error): void\n  /**\n   * Start the server.\n   */\n  listen(port?: number, isRestart?: boolean): Promise<ViteDevServer>\n  /**\n   * Stop the server.\n   */\n  close(): Promise<void>\n  /**\n   * @internal\n   */\n  _optimizeDepsMetadata: DepOptimizationMetadata | null\n  /**\n   * Deps that are externalized\n   * @internal\n   */\n  _ssrExternals: string[] | null\n  /**\n   * @internal\n   */\n  _globImporters: Record<\n    string,\n    {\n      module: ModuleNode\n      importGlobs: {\n        base: string\n        pattern: string\n      }[]\n    }\n  >\n  /**\n   * @internal\n   */\n  _isRunningOptimizer: boolean\n  /**\n   * @internal\n   */\n  _registerMissingImport:\n    | ((id: string, resolved: string, ssr: boolean | undefined) => void)\n    | null\n  /**\n   * @internal\n   */\n  _pendingReload: Promise<void> | null\n}\n\nexport async function createServer(\n  inlineConfig: InlineConfig = {}\n): Promise<ViteDevServer> {\n  const config = await resolveConfig(inlineConfig, 'serve', 'development')\n  const root = config.root\n  const serverConfig = config.server\n  const httpsOptions = await resolveHttpsConfig(config)\n  let { middlewareMode } = serverConfig\n  if (middlewareMode === true) {\n    middlewareMode = 'ssr'\n  }\n\n  const middlewares = connect() as Connect.Server\n  const httpServer = middlewareMode\n    ? null\n    : await resolveHttpServer(serverConfig, middlewares, httpsOptions)\n  const ws = createWebSocketServer(httpServer, config, httpsOptions)\n\n  const { ignored = [], ...watchOptions } = serverConfig.watch || {}\n  const watcher = chokidar.watch(path.resolve(root), {\n    ignored: [\n      '**/node_modules/**',\n      '**/.git/**',\n      ...(Array.isArray(ignored) ? ignored : [ignored])\n    ],\n    ignoreInitial: true,\n    ignorePermissionErrors: true,\n    disableGlobbing: true,\n    ...watchOptions\n  }) as FSWatcher\n\n  const plugins = config.plugins\n  const container = await createPluginContainer(config, watcher)\n  const moduleGraph = new ModuleGraph(container)\n  const closeHttpServer = createServerCloseFn(httpServer)\n\n  // eslint-disable-next-line prefer-const\n  let exitProcess: () => void\n\n  const server: ViteDevServer = {\n    config,\n    middlewares,\n    get app() {\n      config.logger.warn(\n        `ViteDevServer.app is deprecated. Use ViteDevServer.middlewares instead.`\n      )\n      return middlewares\n    },\n    httpServer,\n    watcher,\n    pluginContainer: container,\n    ws,\n    moduleGraph,\n    transformWithEsbuild,\n    transformRequest(url, options) {\n      return transformRequest(url, server, options)\n    },\n    transformIndexHtml: null!, // to be immediately set\n    ssrLoadModule(url) {\n      if (!server._ssrExternals) {\n        server._ssrExternals = resolveSSRExternal(\n          config,\n          server._optimizeDepsMetadata\n            ? Object.keys(server._optimizeDepsMetadata.optimized)\n            : []\n        )\n      }\n      return ssrLoadModule(url, server)\n    },\n    ssrFixStacktrace(e) {\n      if (e.stack) {\n        const stacktrace = ssrRewriteStacktrace(e.stack, moduleGraph)\n        rebindErrorStacktrace(e, stacktrace)\n      }\n    },\n    listen(port?: number, isRestart?: boolean) {\n      return startServer(server, port, isRestart)\n    },\n    async close() {\n      process.off('SIGTERM', exitProcess)\n\n      if (!middlewareMode && process.env.CI !== 'true') {\n        process.stdin.off('end', exitProcess)\n      }\n\n      await Promise.all([\n        watcher.close(),\n        ws.close(),\n        container.close(),\n        closeHttpServer()\n      ])\n    },\n    _optimizeDepsMetadata: null,\n    _ssrExternals: null,\n    _globImporters: {},\n    _isRunningOptimizer: false,\n    _registerMissingImport: null,\n    _pendingReload: null\n  }\n\n  server.transformIndexHtml = createDevHtmlTransformFn(server)\n\n  exitProcess = async () => {\n    try {\n      await server.close()\n    } finally {\n      process.exit(0)\n    }\n  }\n\n  process.once('SIGTERM', exitProcess)\n\n  if (!middlewareMode && process.env.CI !== 'true') {\n    process.stdin.on('end', exitProcess)\n  }\n\n  watcher.on('change', async (file) => {\n    file = normalizePath(file)\n    // invalidate module graph cache on file change\n    moduleGraph.onFileChange(file)\n    if (serverConfig.hmr !== false) {\n      try {\n        await handleHMRUpdate(file, server)\n      } catch (err) {\n        ws.send({\n          type: 'error',\n          err: prepareError(err)\n        })\n      }\n    }\n  })\n\n  watcher.on('add', (file) => {\n    handleFileAddUnlink(normalizePath(file), server)\n  })\n\n  watcher.on('unlink', (file) => {\n    handleFileAddUnlink(normalizePath(file), server, true)\n  })\n\n  if (!middlewareMode && httpServer) {\n    httpServer.once('listening', () => {\n      // update actual port since this may be different from initial value\n      serverConfig.port = (httpServer.address() as AddressInfo).port\n    })\n  }\n\n  // apply server configuration hooks from plugins\n  const postHooks: ((() => void) | void)[] = []\n  for (const plugin of plugins) {\n    if (plugin.configureServer) {\n      postHooks.push(await plugin.configureServer(server))\n    }\n  }\n\n  // Internal middlewares ------------------------------------------------------\n\n  // request timer\n  if (process.env.DEBUG) {\n    middlewares.use(timeMiddleware(root))\n  }\n\n  // cors (enabled by default)\n  const { cors } = serverConfig\n  if (cors !== false) {\n    middlewares.use(corsMiddleware(typeof cors === 'boolean' ? {} : cors))\n  }\n\n  // proxy\n  const { proxy } = serverConfig\n  if (proxy) {\n    middlewares.use(proxyMiddleware(httpServer, config))\n  }\n\n  // base\n  if (config.base !== '/') {\n    middlewares.use(baseMiddleware(server))\n  }\n\n  // open in editor support\n  middlewares.use('/__open-in-editor', launchEditorMiddleware())\n\n  // hmr reconnect ping\n  // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n  middlewares.use('/__vite_ping', function viteHMRPingMiddleware(_, res) {\n    res.end('pong')\n  })\n\n  // serve static files under /public\n  // this applies before the transform middleware so that these files are served\n  // as-is without transforms.\n  if (config.publicDir) {\n    middlewares.use(servePublicMiddleware(config.publicDir))\n  }\n\n  // main transform middleware\n  middlewares.use(transformMiddleware(server))\n\n  // serve static files\n  middlewares.use(serveRawFsMiddleware(server))\n  middlewares.use(serveStaticMiddleware(root, config))\n\n  // spa fallback\n  if (!middlewareMode || middlewareMode === 'html') {\n    middlewares.use(spaFallbackMiddleware(root))\n  }\n\n  // run post config hooks\n  // This is applied before the html middleware so that user middleware can\n  // serve custom content instead of index.html.\n  postHooks.forEach((fn) => fn && fn())\n\n  if (!middlewareMode || middlewareMode === 'html') {\n    // transform index.html\n    middlewares.use(indexHtmlMiddleware(server))\n    // handle 404s\n    // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n    middlewares.use(function vite404Middleware(_, res) {\n      res.statusCode = 404\n      res.end()\n    })\n  }\n\n  // error handler\n  middlewares.use(errorMiddleware(server, !!middlewareMode))\n\n  const runOptimize = async () => {\n    if (config.cacheDir) {\n      server._isRunningOptimizer = true\n      try {\n        server._optimizeDepsMetadata = await optimizeDeps(config)\n      } finally {\n        server._isRunningOptimizer = false\n      }\n      server._registerMissingImport = createMissingImporterRegisterFn(server)\n    }\n  }\n\n  if (!middlewareMode && httpServer) {\n    let isOptimized = false\n    // overwrite listen to run optimizer before server start\n    const listen = httpServer.listen.bind(httpServer)\n    httpServer.listen = (async (port: number, ...args: any[]) => {\n      if (!isOptimized) {\n        try {\n          await container.buildStart({})\n          await runOptimize()\n          isOptimized = true\n        } catch (e) {\n          httpServer.emit('error', e)\n          return\n        }\n      }\n      return listen(port, ...args)\n    }) as any\n  } else {\n    await container.buildStart({})\n    await runOptimize()\n  }\n\n  return server\n}\n\nasync function startServer(\n  server: ViteDevServer,\n  inlinePort?: number,\n  isRestart: boolean = false\n): Promise<ViteDevServer> {\n  const httpServer = server.httpServer\n  if (!httpServer) {\n    throw new Error('Cannot call server.listen in middleware mode.')\n  }\n\n  const options = server.config.server\n  const port = inlinePort || options.port || 3000\n  const hostname = resolveHostname(options.host)\n\n  const protocol = options.https ? 'https' : 'http'\n  const info = server.config.logger.info\n  const base = server.config.base\n\n  const serverPort = await httpServerStart(httpServer, {\n    port,\n    strictPort: options.strictPort,\n    host: hostname.host,\n    logger: server.config.logger\n  })\n\n  info(\n    chalk.cyan(`\\n  vite v${require('vite/package.json').version}`) +\n      chalk.green(` dev server running at:\\n`),\n    {\n      clear: !server.config.logger.hasWarned\n    }\n  )\n\n  printServerUrls(hostname, protocol, serverPort, base, info)\n\n  // @ts-ignore\n  if (global.__vite_start_time) {\n    info(\n      chalk.cyan(\n        // @ts-ignore\n        `\\n  ready in ${Date.now() - global.__vite_start_time}ms.\\n`\n      )\n    )\n  }\n\n  // @ts-ignore\n  const profileSession = global.__vite_profile_session\n  if (profileSession) {\n    profileSession.post('Profiler.stop', (err: any, { profile }: any) => {\n      // Write profile to disk, upload, etc.\n      if (!err) {\n        const outPath = path.resolve('./vite-profile.cpuprofile')\n        fs.writeFileSync(outPath, JSON.stringify(profile))\n        info(\n          chalk.yellow(`  CPU profile written to ${chalk.white.dim(outPath)}\\n`)\n        )\n      } else {\n        throw err\n      }\n    })\n  }\n\n  if (options.open && !isRestart) {\n    const path = typeof options.open === 'string' ? options.open : base\n    openBrowser(\n      `${protocol}://${hostname.name}:${serverPort}${path}`,\n      true,\n      server.config.logger\n    )\n  }\n\n  return server\n}\n\nfunction createServerCloseFn(server: http.Server | null) {\n  if (!server) {\n    return () => {}\n  }\n\n  let hasListened = false\n  const openSockets = new Set<net.Socket>()\n\n  server.on('connection', (socket) => {\n    openSockets.add(socket)\n    socket.on('close', () => {\n      openSockets.delete(socket)\n    })\n  })\n\n  server.once('listening', () => {\n    hasListened = true\n  })\n\n  return () =>\n    new Promise<void>((resolve, reject) => {\n      openSockets.forEach((s) => s.destroy())\n      if (hasListened) {\n        server.close((err) => {\n          if (err) {\n            reject(err)\n          } else {\n            resolve()\n          }\n        })\n      } else {\n        resolve()\n      }\n    })\n}\n\nfunction resolvedAllowDir(root: string, dir: string): string {\n  return ensureLeadingSlash(normalizePath(path.resolve(root, dir)))\n}\n\nexport function resolveServerOptions(\n  root: string,\n  raw?: ServerOptions\n): ResolvedServerOptions {\n  const server = raw || {}\n  let allowDirs = server.fs?.allow\n\n  if (!allowDirs) {\n    allowDirs = [searchForWorkspaceRoot(root)]\n  }\n\n  allowDirs = allowDirs.map((i) => resolvedAllowDir(root, i))\n\n  // only push client dir when vite itself is outside-of-root\n  const resolvedClientDir = resolvedAllowDir(root, CLIENT_DIR)\n  if (!allowDirs.some((i) => resolvedClientDir.startsWith(i))) {\n    allowDirs.push(resolvedClientDir)\n  }\n\n  server.fs = {\n    // TODO: make strict by default\n    strict: server.fs?.strict,\n    allow: allowDirs\n  }\n  return server as ResolvedServerOptions\n}\n","/**\n * https://github.com/rollup/plugins/blob/master/packages/json/src/index.js\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file at\n * https://github.com/rollup/plugins/blob/master/LICENSE\n */\n\nimport { dataToEsm } from '@rollup/pluginutils'\nimport { Plugin } from 'rollup'\nimport { SPECIAL_QUERY_RE } from '../constants'\n\nexport interface JsonOptions {\n  /**\n   * Generate a named export for every property of the JSON object\n   * @default true\n   */\n  namedExports?: boolean\n  /**\n   * Generate performant output as JSON.parse(\"stringified\").\n   * Enabling this will disable namedExports.\n   * @default false\n   */\n  stringify?: boolean\n}\n\n// Custom json filter for vite\nconst jsonExtRE = /\\.json($|\\?)(?!commonjs-proxy)/\n\nexport function jsonPlugin(\n  options: JsonOptions = {},\n  isBuild: boolean\n): Plugin {\n  return {\n    name: 'vite:json',\n\n    transform(json, id) {\n      if (!jsonExtRE.test(id)) return null\n      if (SPECIAL_QUERY_RE.test(id)) return null\n\n      try {\n        if (options.stringify) {\n          if (isBuild) {\n            return {\n              // during build, parse then double-stringify to remove all\n              // unnecessary whitespaces to reduce bundle size.\n              code: `export default JSON.parse(${JSON.stringify(\n                JSON.stringify(JSON.parse(json))\n              )})`,\n              map: { mappings: '' }\n            }\n          } else {\n            return `export default JSON.parse(${JSON.stringify(json)})`\n          }\n        }\n\n        const parsed = JSON.parse(json)\n        return {\n          code: dataToEsm(parsed, {\n            preferConst: true,\n            namedExports: options.namedExports\n          }),\n          map: { mappings: '' }\n        }\n      } catch (e) {\n        const errorMessageList = /[\\d]+/.exec(e.message)\n        const position = errorMessageList && parseInt(errorMessageList[0], 10)\n        const msg = position\n          ? `, invalid JSON syntax found at line ${position}`\n          : `.`\n        this.error(`Failed to parse JSON file` + msg, e.idx)\n      }\n    }\n  }\n}\n","import fs from 'fs'\nimport path from 'path'\nimport { Plugin } from '../plugin'\nimport { ResolvedConfig } from '../config'\nimport chalk from 'chalk'\nimport MagicString from 'magic-string'\nimport { init, parse as parseImports, ImportSpecifier } from 'es-module-lexer'\nimport { isCSSRequest, isDirectCSSRequest } from './css'\nimport {\n  isBuiltin,\n  cleanUrl,\n  createDebugger,\n  generateCodeFrame,\n  injectQuery,\n  isDataUrl,\n  isExternalUrl,\n  isJSRequest,\n  prettifyUrl,\n  timeFrom,\n  normalizePath\n} from '../utils'\nimport {\n  debugHmr,\n  handlePrunedModules,\n  lexAcceptedHmrDeps\n} from '../server/hmr'\nimport {\n  FS_PREFIX,\n  CLIENT_DIR,\n  CLIENT_PUBLIC_PATH,\n  DEP_VERSION_RE,\n  VALID_ID_PREFIX,\n  NULL_BYTE_PLACEHOLDER\n} from '../constants'\nimport { ViteDevServer } from '..'\nimport { checkPublicFile } from './asset'\nimport { parse as parseJS } from 'acorn'\nimport type { Node } from 'estree'\nimport { transformImportGlob } from '../importGlob'\nimport { makeLegalIdentifier } from '@rollup/pluginutils'\nimport { shouldExternalizeForSSR } from '../ssr/ssrExternal'\n\nconst isDebug = !!process.env.DEBUG\nconst debug = createDebugger('vite:import-analysis')\n\nconst clientDir = normalizePath(CLIENT_DIR)\n\nconst skipRE = /\\.(map|json)$/\nconst canSkip = (id: string) => skipRE.test(id) || isDirectCSSRequest(id)\n\nfunction isExplicitImportRequired(url: string) {\n  return !isJSRequest(cleanUrl(url)) && !isCSSRequest(url)\n}\n\nfunction markExplicitImport(url: string) {\n  if (isExplicitImportRequired(url)) {\n    return injectQuery(url, 'import')\n  }\n  return url\n}\n\n/**\n * Server-only plugin that lexes, resolves, rewrites and analyzes url imports.\n *\n * - Imports are resolved to ensure they exist on disk\n *\n * - Lexes HMR accept calls and updates import relationships in the module graph\n *\n * - Bare module imports are resolved (by @rollup-plugin/node-resolve) to\n * absolute file paths, e.g.\n *\n *     ```js\n *     import 'foo'\n *     ```\n *     is rewritten to\n *     ```js\n *     import '/@fs//project/node_modules/foo/dist/foo.js'\n *     ```\n *\n * - CSS imports are appended with `.js` since both the js module and the actual\n * css (referenced via <link>) may go through the transform pipeline:\n *\n *     ```js\n *     import './style.css'\n *     ```\n *     is rewritten to\n *     ```js\n *     import './style.css.js'\n *     ```\n */\nexport function importAnalysisPlugin(config: ResolvedConfig): Plugin {\n  const { root, base } = config\n  const clientPublicPath = path.posix.join(base, CLIENT_PUBLIC_PATH)\n\n  let server: ViteDevServer\n\n  return {\n    name: 'vite:import-analysis',\n\n    configureServer(_server) {\n      server = _server\n    },\n\n    async transform(source, importer, ssr) {\n      const prettyImporter = prettifyUrl(importer, root)\n\n      if (canSkip(importer)) {\n        isDebug && debug(chalk.dim(`[skipped] ${prettyImporter}`))\n        return null\n      }\n\n      const start = Date.now()\n      await init\n      let imports: readonly ImportSpecifier[] = []\n      // strip UTF-8 BOM\n      if (source.charCodeAt(0) === 0xfeff) {\n        source = source.slice(1)\n      }\n      try {\n        imports = parseImports(source)[0]\n      } catch (e: any) {\n        const isVue = importer.endsWith('.vue')\n        const maybeJSX = !isVue && isJSRequest(importer)\n\n        const msg = isVue\n          ? `Install @vitejs/plugin-vue to handle .vue files.`\n          : maybeJSX\n          ? `If you are using JSX, make sure to name the file with the .jsx or .tsx extension.`\n          : `You may need to install appropriate plugins to handle the ${path.extname(\n              importer\n            )} file format.`\n\n        this.error(\n          `Failed to parse source for import analysis because the content ` +\n            `contains invalid JS syntax. ` +\n            msg,\n          e.idx\n        )\n      }\n\n      if (!imports.length) {\n        isDebug &&\n          debug(\n            `${timeFrom(start)} ${chalk.dim(`[no imports] ${prettyImporter}`)}`\n          )\n        return source\n      }\n\n      let hasHMR = false\n      let isSelfAccepting = false\n      let hasEnv = false\n      let needQueryInjectHelper = false\n      let s: MagicString | undefined\n      const str = () => s || (s = new MagicString(source))\n      // vite-only server context\n      const { moduleGraph } = server\n      // since we are already in the transform phase of the importer, it must\n      // have been loaded so its entry is guaranteed in the module graph.\n      const importerModule = moduleGraph.getModuleById(importer)!\n      const importedUrls = new Set<string>()\n      const acceptedUrls = new Set<{\n        url: string\n        start: number\n        end: number\n      }>()\n      const toAbsoluteUrl = (url: string) =>\n        path.posix.resolve(path.posix.dirname(importerModule.url), url)\n\n      const normalizeUrl = async (\n        url: string,\n        pos: number\n      ): Promise<[string, string]> => {\n        if (base !== '/' && url.startsWith(base)) {\n          url = url.replace(base, '/')\n        }\n\n        const resolved = await this.resolve(url, importer)\n\n        if (!resolved) {\n          this.error(\n            `Failed to resolve import \"${url}\" from \"${path.relative(\n              process.cwd(),\n              importer\n            )}\". Does the file exist?`,\n            pos\n          )\n        }\n\n        const isRelative = url.startsWith('.')\n        const isSelfImport = !isRelative && cleanUrl(url) === cleanUrl(importer)\n\n        // normalize all imports into resolved URLs\n        // e.g. `import 'foo'` -> `import '/@fs/.../node_modules/foo/index.js`\n        if (resolved.id.startsWith(root + '/')) {\n          // in root: infer short absolute path from root\n          url = resolved.id.slice(root.length)\n        } else if (fs.existsSync(cleanUrl(resolved.id))) {\n          // exists but out of root: rewrite to absolute /@fs/ paths\n          url = path.posix.join(FS_PREFIX + resolved.id)\n        } else {\n          url = resolved.id\n        }\n\n        if (isExternalUrl(url)) {\n          return [url, url]\n        }\n\n        // if the resolved id is not a valid browser import specifier,\n        // prefix it to make it valid. We will strip this before feeding it\n        // back into the transform pipeline\n        if (!url.startsWith('.') && !url.startsWith('/')) {\n          url =\n            VALID_ID_PREFIX + resolved.id.replace('\\0', NULL_BYTE_PLACEHOLDER)\n        }\n\n        // make the URL browser-valid if not SSR\n        if (!ssr) {\n          // mark non-js/css imports with `?import`\n          url = markExplicitImport(url)\n\n          // for relative js/css imports, or self-module virtual imports\n          // (e.g. vue blocks), inherit importer's version query\n          // do not do this for unknown type imports, otherwise the appended\n          // query can break 3rd party plugin's extension checks.\n          if ((isRelative || isSelfImport) && !/[\\?&]import=?\\b/.test(url)) {\n            const versionMatch = importer.match(DEP_VERSION_RE)\n            if (versionMatch) {\n              url = injectQuery(url, versionMatch[1])\n            }\n          }\n\n          // check if the dep has been hmr updated. If yes, we need to attach\n          // its last updated timestamp to force the browser to fetch the most\n          // up-to-date version of this module.\n          try {\n            const depModule = await moduleGraph.ensureEntryFromUrl(url)\n            if (depModule.lastHMRTimestamp > 0) {\n              url = injectQuery(url, `t=${depModule.lastHMRTimestamp}`)\n            }\n          } catch (e: any) {\n            // it's possible that the dep fails to resolve (non-existent import)\n            // attach location to the missing import\n            e.pos = pos\n            throw e\n          }\n\n          // prepend base (dev base is guaranteed to have ending slash)\n          url = base + url.replace(/^\\//, '')\n        }\n\n        return [url, resolved.id]\n      }\n\n      for (let index = 0; index < imports.length; index++) {\n        const {\n          s: start,\n          e: end,\n          ss: expStart,\n          se: expEnd,\n          d: dynamicIndex,\n          // #2083 User may use escape path,\n          // so use imports[index].n to get the unescaped string\n          // @ts-ignore\n          n: specifier\n        } = imports[index]\n\n        const rawUrl = source.slice(start, end)\n\n        // check import.meta usage\n        if (rawUrl === 'import.meta') {\n          const prop = source.slice(end, end + 4)\n          if (prop === '.hot') {\n            hasHMR = true\n            if (source.slice(end + 4, end + 11) === '.accept') {\n              // further analyze accepted modules\n              if (\n                lexAcceptedHmrDeps(\n                  source,\n                  source.indexOf('(', end + 11) + 1,\n                  acceptedUrls\n                )\n              ) {\n                isSelfAccepting = true\n              }\n            }\n          } else if (prop === '.env') {\n            hasEnv = true\n          } else if (prop === '.glo' && source[end + 4] === 'b') {\n            // transform import.meta.glob()\n            // e.g. `import.meta.glob('glob:./dir/*.js')`\n            const { imports, importsString, exp, endIndex, base, pattern } =\n              await transformImportGlob(\n                source,\n                start,\n                importer,\n                index,\n                root,\n                normalizeUrl\n              )\n            str().prepend(importsString)\n            str().overwrite(expStart, endIndex, exp)\n            imports.forEach((url) => importedUrls.add(url.replace(base, '/')))\n            if (!(importerModule.file! in server._globImporters)) {\n              server._globImporters[importerModule.file!] = {\n                module: importerModule,\n                importGlobs: []\n              }\n            }\n            server._globImporters[importerModule.file!].importGlobs.push({\n              base,\n              pattern\n            })\n          }\n          continue\n        }\n\n        const isDynamicImport = dynamicIndex >= 0\n\n        // static import or valid string in dynamic import\n        // If resolvable, let's resolve it\n        if (specifier) {\n          // skip external / data uri\n          if (isExternalUrl(specifier) || isDataUrl(specifier)) {\n            continue\n          }\n          // skip ssr external\n          if (ssr) {\n            if (\n              server._ssrExternals &&\n              shouldExternalizeForSSR(specifier, server._ssrExternals)\n            ) {\n              continue\n            }\n            if (isBuiltin(specifier)) {\n              continue\n            }\n          }\n          // skip client\n          if (specifier === clientPublicPath) {\n            continue\n          }\n\n          // warn imports to non-asset /public files\n          if (\n            specifier.startsWith('/') &&\n            !config.assetsInclude(cleanUrl(specifier)) &&\n            !specifier.endsWith('.json') &&\n            checkPublicFile(specifier, config)\n          ) {\n            throw new Error(\n              `Cannot import non-asset file ${specifier} which is inside /public.` +\n                `JS/CSS files inside /public are copied as-is on build and ` +\n                `can only be referenced via <script src> or <link href> in html.`\n            )\n          }\n\n          // normalize\n          const [normalizedUrl, resolvedId] = await normalizeUrl(\n            specifier,\n            start\n          )\n          let url = normalizedUrl\n\n          // record as safe modules\n          server?.moduleGraph.safeModulesPath.add(\n            cleanUrl(url).slice(4 /* '/@fs'.length */)\n          )\n\n          // rewrite\n          if (url !== specifier) {\n            // for optimized cjs deps, support named imports by rewriting named\n            // imports to const assignments.\n            if (resolvedId.endsWith(`&es-interop`)) {\n              url = url.slice(0, -11)\n              if (isDynamicImport) {\n                // rewrite `import('package')` to expose the default directly\n                str().overwrite(\n                  dynamicIndex,\n                  end + 1,\n                  `import('${url}').then(m => m.default && m.default.__esModule ? m.default : ({ ...m.default, default: m.default }))`\n                )\n              } else {\n                const exp = source.slice(expStart, expEnd)\n                const rewritten = transformCjsImport(exp, url, rawUrl, index)\n                if (rewritten) {\n                  str().overwrite(expStart, expEnd, rewritten)\n                } else {\n                  // #1439 export * from '...'\n                  str().overwrite(start, end, url)\n                }\n              }\n            } else {\n              str().overwrite(start, end, isDynamicImport ? `'${url}'` : url)\n            }\n          }\n\n          // record for HMR import chain analysis\n          // make sure to normalize away base\n          importedUrls.add(url.replace(base, '/'))\n        } else if (!importer.startsWith(clientDir) && !ssr) {\n          // check @vite-ignore which suppresses dynamic import warning\n          const hasViteIgnore = /\\/\\*\\s*@vite-ignore\\s*\\*\\//.test(rawUrl)\n\n          const url = rawUrl\n            .replace(/\\/\\*[\\s\\S]*?\\*\\/|([^\\\\:]|^)\\/\\/.*$/gm, '')\n            .trim()\n          if (!hasViteIgnore && !isSupportedDynamicImport(url)) {\n            this.warn(\n              `\\n` +\n                chalk.cyan(importerModule.file) +\n                `\\n` +\n                generateCodeFrame(source, start) +\n                `\\nThe above dynamic import cannot be analyzed by vite.\\n` +\n                `See ${chalk.blue(\n                  `https://github.com/rollup/plugins/tree/master/packages/dynamic-import-vars#limitations`\n                )} ` +\n                `for supported dynamic import formats. ` +\n                `If this is intended to be left as-is, you can use the ` +\n                `/* @vite-ignore */ comment inside the import() call to suppress this warning.\\n`\n            )\n          }\n          if (\n            !/^('.*'|\".*\"|`.*`)$/.test(url) ||\n            isExplicitImportRequired(url.slice(1, -1))\n          ) {\n            needQueryInjectHelper = true\n            str().overwrite(start, end, `__vite__injectQuery(${url}, 'import')`)\n          }\n        }\n      }\n\n      if (hasEnv) {\n        // inject import.meta.env\n        let env = `import.meta.env = ${JSON.stringify({\n          ...config.env,\n          SSR: !!ssr\n        })};`\n        // account for user env defines\n        for (const key in config.define) {\n          if (key.startsWith(`import.meta.env.`)) {\n            const val = config.define[key]\n            env += `${key} = ${\n              typeof val === 'string' ? val : JSON.stringify(val)\n            };`\n          }\n        }\n        str().prepend(env)\n      }\n\n      if (hasHMR && !ssr) {\n        debugHmr(\n          `${\n            isSelfAccepting\n              ? `[self-accepts]`\n              : acceptedUrls.size\n              ? `[accepts-deps]`\n              : `[detected api usage]`\n          } ${prettyImporter}`\n        )\n        // inject hot context\n        str().prepend(\n          `import { createHotContext as __vite__createHotContext } from \"${clientPublicPath}\";` +\n            `import.meta.hot = __vite__createHotContext(${JSON.stringify(\n              importerModule.url\n            )});`\n        )\n      }\n\n      if (needQueryInjectHelper) {\n        str().prepend(\n          `import { injectQuery as __vite__injectQuery } from \"${clientPublicPath}\";`\n        )\n      }\n\n      // normalize and rewrite accepted urls\n      const normalizedAcceptedUrls = new Set<string>()\n      for (const { url, start, end } of acceptedUrls) {\n        const [normalized] = await moduleGraph.resolveUrl(\n          toAbsoluteUrl(markExplicitImport(url))\n        )\n        normalizedAcceptedUrls.add(normalized)\n        str().overwrite(start, end, JSON.stringify(normalized))\n      }\n\n      // update the module graph for HMR analysis.\n      // node CSS imports does its own graph update in the css plugin so we\n      // only handle js graph updates here.\n      if (!isCSSRequest(importer)) {\n        // attached by pluginContainer.addWatchFile\n        const pluginImports = (this as any)._addedImports as\n          | Set<string>\n          | undefined\n        if (pluginImports) {\n          ;(\n            await Promise.all(\n              [...pluginImports].map((id) => normalizeUrl(id, 0))\n            )\n          ).forEach(([url]) => importedUrls.add(url))\n        }\n        const prunedImports = await moduleGraph.updateModuleInfo(\n          importerModule,\n          importedUrls,\n          normalizedAcceptedUrls,\n          isSelfAccepting\n        )\n        if (hasHMR && prunedImports) {\n          handlePrunedModules(prunedImports, server)\n        }\n      }\n\n      isDebug &&\n        debug(\n          `${timeFrom(start)} ${chalk.dim(\n            `[${importedUrls.size} imports rewritten] ${prettyImporter}`\n          )}`\n        )\n\n      if (s) {\n        return s.toString()\n      } else {\n        return source\n      }\n    }\n  }\n}\n\n/**\n * https://github.com/rollup/plugins/tree/master/packages/dynamic-import-vars#limitations\n * This is probably less accurate but is much cheaper than a full AST parse.\n */\nfunction isSupportedDynamicImport(url: string) {\n  url = url.trim().slice(1, -1)\n  // must be relative\n  if (!url.startsWith('./') && !url.startsWith('../')) {\n    return false\n  }\n  // must have extension\n  if (!path.extname(url)) {\n    return false\n  }\n  // must be more specific if importing from same dir\n  if (url.startsWith('./${') && url.indexOf('/') === url.lastIndexOf('/')) {\n    return false\n  }\n  return true\n}\n\ntype ImportNameSpecifier = { importedName: string; localName: string }\n\n/**\n * Detect import statements to a known optimized CJS dependency and provide\n * ES named imports interop. We do this by rewriting named imports to a variable\n * assignment to the corresponding property on the `module.exports` of the cjs\n * module. Note this doesn't support dynamic re-assignments from within the cjs\n * module.\n *\n * Note that es-module-lexer treats `export * from '...'` as an import as well,\n * so, we may encounter ExportAllDeclaration here, in which case `undefined`\n * will be returned.\n *\n * Credits \\@csr632 via #837\n */\nfunction transformCjsImport(\n  importExp: string,\n  url: string,\n  rawUrl: string,\n  importIndex: number\n): string | undefined {\n  const node = (\n    parseJS(importExp, {\n      ecmaVersion: 2020,\n      sourceType: 'module'\n    }) as any\n  ).body[0] as Node\n\n  if (node.type === 'ImportDeclaration') {\n    if (!node.specifiers.length) {\n      return `import \"${url}\"`\n    }\n\n    const importNames: ImportNameSpecifier[] = []\n    for (const spec of node.specifiers) {\n      if (\n        spec.type === 'ImportSpecifier' &&\n        spec.imported.type === 'Identifier'\n      ) {\n        const importedName = spec.imported.name\n        const localName = spec.local.name\n        importNames.push({ importedName, localName })\n      } else if (spec.type === 'ImportDefaultSpecifier') {\n        importNames.push({\n          importedName: 'default',\n          localName: spec.local.name\n        })\n      } else if (spec.type === 'ImportNamespaceSpecifier') {\n        importNames.push({ importedName: '*', localName: spec.local.name })\n      }\n    }\n\n    // If there is multiple import for same id in one file,\n    // importIndex will prevent the cjsModuleName to be duplicate\n    const cjsModuleName = makeLegalIdentifier(\n      `__vite__cjsImport${importIndex}_${rawUrl}`\n    )\n    const lines: string[] = [`import ${cjsModuleName} from \"${url}\"`]\n    importNames.forEach(({ importedName, localName }) => {\n      if (importedName === '*') {\n        lines.push(`const ${localName} = ${cjsModuleName}`)\n      } else if (importedName === 'default') {\n        lines.push(\n          `const ${localName} = ${cjsModuleName}.__esModule ? ${cjsModuleName}.default : ${cjsModuleName}`\n        )\n      } else {\n        lines.push(`const ${localName} = ${cjsModuleName}[\"${importedName}\"]`)\n      }\n    })\n    return lines.join('; ')\n  }\n}\n","import path from 'path'\nimport { Plugin } from '../plugin'\nimport { ResolvedConfig } from '../config'\nimport { CLIENT_ENTRY, ENV_ENTRY } from '../constants'\nimport { normalizePath, isObject } from '../utils'\n\n// ids in transform are normalized to unix style\nconst normalizedClientEntry = normalizePath(CLIENT_ENTRY)\nconst normalizedEnvEntry = normalizePath(ENV_ENTRY)\n\n/**\n * some values used by the client needs to be dynamically injected by the server\n * @server-only\n */\nexport function clientInjectionsPlugin(config: ResolvedConfig): Plugin {\n  return {\n    name: 'vite:client-inject',\n    transform(code, id) {\n      if (id === normalizedClientEntry || id === normalizedEnvEntry) {\n        let options = config.server.hmr\n        options = options && typeof options !== 'boolean' ? options : {}\n        const host = options.host || null\n        const protocol = options.protocol || null\n        const timeout = options.timeout || 30000\n        const overlay = options.overlay !== false\n        let port: number | string | undefined\n        if (isObject(config.server.hmr)) {\n          port = config.server.hmr.clientPort || config.server.hmr.port\n        }\n        if (config.server.middlewareMode) {\n          port = String(port || 24678)\n        } else {\n          port = String(port || options.port || config.server.port!)\n        }\n        let hmrBase = config.base\n        if (options.path) {\n          hmrBase = path.posix.join(hmrBase, options.path)\n        }\n        if (hmrBase !== '/') {\n          port = path.posix.normalize(`${port}${hmrBase}`)\n        }\n\n        return code\n          .replace(`__MODE__`, JSON.stringify(config.mode))\n          .replace(`__BASE__`, JSON.stringify(config.base))\n          .replace(`__DEFINES__`, serializeDefine(config.define || {}))\n          .replace(`__HMR_PROTOCOL__`, JSON.stringify(protocol))\n          .replace(`__HMR_HOSTNAME__`, JSON.stringify(host))\n          .replace(`__HMR_PORT__`, JSON.stringify(port))\n          .replace(`__HMR_TIMEOUT__`, JSON.stringify(timeout))\n          .replace(`__HMR_ENABLE_OVERLAY__`, JSON.stringify(overlay))\n      } else if (code.includes('process.env.NODE_ENV')) {\n        // replace process.env.NODE_ENV\n        return code.replace(\n          /\\bprocess\\.env\\.NODE_ENV\\b/g,\n          JSON.stringify(config.mode)\n        )\n      }\n    }\n  }\n}\n\nfunction serializeDefine(define: Record<string, any>): string {\n  let res = `{`\n  for (const key in define) {\n    const val = define[key]\n    res += `${JSON.stringify(key)}: ${\n      typeof val === 'string' ? `(${val})` : JSON.stringify(val)\n    }, `\n  }\n  return res + `}`\n}\n","import { ResolvedConfig } from '../config'\nimport { Plugin } from '../plugin'\nimport { fileToUrl } from './asset'\n\nconst wasmHelperId = '/__vite-wasm-helper'\n\nconst wasmHelper = async (opts = {}, url: string) => {\n  let result\n  if (url.startsWith('data:')) {\n    // @ts-ignore\n    const binaryString = atob(url.replace(/^data:.*?base64,/, ''))\n    const bytes = new Uint8Array(binaryString.length)\n    for (let i = 0; i < binaryString.length; i++) {\n      bytes[i] = binaryString.charCodeAt(i)\n    }\n    // @ts-ignore\n    result = await WebAssembly.instantiate(bytes, opts)\n  } else {\n    // https://github.com/mdn/webassembly-examples/issues/5\n    // WebAssembly.instantiateStreaming requires the server to provide the\n    // correct MIME type for .wasm files, which unfortunately doesn't work for\n    // a lot of static file servers, so we just work around it by getting the\n    // raw buffer.\n    // @ts-ignore\n    const response = await fetch(url)\n    const contentType = response.headers.get('Content-Type') || ''\n    if (\n      // @ts-ignore\n      'instantiateStreaming' in WebAssembly &&\n      contentType.startsWith('application/wasm')\n    ) {\n      // @ts-ignore\n      result = await WebAssembly.instantiateStreaming(response, opts)\n    } else {\n      const buffer = await response.arrayBuffer()\n      // @ts-ignore\n      result = await WebAssembly.instantiate(buffer, opts)\n    }\n  }\n  return result.instance.exports\n}\n\nconst wasmHelperCode = wasmHelper.toString()\n\nexport const wasmPlugin = (config: ResolvedConfig): Plugin => {\n  return {\n    name: 'vite:wasm',\n\n    resolveId(id) {\n      if (id === wasmHelperId) {\n        return id\n      }\n    },\n\n    async load(id) {\n      if (id === wasmHelperId) {\n        return `export default ${wasmHelperCode}`\n      }\n\n      if (!id.endsWith('.wasm')) {\n        return\n      }\n\n      const url = await fileToUrl(id, config, this)\n\n      return `\nimport initWasm from \"${wasmHelperId}\"\nexport default opts => initWasm(opts, ${JSON.stringify(url)})\n`\n    }\n  }\n}\n","import { ResolvedConfig } from '../config'\nimport { Plugin } from '../plugin'\nimport { resolvePlugins } from '../plugins'\nimport { parse as parseUrl, URLSearchParams } from 'url'\nimport { fileToUrl, getAssetHash } from './asset'\nimport { cleanUrl, injectQuery } from '../utils'\nimport Rollup from 'rollup'\nimport { ENV_PUBLIC_PATH } from '../constants'\nimport path from 'path'\nimport { onRollupWarning } from '../build'\n\nfunction parseWorkerRequest(id: string): Record<string, string> | null {\n  const { search } = parseUrl(id)\n  if (!search) {\n    return null\n  }\n  return Object.fromEntries(new URLSearchParams(search.slice(1)))\n}\n\nconst WorkerFileId = 'worker_file'\n\nexport function webWorkerPlugin(config: ResolvedConfig): Plugin {\n  const isBuild = config.command === 'build'\n\n  return {\n    name: 'vite:worker',\n\n    load(id) {\n      if (isBuild) {\n        const parsedQuery = parseWorkerRequest(id)\n        if (\n          parsedQuery &&\n          (parsedQuery.worker ?? parsedQuery.sharedworker) != null\n        ) {\n          return ''\n        }\n      }\n    },\n\n    async transform(_, id) {\n      const query = parseWorkerRequest(id)\n      if (query && query[WorkerFileId] != null) {\n        return {\n          code: `import '${ENV_PUBLIC_PATH}'\\n` + _\n        }\n      }\n      if (\n        query == null ||\n        (query && (query.worker ?? query.sharedworker) == null)\n      ) {\n        return\n      }\n\n      let url: string\n      if (isBuild) {\n        // bundle the file as entry to support imports\n        const rollup = require('rollup') as typeof Rollup\n        const bundle = await rollup.rollup({\n          input: cleanUrl(id),\n          plugins: await resolvePlugins({ ...config }, [], [], []),\n          onwarn(warning, warn) {\n            onRollupWarning(warning, warn, config)\n          }\n        })\n        let code: string\n        try {\n          const { output } = await bundle.generate({\n            format: 'iife',\n            sourcemap: config.build.sourcemap\n          })\n          code = output[0].code\n        } finally {\n          await bundle.close()\n        }\n        const content = Buffer.from(code)\n        if (query.inline != null) {\n          // inline as blob data url\n          return `const encodedJs = \"${content.toString('base64')}\";\n            const blob = typeof window !== \"undefined\" && window.Blob && new Blob([atob(encodedJs)], { type: \"text/javascript;charset=utf-8\" });\n            export default function WorkerWrapper() {\n              const objURL = blob && (window.URL || window.webkitURL).createObjectURL(blob);\n              try {\n                return objURL ? new Worker(objURL) : new Worker(\"data:application/javascript;base64,\" + encodedJs, {type: \"module\"});\n              } finally {\n                objURL && (window.URL || window.webkitURL).revokeObjectURL(objURL);\n              }\n            }`\n        } else {\n          const basename = path.parse(cleanUrl(id)).name\n          const contentHash = getAssetHash(content)\n          const fileName = path.posix.join(\n            config.build.assetsDir,\n            `${basename}.${contentHash}.js`\n          )\n          url = `__VITE_ASSET__${this.emitFile({\n            fileName,\n            type: 'asset',\n            source: code\n          })}__`\n        }\n      } else {\n        url = await fileToUrl(cleanUrl(id), config, this)\n        url = injectQuery(url, WorkerFileId)\n      }\n\n      const workerConstructor =\n        query.sharedworker != null ? 'SharedWorker' : 'Worker'\n      const workerOptions = { type: 'module' }\n\n      return `export default function WorkerWrapper() {\n        return new ${workerConstructor}(${JSON.stringify(\n        url\n      )}, ${JSON.stringify(workerOptions, null, 2)})\n      }`\n    }\n  }\n}\n","import { ViteDevServer } from '..'\nimport { Plugin } from '../plugin'\nimport { bareImportRE } from '../utils'\nimport { tryOptimizedResolve } from './resolve'\n\n/**\n * A plugin to avoid an aliased AND optimized dep from being aliased in src\n */\nexport function preAliasPlugin(): Plugin {\n  let server: ViteDevServer\n  return {\n    name: 'vite:pre-alias',\n    configureServer(_server) {\n      server = _server\n    },\n    resolveId(id, importer, _, ssr) {\n      if (!ssr && bareImportRE.test(id)) {\n        return tryOptimizedResolve(id, server, importer)\n      }\n    }\n  }\n}\n","import MagicString from 'magic-string'\nimport { TransformResult } from 'rollup'\nimport { ResolvedConfig } from '../config'\nimport { Plugin } from '../plugin'\nimport { isCSSRequest } from './css'\n\nexport function definePlugin(config: ResolvedConfig): Plugin {\n  const isBuild = config.command === 'build'\n\n  const userDefine: Record<string, string> = {}\n  for (const key in config.define) {\n    const val = config.define[key]\n    userDefine[key] = typeof val === 'string' ? val : JSON.stringify(val)\n  }\n\n  // during dev, import.meta properties are handled by importAnalysis plugin\n  const importMetaKeys: Record<string, string> = {}\n  if (isBuild) {\n    const env: Record<string, any> = {\n      ...config.env,\n      SSR: !!config.build.ssr\n    }\n    for (const key in env) {\n      importMetaKeys[`import.meta.env.${key}`] = JSON.stringify(env[key])\n    }\n    Object.assign(importMetaKeys, {\n      'import.meta.env.': `({}).`,\n      'import.meta.env': JSON.stringify(config.env),\n      'import.meta.hot': `false`\n    })\n  }\n\n  const replacements: Record<string, string | undefined> = {\n    'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV || config.mode),\n    'global.process.env.NODE_ENV': JSON.stringify(\n      process.env.NODE_ENV || config.mode\n    ),\n    'globalThis.process.env.NODE_ENV': JSON.stringify(\n      process.env.NODE_ENV || config.mode\n    ),\n    ...userDefine,\n    ...importMetaKeys,\n    'process.env.': `({}).`,\n    'global.process.env.': `({}).`,\n    'globalThis.process.env.': `({}).`\n  }\n\n  const pattern = new RegExp(\n    // Do not allow preceding '.', but do allow preceding '...' for spread operations\n    '(?<!(?<!\\\\.\\\\.)\\\\.)\\\\b(' +\n      Object.keys(replacements)\n        .map((str) => {\n          return str.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&')\n        })\n        .join('|') +\n      ')\\\\b',\n    'g'\n  )\n\n  return {\n    name: 'vite:define',\n    transform(code, id, ssr) {\n      if (!ssr && !isBuild) {\n        // for dev we inject actual global defines in the vite client to\n        // avoid the transform cost.\n        return\n      }\n\n      if (\n        // exclude css and static assets for performance\n        isCSSRequest(id) ||\n        config.assetsInclude(id)\n      ) {\n        return\n      }\n\n      if (ssr && !isBuild) {\n        // ssr + dev, simple replace\n        return code.replace(pattern, (_, match) => {\n          return '' + replacements[match]\n        })\n      }\n\n      const s = new MagicString(code)\n      let hasReplaced = false\n      let match: RegExpExecArray | null\n\n      while ((match = pattern.exec(code))) {\n        hasReplaced = true\n        const start = match.index\n        const end = start + match[0].length\n        const replacement = '' + replacements[match[1]]\n        s.overwrite(start, end, replacement)\n      }\n\n      if (!hasReplaced) {\n        return null\n      }\n\n      const result: TransformResult = { code: s.toString() }\n      if (config.build.sourcemap) {\n        result.map = s.generateMap({ hires: true })\n      }\n      return result\n    }\n  }\n}\n","import { ResolvedConfig } from '../config'\nimport { Plugin } from '../plugin'\nimport aliasPlugin from '@rollup/plugin-alias'\nimport { jsonPlugin } from './json'\nimport { resolvePlugin } from './resolve'\nimport { esbuildPlugin } from './esbuild'\nimport { importAnalysisPlugin } from './importAnalysis'\nimport { cssPlugin, cssPostPlugin } from './css'\nimport { assetPlugin } from './asset'\nimport { clientInjectionsPlugin } from './clientInjections'\nimport { htmlInlineScriptProxyPlugin } from './html'\nimport { wasmPlugin } from './wasm'\nimport { modulePreloadPolyfillPlugin } from './modulePreloadPolyfill'\nimport { webWorkerPlugin } from './worker'\nimport { preAliasPlugin } from './preAlias'\nimport { definePlugin } from './define'\n\nexport async function resolvePlugins(\n  config: ResolvedConfig,\n  prePlugins: Plugin[],\n  normalPlugins: Plugin[],\n  postPlugins: Plugin[]\n): Promise<Plugin[]> {\n  const isBuild = config.command === 'build'\n\n  const buildPlugins = isBuild\n    ? (await import('../build')).resolveBuildPlugins(config)\n    : { pre: [], post: [] }\n\n  return [\n    isBuild ? null : preAliasPlugin(),\n    aliasPlugin({ entries: config.resolve.alias }),\n    ...prePlugins,\n    config.build.polyfillModulePreload\n      ? modulePreloadPolyfillPlugin(config)\n      : null,\n    resolvePlugin({\n      ...config.resolve,\n      root: config.root,\n      isProduction: config.isProduction,\n      isBuild,\n      ssrConfig: config.ssr,\n      asSrc: true\n    }),\n    htmlInlineScriptProxyPlugin(),\n    cssPlugin(config),\n    config.esbuild !== false ? esbuildPlugin(config.esbuild) : null,\n    jsonPlugin(\n      {\n        namedExports: true,\n        ...config.json\n      },\n      isBuild\n    ),\n    wasmPlugin(config),\n    webWorkerPlugin(config),\n    assetPlugin(config),\n    ...normalPlugins,\n    definePlugin(config),\n    cssPostPlugin(config),\n    ...buildPlugins.pre,\n    ...postPlugins,\n    ...buildPlugins.post,\n    // internal server-only plugins are always applied after everything else\n    ...(isBuild\n      ? []\n      : [clientInjectionsPlugin(config), importAnalysisPlugin(config)])\n  ].filter(Boolean) as Plugin[]\n}\n","import fs from 'fs'\nimport path from 'path'\nimport { Plugin } from './plugin'\nimport { BuildOptions, resolveBuildOptions } from './build'\nimport {\n  ResolvedServerOptions,\n  resolveServerOptions,\n  ServerOptions\n} from './server'\nimport { CSSOptions } from './plugins/css'\nimport {\n  arraify,\n  createDebugger,\n  isExternalUrl,\n  isObject,\n  lookupFile,\n  normalizePath\n} from './utils'\nimport { resolvePlugins } from './plugins'\nimport chalk from 'chalk'\nimport { ESBuildOptions } from './plugins/esbuild'\nimport dotenv from 'dotenv'\nimport dotenvExpand from 'dotenv-expand'\nimport { Alias, AliasOptions } from 'types/alias'\nimport { CLIENT_ENTRY, ENV_ENTRY, DEFAULT_ASSETS_RE } from './constants'\nimport {\n  InternalResolveOptions,\n  ResolveOptions,\n  resolvePlugin\n} from './plugins/resolve'\nimport { createLogger, Logger, LogLevel } from './logger'\nimport { DepOptimizationOptions } from './optimizer'\nimport { createFilter } from '@rollup/pluginutils'\nimport { ResolvedBuildOptions } from '.'\nimport { parse as parseUrl } from 'url'\nimport { JsonOptions } from './plugins/json'\nimport {\n  createPluginContainer,\n  PluginContainer\n} from './server/pluginContainer'\nimport aliasPlugin from '@rollup/plugin-alias'\nimport { build } from 'esbuild'\n\nconst debug = createDebugger('vite:config')\n\n// NOTE: every export in this file is re-exported from ./index.ts so it will\n// be part of the public API.\nexport interface ConfigEnv {\n  command: 'build' | 'serve'\n  mode: string\n}\n\nexport type UserConfigFn = (env: ConfigEnv) => UserConfig | Promise<UserConfig>\nexport type UserConfigExport = UserConfig | Promise<UserConfig> | UserConfigFn\n\n/**\n * Type helper to make it easier to use vite.config.ts\n * accepts a direct {@link UserConfig} object, or a function that returns it.\n * The function receives a {@link ConfigEnv} object that exposes two properties:\n * `command` (either `'build'` or `'serve'`), and `mode`.\n */\nexport function defineConfig(config: UserConfigExport): UserConfigExport {\n  return config\n}\n\nexport type PluginOption = Plugin | false | null | undefined\n\nexport interface UserConfig {\n  /**\n   * Project root directory. Can be an absolute path, or a path relative from\n   * the location of the config file itself.\n   * @default process.cwd()\n   */\n  root?: string\n  /**\n   * Base public path when served in development or production.\n   * @default '/'\n   */\n  base?: string\n  /**\n   * Directory to serve as plain static assets. Files in this directory are\n   * served and copied to build dist dir as-is without transform. The value\n   * can be either an absolute file system path or a path relative to <root>.\n   *\n   * Set to `false` or an empty string to disable copied static assets to build dist dir.\n   * @default 'public'\n   */\n  publicDir?: string | false\n  /**\n   * Directory to save cache files. Files in this directory are pre-bundled\n   * deps or some other cache files that generated by vite, which can improve\n   * the performance. You can use `--force` flag or manually delete the directory\n   * to regenerate the cache files. The value can be either an absolute file\n   * system path or a path relative to <root>.\n   * @default 'node_modules/.vite'\n   */\n  cacheDir?: string\n  /**\n   * Explicitly set a mode to run in. This will override the default mode for\n   * each command, and can be overridden by the command line --mode option.\n   */\n  mode?: string\n  /**\n   * Define global variable replacements.\n   * Entries will be defined on `window` during dev and replaced during build.\n   */\n  define?: Record<string, any>\n  /**\n   * Array of vite plugins to use.\n   */\n  plugins?: (PluginOption | PluginOption[])[]\n  /**\n   * Configure resolver\n   */\n  resolve?: ResolveOptions & { alias?: AliasOptions }\n  /**\n   * CSS related options (preprocessors and CSS modules)\n   */\n  css?: CSSOptions\n  /**\n   * JSON loading options\n   */\n  json?: JsonOptions\n  /**\n   * Transform options to pass to esbuild.\n   * Or set to `false` to disable esbuild.\n   */\n  esbuild?: ESBuildOptions | false\n  /**\n   * Specify additional picomatch patterns to be treated as static assets.\n   */\n  assetsInclude?: string | RegExp | (string | RegExp)[]\n  /**\n   * Server specific options, e.g. host, port, https...\n   */\n  server?: ServerOptions\n  /**\n   * Build specific options\n   */\n  build?: BuildOptions\n  /**\n   * Dep optimization options\n   */\n  optimizeDeps?: DepOptimizationOptions\n  /**\n   * SSR specific options\n   * @alpha\n   */\n  ssr?: SSROptions\n  /**\n   * Log level.\n   * Default: 'info'\n   */\n  logLevel?: LogLevel\n  /**\n   * Custom logger.\n   */\n  customLogger?: Logger\n  /**\n   * Default: true\n   */\n  clearScreen?: boolean\n  /**\n   * Environment files directory. Can be an absolute path, or a path relative from\n   * the location of the config file itself.\n   * @default root\n   */\n  envDir?: string\n  /**\n   * Env variables starts with `envPrefix` will be exposed to your client source code via import.meta.env.\n   * @default 'VITE_'\n   */\n  envPrefix?: string | string[]\n  /**\n   * Import aliases\n   * @deprecated use `resolve.alias` instead\n   */\n  alias?: AliasOptions\n  /**\n   * Force Vite to always resolve listed dependencies to the same copy (from\n   * project root).\n   * @deprecated use `resolve.dedupe` instead\n   */\n  dedupe?: string[]\n}\n\nexport type SSRTarget = 'node' | 'webworker'\n\nexport interface SSROptions {\n  external?: string[]\n  noExternal?: string | RegExp | (string | RegExp)[] | true\n  /**\n   * Define the target for the ssr build. The browser field in package.json\n   * is ignored for node but used if webworker is the target\n   * Default: 'node'\n   */\n  target?: SSRTarget\n}\n\nexport interface InlineConfig extends UserConfig {\n  configFile?: string | false\n  envFile?: false\n}\n\nexport type ResolvedConfig = Readonly<\n  Omit<\n    UserConfig,\n    'plugins' | 'alias' | 'dedupe' | 'assetsInclude' | 'optimizeDeps'\n  > & {\n    configFile: string | undefined\n    configFileDependencies: string[]\n    inlineConfig: InlineConfig\n    root: string\n    base: string\n    publicDir: string\n    command: 'build' | 'serve'\n    mode: string\n    isProduction: boolean\n    env: Record<string, any>\n    resolve: ResolveOptions & {\n      alias: Alias[]\n    }\n    plugins: readonly Plugin[]\n    server: ResolvedServerOptions\n    build: ResolvedBuildOptions\n    assetsInclude: (file: string) => boolean\n    logger: Logger\n    createResolver: (options?: Partial<InternalResolveOptions>) => ResolveFn\n    optimizeDeps: Omit<DepOptimizationOptions, 'keepNames'>\n  }\n>\n\nexport type ResolveFn = (\n  id: string,\n  importer?: string,\n  aliasOnly?: boolean,\n  ssr?: boolean\n) => Promise<string | undefined>\n\nexport async function resolveConfig(\n  inlineConfig: InlineConfig,\n  command: 'build' | 'serve',\n  defaultMode = 'development'\n): Promise<ResolvedConfig> {\n  let config = inlineConfig\n  let configFileDependencies: string[] = []\n  let mode = inlineConfig.mode || defaultMode\n\n  // some dependencies e.g. @vue/compiler-* relies on NODE_ENV for getting\n  // production-specific behavior, so set it here even though we haven't\n  // resolve the final mode yet\n  if (mode === 'production') {\n    process.env.NODE_ENV = 'production'\n  }\n\n  const configEnv = {\n    mode,\n    command\n  }\n\n  let { configFile } = config\n  if (configFile !== false) {\n    const loadResult = await loadConfigFromFile(\n      configEnv,\n      configFile,\n      config.root,\n      config.logLevel\n    )\n    if (loadResult) {\n      config = mergeConfig(loadResult.config, config)\n      configFile = loadResult.path\n      configFileDependencies = loadResult.dependencies\n    }\n  }\n\n  // Define logger\n  const logger = createLogger(config.logLevel, {\n    allowClearScreen: config.clearScreen,\n    customLogger: config.customLogger\n  })\n\n  // user config may provide an alternative mode. But --mode has a higher prority\n  mode = inlineConfig.mode || config.mode || mode\n  configEnv.mode = mode\n\n  // resolve plugins\n  const rawUserPlugins = (config.plugins || []).flat().filter((p) => {\n    if (!p) {\n      return false\n    } else if (!p.apply) {\n      return true\n    } else if (typeof p.apply === 'function') {\n      return p.apply({ ...config, mode }, configEnv)\n    } else {\n      return p.apply === command\n    }\n  }) as Plugin[]\n  const [prePlugins, normalPlugins, postPlugins] =\n    sortUserPlugins(rawUserPlugins)\n\n  // run config hooks\n  const userPlugins = [...prePlugins, ...normalPlugins, ...postPlugins]\n  for (const p of userPlugins) {\n    if (p.config) {\n      const res = await p.config(config, configEnv)\n      if (res) {\n        config = mergeConfig(config, res)\n      }\n    }\n  }\n\n  // resolve root\n  const resolvedRoot = normalizePath(\n    config.root ? path.resolve(config.root) : process.cwd()\n  )\n\n  const clientAlias = [\n    { find: /^[\\/]?@vite\\/env/, replacement: () => ENV_ENTRY },\n    { find: /^[\\/]?@vite\\/client/, replacement: () => CLIENT_ENTRY }\n  ]\n\n  // resolve alias with internal client alias\n  const resolvedAlias = mergeAlias(\n    // @ts-ignore because @rollup/plugin-alias' type doesn't allow function\n    // replacement, but its implementation does work with function values.\n    clientAlias,\n    config.resolve?.alias || config.alias || []\n  )\n\n  const resolveOptions: ResolvedConfig['resolve'] = {\n    dedupe: config.dedupe,\n    ...config.resolve,\n    alias: resolvedAlias\n  }\n\n  // load .env files\n  const envDir = config.envDir\n    ? normalizePath(path.resolve(resolvedRoot, config.envDir))\n    : resolvedRoot\n  const userEnv =\n    inlineConfig.envFile !== false &&\n    loadEnv(mode, envDir, resolveEnvPrefix(config))\n\n  // Note it is possible for user to have a custom mode, e.g. `staging` where\n  // production-like behavior is expected. This is indicated by NODE_ENV=production\n  // loaded from `.staging.env` and set by us as VITE_USER_NODE_ENV\n  const isProduction = (process.env.VITE_USER_NODE_ENV || mode) === 'production'\n  if (isProduction) {\n    // in case default mode was not production and is overwritten\n    process.env.NODE_ENV = 'production'\n  }\n\n  // resolve public base url\n  const BASE_URL = resolveBaseUrl(config.base, command === 'build', logger)\n  const resolvedBuildOptions = resolveBuildOptions(config.build)\n\n  // resolve cache directory\n  const pkgPath = lookupFile(\n    resolvedRoot,\n    [`package.json`],\n    true /* pathOnly */\n  )\n  const cacheDir = config.cacheDir\n    ? path.resolve(resolvedRoot, config.cacheDir)\n    : pkgPath && path.join(path.dirname(pkgPath), `node_modules/.vite`)\n\n  const assetsFilter = config.assetsInclude\n    ? createFilter(config.assetsInclude)\n    : () => false\n\n  // create an internal resolver to be used in special scenarios, e.g.\n  // optimizer & handling css @imports\n  const createResolver: ResolvedConfig['createResolver'] = (options) => {\n    let aliasContainer: PluginContainer | undefined\n    let resolverContainer: PluginContainer | undefined\n    return async (id, importer, aliasOnly, ssr) => {\n      let container: PluginContainer\n      if (aliasOnly) {\n        container =\n          aliasContainer ||\n          (aliasContainer = await createPluginContainer({\n            ...resolved,\n            plugins: [aliasPlugin({ entries: resolved.resolve.alias })]\n          }))\n      } else {\n        container =\n          resolverContainer ||\n          (resolverContainer = await createPluginContainer({\n            ...resolved,\n            plugins: [\n              aliasPlugin({ entries: resolved.resolve.alias }),\n              resolvePlugin({\n                ...resolved.resolve,\n                root: resolvedRoot,\n                isProduction,\n                isBuild: command === 'build',\n                ssrConfig: resolved.ssr,\n                asSrc: true,\n                preferRelative: false,\n                tryIndex: true,\n                ...options\n              })\n            ]\n          }))\n      }\n      return (await container.resolveId(id, importer, undefined, ssr))?.id\n    }\n  }\n\n  const { publicDir } = config\n  const resolvedPublicDir =\n    publicDir !== false && publicDir !== ''\n      ? path.resolve(\n          resolvedRoot,\n          typeof publicDir === 'string' ? publicDir : 'public'\n        )\n      : ''\n\n  const resolved: ResolvedConfig = {\n    ...config,\n    configFile: configFile ? normalizePath(configFile) : undefined,\n    configFileDependencies,\n    inlineConfig,\n    root: resolvedRoot,\n    base: BASE_URL,\n    resolve: resolveOptions,\n    publicDir: resolvedPublicDir,\n    cacheDir,\n    command,\n    mode,\n    isProduction,\n    plugins: userPlugins,\n    server: resolveServerOptions(resolvedRoot, config.server),\n    build: resolvedBuildOptions,\n    env: {\n      ...userEnv,\n      BASE_URL,\n      MODE: mode,\n      DEV: !isProduction,\n      PROD: isProduction\n    },\n    assetsInclude(file: string) {\n      return DEFAULT_ASSETS_RE.test(file) || assetsFilter(file)\n    },\n    logger,\n    createResolver,\n    optimizeDeps: {\n      ...config.optimizeDeps,\n      esbuildOptions: {\n        keepNames: config.optimizeDeps?.keepNames,\n        preserveSymlinks: config.resolve?.preserveSymlinks,\n        ...config.optimizeDeps?.esbuildOptions\n      }\n    }\n  }\n\n  ;(resolved.plugins as Plugin[]) = await resolvePlugins(\n    resolved,\n    prePlugins,\n    normalPlugins,\n    postPlugins\n  )\n\n  // call configResolved hooks\n  await Promise.all(userPlugins.map((p) => p.configResolved?.(resolved)))\n\n  if (process.env.DEBUG) {\n    debug(`using resolved config: %O`, {\n      ...resolved,\n      plugins: resolved.plugins.map((p) => p.name)\n    })\n  }\n\n  // TODO Deprecation warnings - remove when out of beta\n\n  const logDeprecationWarning = (\n    deprecatedOption: string,\n    hint: string,\n    error?: Error\n  ) => {\n    logger.warn(\n      chalk.yellow.bold(\n        `(!) \"${deprecatedOption}\" option is deprecated. ${hint}${\n          error ? `\\n${error.stack}` : ''\n        }`\n      )\n    )\n  }\n\n  if (config.build?.base) {\n    logDeprecationWarning(\n      'build.base',\n      '\"base\" is now a root-level config option.'\n    )\n    config.base = config.build.base\n  }\n  Object.defineProperty(resolvedBuildOptions, 'base', {\n    enumerable: false,\n    get() {\n      logDeprecationWarning(\n        'build.base',\n        '\"base\" is now a root-level config option.',\n        new Error()\n      )\n      return resolved.base\n    }\n  })\n\n  if (config.alias) {\n    logDeprecationWarning('alias', 'Use \"resolve.alias\" instead.')\n  }\n  Object.defineProperty(resolved, 'alias', {\n    enumerable: false,\n    get() {\n      logDeprecationWarning(\n        'alias',\n        'Use \"resolve.alias\" instead.',\n        new Error()\n      )\n      return resolved.resolve.alias\n    }\n  })\n\n  if (config.dedupe) {\n    logDeprecationWarning('dedupe', 'Use \"resolve.dedupe\" instead.')\n  }\n  Object.defineProperty(resolved, 'dedupe', {\n    enumerable: false,\n    get() {\n      logDeprecationWarning(\n        'dedupe',\n        'Use \"resolve.dedupe\" instead.',\n        new Error()\n      )\n      return resolved.resolve.dedupe\n    }\n  })\n\n  if (config.optimizeDeps?.keepNames) {\n    logDeprecationWarning(\n      'optimizeDeps.keepNames',\n      'Use \"optimizeDeps.esbuildOptions.keepNames\" instead.'\n    )\n  }\n  Object.defineProperty(resolved.optimizeDeps, 'keepNames', {\n    enumerable: false,\n    get() {\n      logDeprecationWarning(\n        'optimizeDeps.keepNames',\n        'Use \"optimizeDeps.esbuildOptions.keepNames\" instead.',\n        new Error()\n      )\n      return resolved.optimizeDeps.esbuildOptions?.keepNames\n    }\n  })\n\n  if (config.build?.polyfillDynamicImport) {\n    logDeprecationWarning(\n      'build.polyfillDynamicImport',\n      '\"polyfillDynamicImport\" has been removed. Please use @vitejs/plugin-legacy if your target browsers do not support dynamic imports.'\n    )\n  }\n\n  Object.defineProperty(resolvedBuildOptions, 'polyfillDynamicImport', {\n    enumerable: false,\n    get() {\n      logDeprecationWarning(\n        'build.polyfillDynamicImport',\n        '\"polyfillDynamicImport\" has been removed. Please use @vitejs/plugin-legacy if your target browsers do not support dynamic imports.',\n        new Error()\n      )\n      return false\n    }\n  })\n\n  if (config.build?.cleanCssOptions) {\n    logDeprecationWarning(\n      'build.cleanCssOptions',\n      'Vite now uses esbuild for CSS minification.'\n    )\n  }\n\n  return resolved\n}\n\n/**\n * Resolve base. Note that some users use Vite to build for non-web targets like\n * electron or expects to deploy\n */\nfunction resolveBaseUrl(\n  base: UserConfig['base'] = '/',\n  isBuild: boolean,\n  logger: Logger\n): string {\n  // #1669 special treatment for empty for same dir relative base\n  if (base === '' || base === './') {\n    return isBuild ? base : '/'\n  }\n  if (base.startsWith('.')) {\n    logger.warn(\n      chalk.yellow.bold(\n        `(!) invalid \"base\" option: ${base}. The value can only be an absolute ` +\n          `URL, ./, or an empty string.`\n      )\n    )\n    base = '/'\n  }\n\n  // external URL\n  if (isExternalUrl(base)) {\n    if (!isBuild) {\n      // get base from full url during dev\n      const parsed = parseUrl(base)\n      base = parsed.pathname || '/'\n    }\n  } else {\n    // ensure leading slash\n    if (!base.startsWith('/')) {\n      logger.warn(\n        chalk.yellow.bold(`(!) \"base\" option should start with a slash.`)\n      )\n      base = '/' + base\n    }\n  }\n\n  // ensure ending slash\n  if (!base.endsWith('/')) {\n    logger.warn(chalk.yellow.bold(`(!) \"base\" option should end with a slash.`))\n    base += '/'\n  }\n\n  return base\n}\n\nfunction mergeConfigRecursively(\n  a: Record<string, any>,\n  b: Record<string, any>,\n  rootPath: string\n) {\n  const merged: Record<string, any> = { ...a }\n  for (const key in b) {\n    const value = b[key]\n    if (value == null) {\n      continue\n    }\n\n    const existing = merged[key]\n    if (Array.isArray(existing) && Array.isArray(value)) {\n      merged[key] = [...existing, ...value]\n      continue\n    }\n    if (isObject(existing) && isObject(value)) {\n      merged[key] = mergeConfigRecursively(\n        existing,\n        value,\n        rootPath ? `${rootPath}.${key}` : key\n      )\n      continue\n    }\n\n    // fields that require special handling\n    if (existing != null) {\n      if (key === 'alias' && (rootPath === 'resolve' || rootPath === '')) {\n        merged[key] = mergeAlias(existing, value)\n        continue\n      } else if (key === 'assetsInclude' && rootPath === '') {\n        merged[key] = [].concat(existing, value)\n        continue\n      } else if (key === 'noExternal' && existing === true) {\n        continue\n      }\n    }\n\n    merged[key] = value\n  }\n  return merged\n}\n\nexport function mergeConfig(\n  a: Record<string, any>,\n  b: Record<string, any>,\n  isRoot = true\n): Record<string, any> {\n  return mergeConfigRecursively(a, b, isRoot ? '' : '.')\n}\n\nfunction mergeAlias(a: AliasOptions = [], b: AliasOptions = []): Alias[] {\n  return [...normalizeAlias(a), ...normalizeAlias(b)]\n}\n\nfunction normalizeAlias(o: AliasOptions): Alias[] {\n  return Array.isArray(o)\n    ? o.map(normalizeSingleAlias)\n    : Object.keys(o).map((find) =>\n        normalizeSingleAlias({\n          find,\n          replacement: (o as any)[find]\n        })\n      )\n}\n\n// https://github.com/vitejs/vite/issues/1363\n// work around https://github.com/rollup/plugins/issues/759\nfunction normalizeSingleAlias({ find, replacement }: Alias): Alias {\n  if (\n    typeof find === 'string' &&\n    find.endsWith('/') &&\n    replacement.endsWith('/')\n  ) {\n    find = find.slice(0, find.length - 1)\n    replacement = replacement.slice(0, replacement.length - 1)\n  }\n  return { find, replacement }\n}\n\nexport function sortUserPlugins(\n  plugins: (Plugin | Plugin[])[] | undefined\n): [Plugin[], Plugin[], Plugin[]] {\n  const prePlugins: Plugin[] = []\n  const postPlugins: Plugin[] = []\n  const normalPlugins: Plugin[] = []\n\n  if (plugins) {\n    plugins.flat().forEach((p) => {\n      if (p.enforce === 'pre') prePlugins.push(p)\n      else if (p.enforce === 'post') postPlugins.push(p)\n      else normalPlugins.push(p)\n    })\n  }\n\n  return [prePlugins, normalPlugins, postPlugins]\n}\n\nexport async function loadConfigFromFile(\n  configEnv: ConfigEnv,\n  configFile?: string,\n  configRoot: string = process.cwd(),\n  logLevel?: LogLevel\n): Promise<{\n  path: string\n  config: UserConfig\n  dependencies: string[]\n} | null> {\n  const start = Date.now()\n\n  let resolvedPath: string | undefined\n  let isTS = false\n  let isMjs = false\n  let dependencies: string[] = []\n\n  // check package.json for type: \"module\" and set `isMjs` to true\n  try {\n    const pkg = lookupFile(configRoot, ['package.json'])\n    if (pkg && JSON.parse(pkg).type === 'module') {\n      isMjs = true\n    }\n  } catch (e) {}\n\n  if (configFile) {\n    // explicit config path is always resolved from cwd\n    resolvedPath = path.resolve(configFile)\n    isTS = configFile.endsWith('.ts')\n  } else {\n    // implicit config file loaded from inline root (if present)\n    // otherwise from cwd\n    const jsconfigFile = path.resolve(configRoot, 'vite.config.js')\n    if (fs.existsSync(jsconfigFile)) {\n      resolvedPath = jsconfigFile\n    }\n\n    if (!resolvedPath) {\n      const mjsconfigFile = path.resolve(configRoot, 'vite.config.mjs')\n      if (fs.existsSync(mjsconfigFile)) {\n        resolvedPath = mjsconfigFile\n        isMjs = true\n      }\n    }\n\n    if (!resolvedPath) {\n      const tsconfigFile = path.resolve(configRoot, 'vite.config.ts')\n      if (fs.existsSync(tsconfigFile)) {\n        resolvedPath = tsconfigFile\n        isTS = true\n      }\n    }\n  }\n\n  if (!resolvedPath) {\n    debug('no config file found.')\n    return null\n  }\n\n  try {\n    let userConfig: UserConfigExport | undefined\n\n    if (isMjs) {\n      const fileUrl = require('url').pathToFileURL(resolvedPath)\n      if (isTS) {\n        // before we can register loaders without requiring users to run node\n        // with --experimental-loader themselves, we have to do a hack here:\n        // bundle the config file w/ ts transforms first, write it to disk,\n        // load it with native Node ESM, then delete the file.\n        const bundled = await bundleConfigFile(resolvedPath, true)\n        dependencies = bundled.dependencies\n        fs.writeFileSync(resolvedPath + '.js', bundled.code)\n        userConfig = (await eval(`import(fileUrl + '.js?t=${Date.now()}')`))\n          .default\n        fs.unlinkSync(resolvedPath + '.js')\n        debug(\n          `TS + native esm config loaded in ${Date.now() - start}ms`,\n          fileUrl\n        )\n      } else {\n        // using eval to avoid this from being compiled away by TS/Rollup\n        // append a query so that we force reload fresh config in case of\n        // server restart\n        userConfig = (await eval(`import(fileUrl + '?t=${Date.now()}')`))\n          .default\n        debug(`native esm config loaded in ${Date.now() - start}ms`, fileUrl)\n      }\n    }\n\n    if (!userConfig && !isTS && !isMjs) {\n      // 1. try to directly require the module (assuming commonjs)\n      try {\n        // clear cache in case of server restart\n        delete require.cache[require.resolve(resolvedPath)]\n        userConfig = require(resolvedPath)\n        debug(`cjs config loaded in ${Date.now() - start}ms`)\n      } catch (e) {\n        const ignored = new RegExp(\n          [\n            `Cannot use import statement`,\n            `Must use import to load ES Module`,\n            // #1635, #2050 some Node 12.x versions don't have esm detection\n            // so it throws normal syntax errors when encountering esm syntax\n            `Unexpected token`,\n            `Unexpected identifier`\n          ].join('|')\n        )\n        if (!ignored.test(e.message)) {\n          throw e\n        }\n      }\n    }\n\n    if (!userConfig) {\n      // 2. if we reach here, the file is ts or using es import syntax, or\n      // the user has type: \"module\" in their package.json (#917)\n      // transpile es import syntax to require syntax using rollup.\n      // lazy require rollup (it's actually in dependencies)\n      const bundled = await bundleConfigFile(resolvedPath)\n      dependencies = bundled.dependencies\n      userConfig = await loadConfigFromBundledFile(resolvedPath, bundled.code)\n      debug(`bundled config file loaded in ${Date.now() - start}ms`)\n    }\n\n    const config = await (typeof userConfig === 'function'\n      ? userConfig(configEnv)\n      : userConfig)\n    if (!isObject(config)) {\n      throw new Error(`config must export or return an object.`)\n    }\n    return {\n      path: normalizePath(resolvedPath),\n      config,\n      dependencies\n    }\n  } catch (e) {\n    createLogger(logLevel).error(\n      chalk.red(`failed to load config from ${resolvedPath}`),\n      { error: e }\n    )\n    throw e\n  }\n}\n\nasync function bundleConfigFile(\n  fileName: string,\n  mjs = false\n): Promise<{ code: string; dependencies: string[] }> {\n  const result = await build({\n    absWorkingDir: process.cwd(),\n    entryPoints: [fileName],\n    outfile: 'out.js',\n    write: false,\n    platform: 'node',\n    bundle: true,\n    format: mjs ? 'esm' : 'cjs',\n    sourcemap: 'inline',\n    metafile: true,\n    plugins: [\n      {\n        name: 'externalize-deps',\n        setup(build) {\n          build.onResolve({ filter: /.*/ }, (args) => {\n            const id = args.path\n            if (id[0] !== '.' && !path.isAbsolute(id)) {\n              return {\n                external: true\n              }\n            }\n          })\n        }\n      },\n      {\n        name: 'replace-import-meta',\n        setup(build) {\n          build.onLoad({ filter: /\\.[jt]s$/ }, async (args) => {\n            const contents = await fs.promises.readFile(args.path, 'utf8')\n            return {\n              loader: args.path.endsWith('.ts') ? 'ts' : 'js',\n              contents: contents\n                .replace(\n                  /\\bimport\\.meta\\.url\\b/g,\n                  JSON.stringify(`file://${args.path}`)\n                )\n                .replace(\n                  /\\b__dirname\\b/g,\n                  JSON.stringify(path.dirname(args.path))\n                )\n                .replace(/\\b__filename\\b/g, JSON.stringify(args.path))\n            }\n          })\n        }\n      }\n    ]\n  })\n  const { text } = result.outputFiles[0]\n  return {\n    code: text,\n    dependencies: result.metafile ? Object.keys(result.metafile.inputs) : []\n  }\n}\n\ninterface NodeModuleWithCompile extends NodeModule {\n  _compile(code: string, filename: string): any\n}\n\nasync function loadConfigFromBundledFile(\n  fileName: string,\n  bundledCode: string\n): Promise<UserConfig> {\n  const extension = path.extname(fileName)\n  const defaultLoader = require.extensions[extension]!\n  require.extensions[extension] = (module: NodeModule, filename: string) => {\n    if (filename === fileName) {\n      ;(module as NodeModuleWithCompile)._compile(bundledCode, filename)\n    } else {\n      defaultLoader(module, filename)\n    }\n  }\n  // clear cache in case of server restart\n  delete require.cache[require.resolve(fileName)]\n  const raw = require(fileName)\n  const config = raw.__esModule ? raw.default : raw\n  require.extensions[extension] = defaultLoader\n  return config\n}\n\nexport function loadEnv(\n  mode: string,\n  envDir: string,\n  prefixes: string | string[] = 'VITE_'\n): Record<string, string> {\n  if (mode === 'local') {\n    throw new Error(\n      `\"local\" cannot be used as a mode name because it conflicts with ` +\n        `the .local postfix for .env files.`\n    )\n  }\n  prefixes = arraify(prefixes)\n  const env: Record<string, string> = {}\n  const envFiles = [\n    /** mode local file */ `.env.${mode}.local`,\n    /** mode file */ `.env.${mode}`,\n    /** local file */ `.env.local`,\n    /** default file */ `.env`\n  ]\n\n  // check if there are actual env variables starting with VITE_*\n  // these are typically provided inline and should be prioritized\n  for (const key in process.env) {\n    if (\n      prefixes.some((prefix) => key.startsWith(prefix)) &&\n      env[key] === undefined\n    ) {\n      env[key] = process.env[key] as string\n    }\n  }\n\n  for (const file of envFiles) {\n    const path = lookupFile(envDir, [file], true)\n    if (path) {\n      const parsed = dotenv.parse(fs.readFileSync(path), {\n        debug: !!process.env.DEBUG || undefined\n      })\n\n      // let environment variables use each other\n      dotenvExpand({\n        parsed,\n        // prevent process.env mutation\n        ignoreProcessEnv: true\n      } as any)\n\n      // only keys that start with prefix are exposed to client\n      for (const [key, value] of Object.entries(parsed)) {\n        if (\n          prefixes.some((prefix) => key.startsWith(prefix)) &&\n          env[key] === undefined\n        ) {\n          env[key] = value\n        } else if (key === 'NODE_ENV') {\n          // NODE_ENV override in .env file\n          process.env.VITE_USER_NODE_ENV = value\n        }\n      }\n    }\n  }\n  return env\n}\n\nexport function resolveEnvPrefix({\n  envPrefix = 'VITE_'\n}: UserConfig): string[] {\n  envPrefix = arraify(envPrefix)\n  if (envPrefix.some((prefix) => prefix === '')) {\n    throw new Error(\n      `envPrefix option contains value '', which could lead unexpected exposure of sensitive information.`\n    )\n  }\n  return envPrefix\n}\n"],"names":["path","builtins","resolve","debug","os","url","URL","pathToFileURL","chalk","fs","remapping","readline","promisify","gzip","Mime","require$$0","require$$1","fsp","MagicString","mime","parseUrl","createHash","dataToEsm","glob","postcssrc","transform","formatMessages","error","init","parseImports","scriptModuleRE","commentRE","createFilter","parse","TSConfckParseError","Worker","isDebug","_resolveExports","normalizePath","relative","strip","acorn","acornClassFields","acornStaticClassFeatures","join","build","commonjsPlugin","dynamicImportVars","WebSocket","createHttpsServer","STATUS_CODES","httpProxy","history","getEtag","extractNames","eswalk","sirv","debugCache","convertSourceMap","extname","match","execa","execSync","open","SourceMapConsumer","dirname","connect","chokidar","corsMiddleware","launchEditorMiddleware","parseJS","makeLegalIdentifier","URLSearchParams","aliasPlugin","dotenv","dotenvExpand"],"mappings":"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"}