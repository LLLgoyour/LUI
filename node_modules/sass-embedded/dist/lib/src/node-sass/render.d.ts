/// <reference types="node" />
/**
 * Options that are passed to render().
 *
 * This attempts to match the Node Sass render options as closely as possible
 * (see: https://github.com/sass/node-sass#options).
 */
export declare type RenderOptions = (FileOptions | StringOptions) & SharedOptions;
interface FileOptions extends SharedOptions {
    file: string;
}
interface StringOptions extends SharedOptions {
    data: string;
    file?: string;
}
interface SharedOptions {
    omitSourceMapUrl?: boolean;
    outFile?: string | null;
    sourceMap?: boolean | string;
    sourceMapEmbed?: boolean;
    sourceMapRoot?: string;
}
/**
 * The result returned by render().
 *
 * This attempts to match the Node Sass result object as closely as possible
 * (see: https://github.com/sass/node-sass#result-object).
 */
export interface RenderResult {
    css: Buffer;
    map?: Buffer;
    stats: {
        start: number;
        end: number;
        duration: number;
        entry: string;
    };
}
/**
 * An error thrown by render().
 *
 * This attempts to match the Node Sass error object as closely as possible
 * (see: https://github.com/sass/node-sass#error-object).
 */
export interface RenderError extends Error {
    status: number;
    message: string;
    formatted?: string;
    line?: number;
    column?: number;
    file?: string;
}
/**
 * Converts Sass to CSS.
 *
 * This attempts to match the Node Sass `render()` API as closely as possible
 * (see: https://github.com/sass/node-sass#usage).
 */
export declare function render(options: RenderOptions, callback: (error?: RenderError, result?: RenderResult) => void): void;
export {};
