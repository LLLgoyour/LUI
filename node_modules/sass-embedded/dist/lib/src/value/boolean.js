"use strict";
// Copyright 2021 Google Inc. Use of this source code is governed by an
// MIT-style license that can be found in the LICENSE file or at
// https://opensource.org/licenses/MIT.
Object.defineProperty(exports, "__esModule", { value: true });
const immutable_1 = require("immutable");
const value_1 = require("./value");
const trueHash = immutable_1.hash(true);
const falseHash = immutable_1.hash(false);
class SassBooleanInternal extends value_1.Value {
    constructor(valueInternal) {
        super();
        this.valueInternal = valueInternal;
        Object.freeze(this);
    }
    get value() {
        return this.valueInternal;
    }
    get isTruthy() {
        return this.value;
    }
    assertBoolean() {
        return this;
    }
    equals(other) {
        return other instanceof SassBooleanInternal && this.value === other.value;
    }
    hashCode() {
        return this.value ? trueHash : falseHash;
    }
    toString() {
        return this.value ? 'sassTrue' : 'sassFalse';
    }
}
/** The singleton instance of SassScript true. */
exports.sassTrue = new SassBooleanInternal(true);
/** The singleton instance of SassScript false. */
exports.sassFalse = new SassBooleanInternal(false);
//# sourceMappingURL=boolean.js.map